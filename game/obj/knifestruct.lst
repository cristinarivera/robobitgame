                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.5 #9498 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module knifestruct
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _getTilePtr
                             12 	.globl _cpct_etm_drawTileBox2x4
                             13 	.globl _cpct_getScreenPtr
                             14 	.globl _cpct_drawSpriteMaskedAlignedTable
                             15 	.globl _dibujarCuchillo
                             16 	.globl _borrarCuchillo
                             17 	.globl _redibujarCuchillo
                             18 	.globl _lanzarCuchillo
                             19 	.globl _checkOffBounds
                             20 	.globl _checkKnifeCollision
                             21 	.globl _moverCuchillo
                             22 ;--------------------------------------------------------
                             23 ; special function registers
                             24 ;--------------------------------------------------------
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DATA
                             29 ;--------------------------------------------------------
                             30 ; ram data
                             31 ;--------------------------------------------------------
                             32 	.area _INITIALIZED
                             33 ;--------------------------------------------------------
                             34 ; absolute external ram data
                             35 ;--------------------------------------------------------
                             36 	.area _DABS (ABS)
                             37 ;--------------------------------------------------------
                             38 ; global & static initialisations
                             39 ;--------------------------------------------------------
                             40 	.area _HOME
                             41 	.area _GSINIT
                             42 	.area _GSFINAL
                             43 	.area _GSINIT
                             44 ;--------------------------------------------------------
                             45 ; Home
                             46 ;--------------------------------------------------------
                             47 	.area _HOME
                             48 	.area _HOME
                             49 ;--------------------------------------------------------
                             50 ; code
                             51 ;--------------------------------------------------------
                             52 	.area _CODE
                             53 ;src/knifestruct.c:3: void dibujarCuchillo(TKnife* cu, u8* g_tablatrans) {
                             54 ;	---------------------------------
                             55 ; Function dibujarCuchillo
                             56 ; ---------------------------------
   0000                      57 _dibujarCuchillo::
   0000 DD E5         [15]   58 	push	ix
   0002 DD 21 00 00   [14]   59 	ld	ix,#0
   0006 DD 39         [15]   60 	add	ix,sp
   0008 21 FA FF      [10]   61 	ld	hl,#-6
   000B 39            [11]   62 	add	hl,sp
   000C F9            [ 6]   63 	ld	sp,hl
                             64 ;src/knifestruct.c:4: u8* pvmem = cpct_getScreenPtr(CPCT_VMEM_START, cu->x, cu->y);
   000D DD 5E 04      [19]   65 	ld	e,4 (ix)
   0010 DD 56 05      [19]   66 	ld	d,5 (ix)
   0013 6B            [ 4]   67 	ld	l, e
   0014 62            [ 4]   68 	ld	h, d
   0015 23            [ 6]   69 	inc	hl
   0016 46            [ 7]   70 	ld	b,(hl)
   0017 1A            [ 7]   71 	ld	a,(de)
   0018 D5            [11]   72 	push	de
   0019 C5            [11]   73 	push	bc
   001A 33            [ 6]   74 	inc	sp
   001B F5            [11]   75 	push	af
   001C 33            [ 6]   76 	inc	sp
   001D 21 00 C0      [10]   77 	ld	hl,#0xC000
   0020 E5            [11]   78 	push	hl
   0021 CDr00r00      [17]   79 	call	_cpct_getScreenPtr
   0024 D1            [10]   80 	pop	de
   0025 33            [ 6]   81 	inc	sp
   0026 33            [ 6]   82 	inc	sp
   0027 E5            [11]   83 	push	hl
                             84 ;src/knifestruct.c:5: if(cu->eje == E_X){
   0028 D5            [11]   85 	push	de
   0029 FD E1         [14]   86 	pop	iy
   002B FD 4E 08      [19]   87 	ld	c,8 (iy)
                             88 ;src/knifestruct.c:6: cpct_drawSpriteMaskedAlignedTable (cu->sprite, pvmem, G_KNIFEX_0_W, G_KNIFEX_0_H, g_tablatrans);
   002E DD 7E 06      [19]   89 	ld	a,6 (ix)
   0031 DD 77 FC      [19]   90 	ld	-4 (ix),a
   0034 DD 7E 07      [19]   91 	ld	a,7 (ix)
   0037 DD 77 FD      [19]   92 	ld	-3 (ix),a
   003A DD 7E FA      [19]   93 	ld	a,-6 (ix)
   003D DD 77 FE      [19]   94 	ld	-2 (ix),a
   0040 DD 7E FB      [19]   95 	ld	a,-5 (ix)
   0043 DD 77 FF      [19]   96 	ld	-1 (ix),a
   0046 13            [ 6]   97 	inc	de
   0047 13            [ 6]   98 	inc	de
   0048 13            [ 6]   99 	inc	de
   0049 13            [ 6]  100 	inc	de
                            101 ;src/knifestruct.c:5: if(cu->eje == E_X){
   004A 79            [ 4]  102 	ld	a,c
   004B B7            [ 4]  103 	or	a, a
   004C 20 1A         [12]  104 	jr	NZ,00104$
                            105 ;src/knifestruct.c:6: cpct_drawSpriteMaskedAlignedTable (cu->sprite, pvmem, G_KNIFEX_0_W, G_KNIFEX_0_H, g_tablatrans);
   004E EB            [ 4]  106 	ex	de,hl
   004F 4E            [ 7]  107 	ld	c,(hl)
   0050 23            [ 6]  108 	inc	hl
   0051 46            [ 7]  109 	ld	b,(hl)
   0052 D1            [10]  110 	pop	de
   0053 E1            [10]  111 	pop	hl
   0054 E5            [11]  112 	push	hl
   0055 D5            [11]  113 	push	de
   0056 E5            [11]  114 	push	hl
   0057 21 04 04      [10]  115 	ld	hl,#0x0404
   005A E5            [11]  116 	push	hl
   005B DD 6E FE      [19]  117 	ld	l,-2 (ix)
   005E DD 66 FF      [19]  118 	ld	h,-1 (ix)
   0061 E5            [11]  119 	push	hl
   0062 C5            [11]  120 	push	bc
   0063 CDr00r00      [17]  121 	call	_cpct_drawSpriteMaskedAlignedTable
   0066 18 1B         [12]  122 	jr	00106$
   0068                     123 00104$:
                            124 ;src/knifestruct.c:9: else if(cu->eje == E_Y){
   0068 0D            [ 4]  125 	dec	c
   0069 20 18         [12]  126 	jr	NZ,00106$
                            127 ;src/knifestruct.c:10: cpct_drawSpriteMaskedAlignedTable (cu->sprite, pvmem, G_KNIFEY_0_W, G_KNIFEY_0_H, g_tablatrans);
   006B EB            [ 4]  128 	ex	de,hl
   006C 4E            [ 7]  129 	ld	c,(hl)
   006D 23            [ 6]  130 	inc	hl
   006E 46            [ 7]  131 	ld	b,(hl)
   006F D1            [10]  132 	pop	de
   0070 E1            [10]  133 	pop	hl
   0071 E5            [11]  134 	push	hl
   0072 D5            [11]  135 	push	de
   0073 E5            [11]  136 	push	hl
   0074 21 02 08      [10]  137 	ld	hl,#0x0802
   0077 E5            [11]  138 	push	hl
   0078 DD 6E FE      [19]  139 	ld	l,-2 (ix)
   007B DD 66 FF      [19]  140 	ld	h,-1 (ix)
   007E E5            [11]  141 	push	hl
   007F C5            [11]  142 	push	bc
   0080 CDr00r00      [17]  143 	call	_cpct_drawSpriteMaskedAlignedTable
   0083                     144 00106$:
   0083 DD F9         [10]  145 	ld	sp, ix
   0085 DD E1         [14]  146 	pop	ix
   0087 C9            [10]  147 	ret
                            148 ;src/knifestruct.c:14: void borrarCuchillo(u8 eje, u8 x, u8 y, u8* mapa) {
                            149 ;	---------------------------------
                            150 ; Function borrarCuchillo
                            151 ; ---------------------------------
   0088                     152 _borrarCuchillo::
   0088 DD E5         [15]  153 	push	ix
   008A DD 21 00 00   [14]  154 	ld	ix,#0
   008E DD 39         [15]  155 	add	ix,sp
   0090 F5            [11]  156 	push	af
   0091 F5            [11]  157 	push	af
                            158 ;src/knifestruct.c:20: w = 4 + (x & 1);
   0092 DD 7E 05      [19]  159 	ld	a,5 (ix)
   0095 E6 01         [ 7]  160 	and	a, #0x01
   0097 47            [ 4]  161 	ld	b,a
                            162 ;src/knifestruct.c:21: h = 1 + (y & 3 ? 1 : 0);
   0098 DD 7E 06      [19]  163 	ld	a,6 (ix)
   009B E6 03         [ 7]  164 	and	a, #0x03
   009D 4F            [ 4]  165 	ld	c,a
                            166 ;src/knifestruct.c:19: if(eje == E_X){
   009E DD 7E 04      [19]  167 	ld	a,4 (ix)
   00A1 B7            [ 4]  168 	or	a, a
   00A2 20 11         [12]  169 	jr	NZ,00102$
                            170 ;src/knifestruct.c:20: w = 4 + (x & 1);
   00A4 04            [ 4]  171 	inc	b
   00A5 04            [ 4]  172 	inc	b
   00A6 04            [ 4]  173 	inc	b
   00A7 04            [ 4]  174 	inc	b
                            175 ;src/knifestruct.c:21: h = 1 + (y & 3 ? 1 : 0);
   00A8 79            [ 4]  176 	ld	a,c
   00A9 B7            [ 4]  177 	or	a, a
   00AA 28 04         [12]  178 	jr	Z,00106$
   00AC 0E 01         [ 7]  179 	ld	c,#0x01
   00AE 18 02         [12]  180 	jr	00107$
   00B0                     181 00106$:
   00B0 0E 00         [ 7]  182 	ld	c,#0x00
   00B2                     183 00107$:
   00B2 0C            [ 4]  184 	inc	c
   00B3 18 0E         [12]  185 	jr	00103$
   00B5                     186 00102$:
                            187 ;src/knifestruct.c:23: w = 2 + (x & 1);
   00B5 04            [ 4]  188 	inc	b
   00B6 04            [ 4]  189 	inc	b
                            190 ;src/knifestruct.c:24: h = 2 + (y & 3 ? 1 : 0);
   00B7 79            [ 4]  191 	ld	a,c
   00B8 B7            [ 4]  192 	or	a, a
   00B9 28 04         [12]  193 	jr	Z,00108$
   00BB 0E 01         [ 7]  194 	ld	c,#0x01
   00BD 18 02         [12]  195 	jr	00109$
   00BF                     196 00108$:
   00BF 0E 00         [ 7]  197 	ld	c,#0x00
   00C1                     198 00109$:
   00C1 0C            [ 4]  199 	inc	c
   00C2 0C            [ 4]  200 	inc	c
   00C3                     201 00103$:
                            202 ;src/knifestruct.c:28: cpct_etm_drawTileBox2x4 (x / 2, (y - ORIGEN_MAPA_Y)/4, w, h, g_map1_W, p, mapa);
   00C3 DD 7E 07      [19]  203 	ld	a,7 (ix)
   00C6 DD 77 FE      [19]  204 	ld	-2 (ix),a
   00C9 DD 7E 08      [19]  205 	ld	a,8 (ix)
   00CC DD 77 FF      [19]  206 	ld	-1 (ix),a
   00CF DD 5E 06      [19]  207 	ld	e,6 (ix)
   00D2 16 00         [ 7]  208 	ld	d,#0x00
   00D4 7B            [ 4]  209 	ld	a,e
   00D5 C6 E8         [ 7]  210 	add	a,#0xE8
   00D7 DD 77 FC      [19]  211 	ld	-4 (ix),a
   00DA 7A            [ 4]  212 	ld	a,d
   00DB CE FF         [ 7]  213 	adc	a,#0xFF
   00DD DD 77 FD      [19]  214 	ld	-3 (ix),a
   00E0 E1            [10]  215 	pop	hl
   00E1 E5            [11]  216 	push	hl
   00E2 DD CB FD 7E   [20]  217 	bit	7, -3 (ix)
   00E6 28 04         [12]  218 	jr	Z,00110$
   00E8 21 EB FF      [10]  219 	ld	hl,#0xFFEB
   00EB 19            [11]  220 	add	hl,de
   00EC                     221 00110$:
   00EC 5D            [ 4]  222 	ld	e,l
   00ED CB 2C         [ 8]  223 	sra	h
   00EF CB 1B         [ 8]  224 	rr	e
   00F1 CB 2C         [ 8]  225 	sra	h
   00F3 CB 1B         [ 8]  226 	rr	e
   00F5 DD 56 05      [19]  227 	ld	d,5 (ix)
   00F8 CB 3A         [ 8]  228 	srl	d
   00FA DD 6E FE      [19]  229 	ld	l,-2 (ix)
   00FD DD 66 FF      [19]  230 	ld	h,-1 (ix)
   0100 E5            [11]  231 	push	hl
   0101 21 F0 C0      [10]  232 	ld	hl,#0xC0F0
   0104 E5            [11]  233 	push	hl
   0105 3E 28         [ 7]  234 	ld	a,#0x28
   0107 F5            [11]  235 	push	af
   0108 33            [ 6]  236 	inc	sp
   0109 79            [ 4]  237 	ld	a,c
   010A F5            [11]  238 	push	af
   010B 33            [ 6]  239 	inc	sp
   010C C5            [11]  240 	push	bc
   010D 33            [ 6]  241 	inc	sp
   010E 7B            [ 4]  242 	ld	a,e
   010F F5            [11]  243 	push	af
   0110 33            [ 6]  244 	inc	sp
   0111 D5            [11]  245 	push	de
   0112 33            [ 6]  246 	inc	sp
   0113 CDr00r00      [17]  247 	call	_cpct_etm_drawTileBox2x4
   0116 DD F9         [10]  248 	ld	sp, ix
   0118 DD E1         [14]  249 	pop	ix
   011A C9            [10]  250 	ret
                            251 ;src/knifestruct.c:31: void redibujarCuchillo(u8 eje, u8 x, u8 y, TKnife* cu, u8* g_tablatrans, u8* mapa) {
                            252 ;	---------------------------------
                            253 ; Function redibujarCuchillo
                            254 ; ---------------------------------
   011B                     255 _redibujarCuchillo::
   011B DD E5         [15]  256 	push	ix
   011D DD 21 00 00   [14]  257 	ld	ix,#0
   0121 DD 39         [15]  258 	add	ix,sp
                            259 ;src/knifestruct.c:32: borrarCuchillo(eje, x, y, mapa);
   0123 DD 6E 0B      [19]  260 	ld	l,11 (ix)
   0126 DD 66 0C      [19]  261 	ld	h,12 (ix)
   0129 E5            [11]  262 	push	hl
   012A DD 66 06      [19]  263 	ld	h,6 (ix)
   012D DD 6E 05      [19]  264 	ld	l,5 (ix)
   0130 E5            [11]  265 	push	hl
   0131 DD 7E 04      [19]  266 	ld	a,4 (ix)
   0134 F5            [11]  267 	push	af
   0135 33            [ 6]  268 	inc	sp
   0136 CDr88r00      [17]  269 	call	_borrarCuchillo
   0139 F1            [10]  270 	pop	af
   013A F1            [10]  271 	pop	af
   013B 33            [ 6]  272 	inc	sp
                            273 ;src/knifestruct.c:33: cu->px = cu->x;
   013C DD 4E 07      [19]  274 	ld	c,7 (ix)
   013F DD 46 08      [19]  275 	ld	b,8 (ix)
   0142 59            [ 4]  276 	ld	e, c
   0143 50            [ 4]  277 	ld	d, b
   0144 13            [ 6]  278 	inc	de
   0145 13            [ 6]  279 	inc	de
   0146 0A            [ 7]  280 	ld	a,(bc)
   0147 12            [ 7]  281 	ld	(de),a
                            282 ;src/knifestruct.c:34: cu->py = cu->y;
   0148 59            [ 4]  283 	ld	e, c
   0149 50            [ 4]  284 	ld	d, b
   014A 13            [ 6]  285 	inc	de
   014B 13            [ 6]  286 	inc	de
   014C 13            [ 6]  287 	inc	de
   014D 69            [ 4]  288 	ld	l, c
   014E 60            [ 4]  289 	ld	h, b
   014F 23            [ 6]  290 	inc	hl
   0150 7E            [ 7]  291 	ld	a,(hl)
   0151 12            [ 7]  292 	ld	(de),a
                            293 ;src/knifestruct.c:35: dibujarCuchillo(cu, g_tablatrans);
   0152 DD 6E 09      [19]  294 	ld	l,9 (ix)
   0155 DD 66 0A      [19]  295 	ld	h,10 (ix)
   0158 E5            [11]  296 	push	hl
   0159 C5            [11]  297 	push	bc
   015A CDr00r00      [17]  298 	call	_dibujarCuchillo
   015D F1            [10]  299 	pop	af
   015E F1            [10]  300 	pop	af
   015F DD E1         [14]  301 	pop	ix
   0161 C9            [10]  302 	ret
                            303 ;src/knifestruct.c:38: void lanzarCuchillo(TKnife* cu, TProta* prota, u8* mapa, u8* g_tablatrans){
                            304 ;	---------------------------------
                            305 ; Function lanzarCuchillo
                            306 ; ---------------------------------
   0162                     307 _lanzarCuchillo::
   0162 DD E5         [15]  308 	push	ix
   0164 DD 21 00 00   [14]  309 	ld	ix,#0
   0168 DD 39         [15]  310 	add	ix,sp
   016A 21 F2 FF      [10]  311 	ld	hl,#-14
   016D 39            [11]  312 	add	hl,sp
   016E F9            [ 6]  313 	ld	sp,hl
                            314 ;src/knifestruct.c:40: if(!cu->lanzado){
   016F DD 4E 04      [19]  315 	ld	c,4 (ix)
   0172 DD 46 05      [19]  316 	ld	b,5 (ix)
   0175 21 06 00      [10]  317 	ld	hl,#0x0006
   0178 09            [11]  318 	add	hl,bc
   0179 DD 75 FD      [19]  319 	ld	-3 (ix),l
   017C DD 74 FE      [19]  320 	ld	-2 (ix),h
   017F DD 6E FD      [19]  321 	ld	l,-3 (ix)
   0182 DD 66 FE      [19]  322 	ld	h,-2 (ix)
   0185 7E            [ 7]  323 	ld	a,(hl)
   0186 B7            [ 4]  324 	or	a, a
   0187 C2r9Er03      [10]  325 	jp	NZ,00122$
                            326 ;src/knifestruct.c:42: if(prota->mira == M_derecha){
   018A DD 5E 06      [19]  327 	ld	e,6 (ix)
   018D DD 56 07      [19]  328 	ld	d,7 (ix)
   0190 6B            [ 4]  329 	ld	l, e
   0191 62            [ 4]  330 	ld	h, d
   0192 C5            [11]  331 	push	bc
   0193 01 07 00      [10]  332 	ld	bc, #0x0007
   0196 09            [11]  333 	add	hl, bc
   0197 C1            [10]  334 	pop	bc
   0198 6E            [ 7]  335 	ld	l,(hl)
                            336 ;src/knifestruct.c:43: if( *getTilePtr(mapa, prota->x + G_HERO_W + G_KNIFEX_0_W + 1, prota->y + G_HERO_H /2) <= 2){
   0199 7B            [ 4]  337 	ld	a,e
   019A C6 01         [ 7]  338 	add	a, #0x01
   019C DD 77 F2      [19]  339 	ld	-14 (ix),a
   019F 7A            [ 4]  340 	ld	a,d
   01A0 CE 00         [ 7]  341 	adc	a, #0x00
   01A2 DD 77 F3      [19]  342 	ld	-13 (ix),a
                            343 ;src/knifestruct.c:45: cu->direccion = M_derecha;
   01A5 79            [ 4]  344 	ld	a,c
   01A6 C6 07         [ 7]  345 	add	a, #0x07
   01A8 DD 77 FA      [19]  346 	ld	-6 (ix),a
   01AB 78            [ 4]  347 	ld	a,b
   01AC CE 00         [ 7]  348 	adc	a, #0x00
   01AE DD 77 FB      [19]  349 	ld	-5 (ix),a
                            350 ;src/knifestruct.c:47: cu->y=prota->y + G_HERO_H /2;
   01B1 79            [ 4]  351 	ld	a,c
   01B2 C6 01         [ 7]  352 	add	a, #0x01
   01B4 DD 77 F4      [19]  353 	ld	-12 (ix),a
   01B7 78            [ 4]  354 	ld	a,b
   01B8 CE 00         [ 7]  355 	adc	a, #0x00
   01BA DD 77 F5      [19]  356 	ld	-11 (ix),a
                            357 ;src/knifestruct.c:48: cu->sprite=g_knifeX_0;
   01BD 79            [ 4]  358 	ld	a,c
   01BE C6 04         [ 7]  359 	add	a, #0x04
   01C0 DD 77 F6      [19]  360 	ld	-10 (ix),a
   01C3 78            [ 4]  361 	ld	a,b
   01C4 CE 00         [ 7]  362 	adc	a, #0x00
   01C6 DD 77 F7      [19]  363 	ld	-9 (ix),a
                            364 ;src/knifestruct.c:49: cu->eje = E_X;
   01C9 79            [ 4]  365 	ld	a,c
   01CA C6 08         [ 7]  366 	add	a, #0x08
   01CC DD 77 F8      [19]  367 	ld	-8 (ix),a
   01CF 78            [ 4]  368 	ld	a,b
   01D0 CE 00         [ 7]  369 	adc	a, #0x00
   01D2 DD 77 F9      [19]  370 	ld	-7 (ix),a
                            371 ;src/knifestruct.c:42: if(prota->mira == M_derecha){
   01D5 7D            [ 4]  372 	ld	a,l
   01D6 B7            [ 4]  373 	or	a, a
   01D7 20 6F         [12]  374 	jr	NZ,00118$
                            375 ;src/knifestruct.c:43: if( *getTilePtr(mapa, prota->x + G_HERO_W + G_KNIFEX_0_W + 1, prota->y + G_HERO_H /2) <= 2){
   01D9 E1            [10]  376 	pop	hl
   01DA E5            [11]  377 	push	hl
   01DB 7E            [ 7]  378 	ld	a,(hl)
   01DC C6 0B         [ 7]  379 	add	a, #0x0B
   01DE DD 77 FF      [19]  380 	ld	-1 (ix),a
   01E1 1A            [ 7]  381 	ld	a,(de)
   01E2 C6 0C         [ 7]  382 	add	a, #0x0C
   01E4 DD 77 FC      [19]  383 	ld	-4 (ix),a
   01E7 C5            [11]  384 	push	bc
   01E8 D5            [11]  385 	push	de
   01E9 DD 66 FF      [19]  386 	ld	h,-1 (ix)
   01EC DD 6E FC      [19]  387 	ld	l,-4 (ix)
   01EF E5            [11]  388 	push	hl
   01F0 DD 6E 08      [19]  389 	ld	l,8 (ix)
   01F3 DD 66 09      [19]  390 	ld	h,9 (ix)
   01F6 E5            [11]  391 	push	hl
   01F7 CDr00r00      [17]  392 	call	_getTilePtr
   01FA F1            [10]  393 	pop	af
   01FB F1            [10]  394 	pop	af
   01FC D1            [10]  395 	pop	de
   01FD C1            [10]  396 	pop	bc
   01FE 6E            [ 7]  397 	ld	l,(hl)
   01FF 3E 02         [ 7]  398 	ld	a,#0x02
   0201 95            [ 4]  399 	sub	a, l
   0202 DAr9Er03      [10]  400 	jp	C,00122$
                            401 ;src/knifestruct.c:44: cu->lanzado = SI;
   0205 DD 6E FD      [19]  402 	ld	l,-3 (ix)
   0208 DD 66 FE      [19]  403 	ld	h,-2 (ix)
   020B 36 01         [10]  404 	ld	(hl),#0x01
                            405 ;src/knifestruct.c:45: cu->direccion = M_derecha;
   020D DD 6E FA      [19]  406 	ld	l,-6 (ix)
   0210 DD 66 FB      [19]  407 	ld	h,-5 (ix)
   0213 36 00         [10]  408 	ld	(hl),#0x00
                            409 ;src/knifestruct.c:46: cu->x=prota->x + G_HERO_W;
   0215 1A            [ 7]  410 	ld	a,(de)
   0216 C6 07         [ 7]  411 	add	a, #0x07
   0218 02            [ 7]  412 	ld	(bc),a
                            413 ;src/knifestruct.c:47: cu->y=prota->y + G_HERO_H /2;
   0219 E1            [10]  414 	pop	hl
   021A E5            [11]  415 	push	hl
   021B 7E            [ 7]  416 	ld	a,(hl)
   021C C6 0B         [ 7]  417 	add	a, #0x0B
   021E DD 6E F4      [19]  418 	ld	l,-12 (ix)
   0221 DD 66 F5      [19]  419 	ld	h,-11 (ix)
   0224 77            [ 7]  420 	ld	(hl),a
                            421 ;src/knifestruct.c:48: cu->sprite=g_knifeX_0;
   0225 DD 6E F6      [19]  422 	ld	l,-10 (ix)
   0228 DD 66 F7      [19]  423 	ld	h,-9 (ix)
   022B 36r00         [10]  424 	ld	(hl),#<(_g_knifeX_0)
   022D 23            [ 6]  425 	inc	hl
   022E 36s00         [10]  426 	ld	(hl),#>(_g_knifeX_0)
                            427 ;src/knifestruct.c:49: cu->eje = E_X;
   0230 DD 6E F8      [19]  428 	ld	l,-8 (ix)
   0233 DD 66 F9      [19]  429 	ld	h,-7 (ix)
   0236 36 00         [10]  430 	ld	(hl),#0x00
                            431 ;src/knifestruct.c:50: dibujarCuchillo(cu, g_tablatrans);
   0238 DD 6E 0A      [19]  432 	ld	l,10 (ix)
   023B DD 66 0B      [19]  433 	ld	h,11 (ix)
   023E E5            [11]  434 	push	hl
   023F C5            [11]  435 	push	bc
   0240 CDr00r00      [17]  436 	call	_dibujarCuchillo
   0243 F1            [10]  437 	pop	af
   0244 F1            [10]  438 	pop	af
   0245 C3r9Er03      [10]  439 	jp	00122$
   0248                     440 00118$:
                            441 ;src/knifestruct.c:53: else if(prota->mira == M_izquierda){
   0248 7D            [ 4]  442 	ld	a,l
   0249 3D            [ 4]  443 	dec	a
   024A 20 6F         [12]  444 	jr	NZ,00115$
                            445 ;src/knifestruct.c:54: if( *getTilePtr(mapa, prota->x - G_KNIFEX_0_W - 1 - G_KNIFEX_0_W - 1, prota->y + G_HERO_H /2) <= 2){
   024C E1            [10]  446 	pop	hl
   024D E5            [11]  447 	push	hl
   024E 7E            [ 7]  448 	ld	a,(hl)
   024F C6 0B         [ 7]  449 	add	a, #0x0B
   0251 DD 77 FC      [19]  450 	ld	-4 (ix),a
   0254 1A            [ 7]  451 	ld	a,(de)
   0255 C6 F6         [ 7]  452 	add	a,#0xF6
   0257 DD 77 FF      [19]  453 	ld	-1 (ix),a
   025A C5            [11]  454 	push	bc
   025B D5            [11]  455 	push	de
   025C DD 66 FC      [19]  456 	ld	h,-4 (ix)
   025F DD 6E FF      [19]  457 	ld	l,-1 (ix)
   0262 E5            [11]  458 	push	hl
   0263 DD 6E 08      [19]  459 	ld	l,8 (ix)
   0266 DD 66 09      [19]  460 	ld	h,9 (ix)
   0269 E5            [11]  461 	push	hl
   026A CDr00r00      [17]  462 	call	_getTilePtr
   026D F1            [10]  463 	pop	af
   026E F1            [10]  464 	pop	af
   026F D1            [10]  465 	pop	de
   0270 C1            [10]  466 	pop	bc
   0271 6E            [ 7]  467 	ld	l,(hl)
   0272 3E 02         [ 7]  468 	ld	a,#0x02
   0274 95            [ 4]  469 	sub	a, l
   0275 DAr9Er03      [10]  470 	jp	C,00122$
                            471 ;src/knifestruct.c:55: cu->lanzado = SI;
   0278 DD 6E FD      [19]  472 	ld	l,-3 (ix)
   027B DD 66 FE      [19]  473 	ld	h,-2 (ix)
   027E 36 01         [10]  474 	ld	(hl),#0x01
                            475 ;src/knifestruct.c:56: cu->direccion = M_izquierda;
   0280 DD 6E FA      [19]  476 	ld	l,-6 (ix)
   0283 DD 66 FB      [19]  477 	ld	h,-5 (ix)
   0286 36 01         [10]  478 	ld	(hl),#0x01
                            479 ;src/knifestruct.c:57: cu->x = prota->x - G_KNIFEX_0_W;
   0288 1A            [ 7]  480 	ld	a,(de)
   0289 C6 FC         [ 7]  481 	add	a,#0xFC
   028B 02            [ 7]  482 	ld	(bc),a
                            483 ;src/knifestruct.c:58: cu->y = prota->y + G_HERO_H /2;
   028C E1            [10]  484 	pop	hl
   028D E5            [11]  485 	push	hl
   028E 7E            [ 7]  486 	ld	a,(hl)
   028F C6 0B         [ 7]  487 	add	a, #0x0B
   0291 DD 6E F4      [19]  488 	ld	l,-12 (ix)
   0294 DD 66 F5      [19]  489 	ld	h,-11 (ix)
   0297 77            [ 7]  490 	ld	(hl),a
                            491 ;src/knifestruct.c:59: cu->sprite = g_knifeX_1;
   0298 DD 6E F6      [19]  492 	ld	l,-10 (ix)
   029B DD 66 F7      [19]  493 	ld	h,-9 (ix)
   029E 36r00         [10]  494 	ld	(hl),#<(_g_knifeX_1)
   02A0 23            [ 6]  495 	inc	hl
   02A1 36s00         [10]  496 	ld	(hl),#>(_g_knifeX_1)
                            497 ;src/knifestruct.c:60: cu->eje = E_X;
   02A3 DD 6E F8      [19]  498 	ld	l,-8 (ix)
   02A6 DD 66 F9      [19]  499 	ld	h,-7 (ix)
   02A9 36 00         [10]  500 	ld	(hl),#0x00
                            501 ;src/knifestruct.c:61: dibujarCuchillo(cu, g_tablatrans);
   02AB DD 6E 0A      [19]  502 	ld	l,10 (ix)
   02AE DD 66 0B      [19]  503 	ld	h,11 (ix)
   02B1 E5            [11]  504 	push	hl
   02B2 C5            [11]  505 	push	bc
   02B3 CDr00r00      [17]  506 	call	_dibujarCuchillo
   02B6 F1            [10]  507 	pop	af
   02B7 F1            [10]  508 	pop	af
   02B8 C3r9Er03      [10]  509 	jp	00122$
   02BB                     510 00115$:
                            511 ;src/knifestruct.c:64: else if(prota->mira == M_abajo){
   02BB 7D            [ 4]  512 	ld	a,l
   02BC D6 03         [ 7]  513 	sub	a, #0x03
   02BE 20 6E         [12]  514 	jr	NZ,00112$
                            515 ;src/knifestruct.c:66: if( *getTilePtr(mapa, prota->x + G_HERO_W / 2, prota->y + G_HERO_H + G_KNIFEY_0_H + 1) <= 2){
   02C0 E1            [10]  516 	pop	hl
   02C1 E5            [11]  517 	push	hl
   02C2 7E            [ 7]  518 	ld	a,(hl)
   02C3 C6 1F         [ 7]  519 	add	a, #0x1F
   02C5 DD 77 FC      [19]  520 	ld	-4 (ix),a
   02C8 1A            [ 7]  521 	ld	a,(de)
   02C9 C6 03         [ 7]  522 	add	a, #0x03
   02CB DD 77 FF      [19]  523 	ld	-1 (ix),a
   02CE C5            [11]  524 	push	bc
   02CF D5            [11]  525 	push	de
   02D0 DD 66 FC      [19]  526 	ld	h,-4 (ix)
   02D3 DD 6E FF      [19]  527 	ld	l,-1 (ix)
   02D6 E5            [11]  528 	push	hl
   02D7 DD 6E 08      [19]  529 	ld	l,8 (ix)
   02DA DD 66 09      [19]  530 	ld	h,9 (ix)
   02DD E5            [11]  531 	push	hl
   02DE CDr00r00      [17]  532 	call	_getTilePtr
   02E1 F1            [10]  533 	pop	af
   02E2 F1            [10]  534 	pop	af
   02E3 D1            [10]  535 	pop	de
   02E4 C1            [10]  536 	pop	bc
   02E5 6E            [ 7]  537 	ld	l,(hl)
   02E6 3E 02         [ 7]  538 	ld	a,#0x02
   02E8 95            [ 4]  539 	sub	a, l
   02E9 DAr9Er03      [10]  540 	jp	C,00122$
                            541 ;src/knifestruct.c:67: cu->lanzado = SI;
   02EC DD 6E FD      [19]  542 	ld	l,-3 (ix)
   02EF DD 66 FE      [19]  543 	ld	h,-2 (ix)
   02F2 36 01         [10]  544 	ld	(hl),#0x01
                            545 ;src/knifestruct.c:68: cu->direccion = M_abajo;
   02F4 DD 6E FA      [19]  546 	ld	l,-6 (ix)
   02F7 DD 66 FB      [19]  547 	ld	h,-5 (ix)
   02FA 36 03         [10]  548 	ld	(hl),#0x03
                            549 ;src/knifestruct.c:69: cu->x = prota->x + G_HERO_W / 2;
   02FC 1A            [ 7]  550 	ld	a,(de)
   02FD C6 03         [ 7]  551 	add	a, #0x03
   02FF 02            [ 7]  552 	ld	(bc),a
                            553 ;src/knifestruct.c:70: cu->y = prota->y + G_HERO_H;
   0300 E1            [10]  554 	pop	hl
   0301 E5            [11]  555 	push	hl
   0302 7E            [ 7]  556 	ld	a,(hl)
   0303 C6 16         [ 7]  557 	add	a, #0x16
   0305 DD 6E F4      [19]  558 	ld	l,-12 (ix)
   0308 DD 66 F5      [19]  559 	ld	h,-11 (ix)
   030B 77            [ 7]  560 	ld	(hl),a
                            561 ;src/knifestruct.c:71: cu->sprite = g_knifeY_0;
   030C DD 6E F6      [19]  562 	ld	l,-10 (ix)
   030F DD 66 F7      [19]  563 	ld	h,-9 (ix)
   0312 36r00         [10]  564 	ld	(hl),#<(_g_knifeY_0)
   0314 23            [ 6]  565 	inc	hl
   0315 36s00         [10]  566 	ld	(hl),#>(_g_knifeY_0)
                            567 ;src/knifestruct.c:72: cu->eje = E_Y;
   0317 DD 6E F8      [19]  568 	ld	l,-8 (ix)
   031A DD 66 F9      [19]  569 	ld	h,-7 (ix)
   031D 36 01         [10]  570 	ld	(hl),#0x01
                            571 ;src/knifestruct.c:73: dibujarCuchillo(cu, g_tablatrans);
   031F DD 6E 0A      [19]  572 	ld	l,10 (ix)
   0322 DD 66 0B      [19]  573 	ld	h,11 (ix)
   0325 E5            [11]  574 	push	hl
   0326 C5            [11]  575 	push	bc
   0327 CDr00r00      [17]  576 	call	_dibujarCuchillo
   032A F1            [10]  577 	pop	af
   032B F1            [10]  578 	pop	af
   032C 18 70         [12]  579 	jr	00122$
   032E                     580 00112$:
                            581 ;src/knifestruct.c:76: else if(prota->mira == M_arriba){
   032E 7D            [ 4]  582 	ld	a,l
   032F D6 02         [ 7]  583 	sub	a, #0x02
   0331 20 6B         [12]  584 	jr	NZ,00122$
                            585 ;src/knifestruct.c:77: if( *getTilePtr(mapa, prota->x + G_HERO_W / 2, prota->y - G_KNIFEY_0_H - 1) <= 2){
   0333 E1            [10]  586 	pop	hl
   0334 E5            [11]  587 	push	hl
   0335 7E            [ 7]  588 	ld	a,(hl)
   0336 C6 F7         [ 7]  589 	add	a,#0xF7
   0338 DD 77 FC      [19]  590 	ld	-4 (ix),a
   033B 1A            [ 7]  591 	ld	a,(de)
   033C C6 03         [ 7]  592 	add	a, #0x03
   033E DD 77 FF      [19]  593 	ld	-1 (ix),a
   0341 C5            [11]  594 	push	bc
   0342 D5            [11]  595 	push	de
   0343 DD 66 FC      [19]  596 	ld	h,-4 (ix)
   0346 DD 6E FF      [19]  597 	ld	l,-1 (ix)
   0349 E5            [11]  598 	push	hl
   034A DD 6E 08      [19]  599 	ld	l,8 (ix)
   034D DD 66 09      [19]  600 	ld	h,9 (ix)
   0350 E5            [11]  601 	push	hl
   0351 CDr00r00      [17]  602 	call	_getTilePtr
   0354 F1            [10]  603 	pop	af
   0355 F1            [10]  604 	pop	af
   0356 D1            [10]  605 	pop	de
   0357 C1            [10]  606 	pop	bc
   0358 6E            [ 7]  607 	ld	l,(hl)
   0359 3E 02         [ 7]  608 	ld	a,#0x02
   035B 95            [ 4]  609 	sub	a, l
   035C 38 40         [12]  610 	jr	C,00122$
                            611 ;src/knifestruct.c:78: cu->lanzado = SI;
   035E DD 6E FD      [19]  612 	ld	l,-3 (ix)
   0361 DD 66 FE      [19]  613 	ld	h,-2 (ix)
   0364 36 01         [10]  614 	ld	(hl),#0x01
                            615 ;src/knifestruct.c:79: cu->direccion = M_arriba;
   0366 DD 6E FA      [19]  616 	ld	l,-6 (ix)
   0369 DD 66 FB      [19]  617 	ld	h,-5 (ix)
   036C 36 02         [10]  618 	ld	(hl),#0x02
                            619 ;src/knifestruct.c:80: cu->x = prota->x + G_HERO_W / 2;
   036E 1A            [ 7]  620 	ld	a,(de)
   036F C6 03         [ 7]  621 	add	a, #0x03
   0371 02            [ 7]  622 	ld	(bc),a
                            623 ;src/knifestruct.c:81: cu->y = prota->y - G_KNIFEY_0_H;
   0372 E1            [10]  624 	pop	hl
   0373 E5            [11]  625 	push	hl
   0374 7E            [ 7]  626 	ld	a,(hl)
   0375 C6 F8         [ 7]  627 	add	a,#0xF8
   0377 DD 6E F4      [19]  628 	ld	l,-12 (ix)
   037A DD 66 F5      [19]  629 	ld	h,-11 (ix)
   037D 77            [ 7]  630 	ld	(hl),a
                            631 ;src/knifestruct.c:82: cu->sprite = g_knifeY_1;
   037E DD 6E F6      [19]  632 	ld	l,-10 (ix)
   0381 DD 66 F7      [19]  633 	ld	h,-9 (ix)
   0384 36r00         [10]  634 	ld	(hl),#<(_g_knifeY_1)
   0386 23            [ 6]  635 	inc	hl
   0387 36s00         [10]  636 	ld	(hl),#>(_g_knifeY_1)
                            637 ;src/knifestruct.c:83: cu->eje = E_Y;
   0389 DD 6E F8      [19]  638 	ld	l,-8 (ix)
   038C DD 66 F9      [19]  639 	ld	h,-7 (ix)
   038F 36 01         [10]  640 	ld	(hl),#0x01
                            641 ;src/knifestruct.c:84: dibujarCuchillo(cu, g_tablatrans);
   0391 DD 6E 0A      [19]  642 	ld	l,10 (ix)
   0394 DD 66 0B      [19]  643 	ld	h,11 (ix)
   0397 E5            [11]  644 	push	hl
   0398 C5            [11]  645 	push	bc
   0399 CDr00r00      [17]  646 	call	_dibujarCuchillo
   039C F1            [10]  647 	pop	af
   039D F1            [10]  648 	pop	af
   039E                     649 00122$:
   039E DD F9         [10]  650 	ld	sp, ix
   03A0 DD E1         [14]  651 	pop	ix
   03A2 C9            [10]  652 	ret
                            653 ;src/knifestruct.c:90: u8 checkOffBounds(TKnife* cu){
                            654 ;	---------------------------------
                            655 ; Function checkOffBounds
                            656 ; ---------------------------------
   03A3                     657 _checkOffBounds::
                            658 ;src/knifestruct.c:91: return (cu->x + G_KNIFEX_0_W  > (80 - 4) || cu->x < (0 + 4));
   03A3 C1            [10]  659 	pop	bc
   03A4 E1            [10]  660 	pop	hl
   03A5 E5            [11]  661 	push	hl
   03A6 C5            [11]  662 	push	bc
   03A7 4E            [ 7]  663 	ld	c,(hl)
   03A8 59            [ 4]  664 	ld	e,c
   03A9 16 00         [ 7]  665 	ld	d,#0x00
   03AB 13            [ 6]  666 	inc	de
   03AC 13            [ 6]  667 	inc	de
   03AD 13            [ 6]  668 	inc	de
   03AE 13            [ 6]  669 	inc	de
   03AF 3E 4C         [ 7]  670 	ld	a,#0x4C
   03B1 BB            [ 4]  671 	cp	a, e
   03B2 3E 00         [ 7]  672 	ld	a,#0x00
   03B4 9A            [ 4]  673 	sbc	a, d
   03B5 E2rBAr03      [10]  674 	jp	PO, 00114$
   03B8 EE 80         [ 7]  675 	xor	a, #0x80
   03BA                     676 00114$:
   03BA FArC5r03      [10]  677 	jp	M,00104$
   03BD 79            [ 4]  678 	ld	a,c
   03BE D6 04         [ 7]  679 	sub	a, #0x04
   03C0 38 03         [12]  680 	jr	C,00104$
   03C2 2E 00         [ 7]  681 	ld	l,#0x00
   03C4 C9            [10]  682 	ret
   03C5                     683 00104$:
   03C5 2E 01         [ 7]  684 	ld	l,#0x01
   03C7 C9            [10]  685 	ret
                            686 ;src/knifestruct.c:94: u8 checkKnifeCollision(TKnife* cu, u8 xoff, u8 yoff, u8* mapa){
                            687 ;	---------------------------------
                            688 ; Function checkKnifeCollision
                            689 ; ---------------------------------
   03C8                     690 _checkKnifeCollision::
                            691 ;src/knifestruct.c:96: return *getTilePtr(mapa, cu->x + xoff, cu->y + yoff) <= 2;
   03C8 D1            [10]  692 	pop	de
   03C9 C1            [10]  693 	pop	bc
   03CA C5            [11]  694 	push	bc
   03CB D5            [11]  695 	push	de
   03CC 69            [ 4]  696 	ld	l, c
   03CD 60            [ 4]  697 	ld	h, b
   03CE 23            [ 6]  698 	inc	hl
   03CF 5E            [ 7]  699 	ld	e,(hl)
   03D0 7B            [ 4]  700 	ld	a,e
   03D1 21 05 00      [10]  701 	ld	hl,#5
   03D4 39            [11]  702 	add	hl,sp
   03D5 86            [ 7]  703 	add	a, (hl)
   03D6 57            [ 4]  704 	ld	d,a
   03D7 0A            [ 7]  705 	ld	a,(bc)
   03D8 4F            [ 4]  706 	ld	c,a
   03D9 21 04 00      [10]  707 	ld	hl,#4
   03DC 39            [11]  708 	add	hl,sp
   03DD 86            [ 7]  709 	add	a, (hl)
   03DE 47            [ 4]  710 	ld	b,a
   03DF D5            [11]  711 	push	de
   03E0 33            [ 6]  712 	inc	sp
   03E1 C5            [11]  713 	push	bc
   03E2 33            [ 6]  714 	inc	sp
   03E3 21 08 00      [10]  715 	ld	hl, #8
   03E6 39            [11]  716 	add	hl, sp
   03E7 4E            [ 7]  717 	ld	c, (hl)
   03E8 23            [ 6]  718 	inc	hl
   03E9 46            [ 7]  719 	ld	b, (hl)
   03EA C5            [11]  720 	push	bc
   03EB CDr00r00      [17]  721 	call	_getTilePtr
   03EE F1            [10]  722 	pop	af
   03EF F1            [10]  723 	pop	af
   03F0 4E            [ 7]  724 	ld	c,(hl)
   03F1 3E 02         [ 7]  725 	ld	a,#0x02
   03F3 91            [ 4]  726 	sub	a, c
   03F4 3E 00         [ 7]  727 	ld	a,#0x00
   03F6 17            [ 4]  728 	rla
   03F7 EE 01         [ 7]  729 	xor	a, #0x01
   03F9 6F            [ 4]  730 	ld	l, a
   03FA C9            [10]  731 	ret
                            732 ;src/knifestruct.c:99: void moverCuchillo(TKnife* cu, u8* mapa){
                            733 ;	---------------------------------
                            734 ; Function moverCuchillo
                            735 ; ---------------------------------
   03FB                     736 _moverCuchillo::
   03FB DD E5         [15]  737 	push	ix
   03FD DD 21 00 00   [14]  738 	ld	ix,#0
   0401 DD 39         [15]  739 	add	ix,sp
   0403 F5            [11]  740 	push	af
                            741 ;src/knifestruct.c:100: if(cu->lanzado){
   0404 DD 4E 04      [19]  742 	ld	c,4 (ix)
   0407 DD 46 05      [19]  743 	ld	b,5 (ix)
   040A C5            [11]  744 	push	bc
   040B FD E1         [14]  745 	pop	iy
   040D FD 7E 06      [19]  746 	ld	a,6 (iy)
   0410 B7            [ 4]  747 	or	a, a
   0411 CAr2Dr05      [10]  748 	jp	Z,00138$
                            749 ;src/knifestruct.c:101: cu->mover = SI;
   0414 21 09 00      [10]  750 	ld	hl,#0x0009
   0417 09            [11]  751 	add	hl,bc
   0418 EB            [ 4]  752 	ex	de,hl
   0419 3E 01         [ 7]  753 	ld	a,#0x01
   041B 12            [ 7]  754 	ld	(de),a
                            755 ;src/knifestruct.c:102: if(cu->direccion == M_derecha){
   041C C5            [11]  756 	push	bc
   041D FD E1         [14]  757 	pop	iy
   041F FD 6E 07      [19]  758 	ld	l,7 (iy)
   0422 7D            [ 4]  759 	ld	a,l
   0423 B7            [ 4]  760 	or	a, a
   0424 20 3A         [12]  761 	jr	NZ,00134$
                            762 ;src/knifestruct.c:103: if(checkOffBounds(cu)){
   0426 C5            [11]  763 	push	bc
   0427 D5            [11]  764 	push	de
   0428 C5            [11]  765 	push	bc
   0429 CDrA3r03      [17]  766 	call	_checkOffBounds
   042C F1            [10]  767 	pop	af
   042D D1            [10]  768 	pop	de
   042E C1            [10]  769 	pop	bc
   042F 7D            [ 4]  770 	ld	a,l
   0430 B7            [ 4]  771 	or	a, a
   0431 28 05         [12]  772 	jr	Z,00105$
                            773 ;src/knifestruct.c:104: cu->mover=NO;
   0433 AF            [ 4]  774 	xor	a, a
   0434 12            [ 7]  775 	ld	(de),a
   0435 C3r2Dr05      [10]  776 	jp	00138$
   0438                     777 00105$:
                            778 ;src/knifestruct.c:106: else if(checkKnifeCollision(cu, G_KNIFEX_0_W + 1, 0, mapa)){
   0438 C5            [11]  779 	push	bc
   0439 D5            [11]  780 	push	de
   043A DD 6E 06      [19]  781 	ld	l,6 (ix)
   043D DD 66 07      [19]  782 	ld	h,7 (ix)
   0440 E5            [11]  783 	push	hl
   0441 21 05 00      [10]  784 	ld	hl,#0x0005
   0444 E5            [11]  785 	push	hl
   0445 C5            [11]  786 	push	bc
   0446 CDrC8r03      [17]  787 	call	_checkKnifeCollision
   0449 F1            [10]  788 	pop	af
   044A F1            [10]  789 	pop	af
   044B F1            [10]  790 	pop	af
   044C D1            [10]  791 	pop	de
   044D C1            [10]  792 	pop	bc
   044E 7D            [ 4]  793 	ld	a,l
   044F B7            [ 4]  794 	or	a, a
   0450 28 09         [12]  795 	jr	Z,00102$
                            796 ;src/knifestruct.c:107: cu->mover = SI;
   0452 3E 01         [ 7]  797 	ld	a,#0x01
   0454 12            [ 7]  798 	ld	(de),a
                            799 ;src/knifestruct.c:108: cu->x++;
   0455 0A            [ 7]  800 	ld	a,(bc)
   0456 3C            [ 4]  801 	inc	a
   0457 02            [ 7]  802 	ld	(bc),a
   0458 C3r2Dr05      [10]  803 	jp	00138$
   045B                     804 00102$:
                            805 ;src/knifestruct.c:111: cu->mover=NO;
   045B AF            [ 4]  806 	xor	a, a
   045C 12            [ 7]  807 	ld	(de),a
   045D C3r2Dr05      [10]  808 	jp	00138$
   0460                     809 00134$:
                            810 ;src/knifestruct.c:114: else if(cu->direccion == M_izquierda){
   0460 7D            [ 4]  811 	ld	a,l
   0461 3D            [ 4]  812 	dec	a
   0462 20 3B         [12]  813 	jr	NZ,00131$
                            814 ;src/knifestruct.c:115: if(checkOffBounds(cu)){
   0464 C5            [11]  815 	push	bc
   0465 D5            [11]  816 	push	de
   0466 C5            [11]  817 	push	bc
   0467 CDrA3r03      [17]  818 	call	_checkOffBounds
   046A F1            [10]  819 	pop	af
   046B D1            [10]  820 	pop	de
   046C C1            [10]  821 	pop	bc
   046D 7D            [ 4]  822 	ld	a,l
   046E B7            [ 4]  823 	or	a, a
   046F 28 05         [12]  824 	jr	Z,00111$
                            825 ;src/knifestruct.c:116: cu->mover=NO;
   0471 AF            [ 4]  826 	xor	a, a
   0472 12            [ 7]  827 	ld	(de),a
   0473 C3r2Dr05      [10]  828 	jp	00138$
   0476                     829 00111$:
                            830 ;src/knifestruct.c:118: else if(checkKnifeCollision(cu, -1, 0, mapa)){
   0476 C5            [11]  831 	push	bc
   0477 D5            [11]  832 	push	de
   0478 DD 6E 06      [19]  833 	ld	l,6 (ix)
   047B DD 66 07      [19]  834 	ld	h,7 (ix)
   047E E5            [11]  835 	push	hl
   047F 21 FF 00      [10]  836 	ld	hl,#0x00FF
   0482 E5            [11]  837 	push	hl
   0483 C5            [11]  838 	push	bc
   0484 CDrC8r03      [17]  839 	call	_checkKnifeCollision
   0487 F1            [10]  840 	pop	af
   0488 F1            [10]  841 	pop	af
   0489 F1            [10]  842 	pop	af
   048A D1            [10]  843 	pop	de
   048B C1            [10]  844 	pop	bc
   048C 7D            [ 4]  845 	ld	a,l
   048D B7            [ 4]  846 	or	a, a
   048E 28 0A         [12]  847 	jr	Z,00108$
                            848 ;src/knifestruct.c:119: cu->mover = SI;
   0490 3E 01         [ 7]  849 	ld	a,#0x01
   0492 12            [ 7]  850 	ld	(de),a
                            851 ;src/knifestruct.c:120: cu->x--;
   0493 0A            [ 7]  852 	ld	a,(bc)
   0494 C6 FF         [ 7]  853 	add	a,#0xFF
   0496 02            [ 7]  854 	ld	(bc),a
   0497 C3r2Dr05      [10]  855 	jp	00138$
   049A                     856 00108$:
                            857 ;src/knifestruct.c:123: cu->mover=NO;
   049A AF            [ 4]  858 	xor	a, a
   049B 12            [ 7]  859 	ld	(de),a
   049C C3r2Dr05      [10]  860 	jp	00138$
   049F                     861 00131$:
                            862 ;src/knifestruct.c:132: cu->y--;
   049F 79            [ 4]  863 	ld	a,c
   04A0 C6 01         [ 7]  864 	add	a, #0x01
   04A2 DD 77 FE      [19]  865 	ld	-2 (ix),a
   04A5 78            [ 4]  866 	ld	a,b
   04A6 CE 00         [ 7]  867 	adc	a, #0x00
   04A8 DD 77 FF      [19]  868 	ld	-1 (ix),a
                            869 ;src/knifestruct.c:126: else if(cu->direccion == M_arriba){
   04AB 7D            [ 4]  870 	ld	a,l
   04AC D6 02         [ 7]  871 	sub	a, #0x02
   04AE 20 3D         [12]  872 	jr	NZ,00128$
                            873 ;src/knifestruct.c:127: if(checkOffBounds(cu)){
   04B0 C5            [11]  874 	push	bc
   04B1 D5            [11]  875 	push	de
   04B2 C5            [11]  876 	push	bc
   04B3 CDrA3r03      [17]  877 	call	_checkOffBounds
   04B6 F1            [10]  878 	pop	af
   04B7 D1            [10]  879 	pop	de
   04B8 C1            [10]  880 	pop	bc
   04B9 7D            [ 4]  881 	ld	a,l
   04BA B7            [ 4]  882 	or	a, a
   04BB 28 04         [12]  883 	jr	Z,00117$
                            884 ;src/knifestruct.c:128: cu->mover = NO;
   04BD AF            [ 4]  885 	xor	a, a
   04BE 12            [ 7]  886 	ld	(de),a
   04BF 18 6C         [12]  887 	jr	00138$
   04C1                     888 00117$:
                            889 ;src/knifestruct.c:130: else if(checkKnifeCollision(cu, 0, -2, mapa)){
   04C1 D5            [11]  890 	push	de
   04C2 DD 6E 06      [19]  891 	ld	l,6 (ix)
   04C5 DD 66 07      [19]  892 	ld	h,7 (ix)
   04C8 E5            [11]  893 	push	hl
   04C9 21 00 FE      [10]  894 	ld	hl,#0xFE00
   04CC E5            [11]  895 	push	hl
   04CD C5            [11]  896 	push	bc
   04CE CDrC8r03      [17]  897 	call	_checkKnifeCollision
   04D1 F1            [10]  898 	pop	af
   04D2 F1            [10]  899 	pop	af
   04D3 F1            [10]  900 	pop	af
   04D4 D1            [10]  901 	pop	de
   04D5 7D            [ 4]  902 	ld	a,l
   04D6 B7            [ 4]  903 	or	a, a
   04D7 28 10         [12]  904 	jr	Z,00114$
                            905 ;src/knifestruct.c:131: cu->mover = SI;
   04D9 3E 01         [ 7]  906 	ld	a,#0x01
   04DB 12            [ 7]  907 	ld	(de),a
                            908 ;src/knifestruct.c:132: cu->y--;
   04DC E1            [10]  909 	pop	hl
   04DD E5            [11]  910 	push	hl
   04DE 4E            [ 7]  911 	ld	c,(hl)
   04DF 0D            [ 4]  912 	dec	c
   04E0 E1            [10]  913 	pop	hl
   04E1 E5            [11]  914 	push	hl
   04E2 71            [ 7]  915 	ld	(hl),c
                            916 ;src/knifestruct.c:133: cu->y--;
   04E3 0D            [ 4]  917 	dec	c
   04E4 E1            [10]  918 	pop	hl
   04E5 E5            [11]  919 	push	hl
   04E6 71            [ 7]  920 	ld	(hl),c
   04E7 18 44         [12]  921 	jr	00138$
   04E9                     922 00114$:
                            923 ;src/knifestruct.c:136: cu->mover=NO;
   04E9 AF            [ 4]  924 	xor	a, a
   04EA 12            [ 7]  925 	ld	(de),a
   04EB 18 40         [12]  926 	jr	00138$
   04ED                     927 00128$:
                            928 ;src/knifestruct.c:139: else if(cu->direccion == M_abajo){
   04ED 7D            [ 4]  929 	ld	a,l
   04EE D6 03         [ 7]  930 	sub	a, #0x03
   04F0 20 3B         [12]  931 	jr	NZ,00138$
                            932 ;src/knifestruct.c:140: if(checkOffBounds(cu)){
   04F2 C5            [11]  933 	push	bc
   04F3 D5            [11]  934 	push	de
   04F4 C5            [11]  935 	push	bc
   04F5 CDrA3r03      [17]  936 	call	_checkOffBounds
   04F8 F1            [10]  937 	pop	af
   04F9 D1            [10]  938 	pop	de
   04FA C1            [10]  939 	pop	bc
   04FB 7D            [ 4]  940 	ld	a,l
   04FC B7            [ 4]  941 	or	a, a
   04FD 28 04         [12]  942 	jr	Z,00123$
                            943 ;src/knifestruct.c:141: cu->mover = NO;
   04FF AF            [ 4]  944 	xor	a, a
   0500 12            [ 7]  945 	ld	(de),a
   0501 18 2A         [12]  946 	jr	00138$
   0503                     947 00123$:
                            948 ;src/knifestruct.c:143: else if(checkKnifeCollision(cu, 0, G_KNIFEY_0_H + 2, mapa)){
   0503 D5            [11]  949 	push	de
   0504 DD 6E 06      [19]  950 	ld	l,6 (ix)
   0507 DD 66 07      [19]  951 	ld	h,7 (ix)
   050A E5            [11]  952 	push	hl
   050B 21 00 0A      [10]  953 	ld	hl,#0x0A00
   050E E5            [11]  954 	push	hl
   050F C5            [11]  955 	push	bc
   0510 CDrC8r03      [17]  956 	call	_checkKnifeCollision
   0513 F1            [10]  957 	pop	af
   0514 F1            [10]  958 	pop	af
   0515 F1            [10]  959 	pop	af
   0516 D1            [10]  960 	pop	de
   0517 7D            [ 4]  961 	ld	a,l
   0518 B7            [ 4]  962 	or	a, a
   0519 28 10         [12]  963 	jr	Z,00120$
                            964 ;src/knifestruct.c:144: cu->mover = SI;
   051B 3E 01         [ 7]  965 	ld	a,#0x01
   051D 12            [ 7]  966 	ld	(de),a
                            967 ;src/knifestruct.c:145: cu->y++;
   051E E1            [10]  968 	pop	hl
   051F E5            [11]  969 	push	hl
   0520 4E            [ 7]  970 	ld	c,(hl)
   0521 0C            [ 4]  971 	inc	c
   0522 E1            [10]  972 	pop	hl
   0523 E5            [11]  973 	push	hl
   0524 71            [ 7]  974 	ld	(hl),c
                            975 ;src/knifestruct.c:146: cu->y++;
   0525 0C            [ 4]  976 	inc	c
   0526 E1            [10]  977 	pop	hl
   0527 E5            [11]  978 	push	hl
   0528 71            [ 7]  979 	ld	(hl),c
   0529 18 02         [12]  980 	jr	00138$
   052B                     981 00120$:
                            982 ;src/knifestruct.c:149: cu->mover=NO;
   052B AF            [ 4]  983 	xor	a, a
   052C 12            [ 7]  984 	ld	(de),a
   052D                     985 00138$:
   052D DD F9         [10]  986 	ld	sp, ix
   052F DD E1         [14]  987 	pop	ix
   0531 C9            [10]  988 	ret
                            989 	.area _CODE
                            990 	.area _INITIALIZER
                            991 	.area _CABS (ABS)
