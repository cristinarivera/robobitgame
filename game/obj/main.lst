                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.5 #9498 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module main
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _G_song
                             12 	.globl _main
                             13 	.globl _inicializarJuego
                             14 	.globl _inicializarEnemy
                             15 	.globl _inicializarCPC
                             16 	.globl _menuInicio
                             17 	.globl _borrarPantallaArriba
                             18 	.globl _barraPuntuacionInicial
                             19 	.globl _moverCuchillo
                             20 	.globl _checkKnifeCollision
                             21 	.globl _comprobarTeclado
                             22 	.globl _lanzarCuchillo
                             23 	.globl _redibujarCuchillo
                             24 	.globl _borrarCuchillo
                             25 	.globl _dibujarCuchillo
                             26 	.globl _moverAbajo
                             27 	.globl _moverArriba
                             28 	.globl _moverDerecha
                             29 	.globl _moverIzquierda
                             30 	.globl _avanzarMapa
                             31 	.globl _updateEnemies
                             32 	.globl _engage
                             33 	.globl _seek
                             34 	.globl _patrol
                             35 	.globl _lookFor
                             36 	.globl _moverEnemigo
                             37 	.globl _moverEnemigoPathfinding
                             38 	.globl _moverEnemigoIzquierda
                             39 	.globl _moverEnemigoDerecha
                             40 	.globl _moverEnemigoAbajo
                             41 	.globl _moverEnemigoArriba
                             42 	.globl _checkEnemyCollision
                             43 	.globl _redibujarEnemigo
                             44 	.globl _borrarEnemigo
                             45 	.globl _borrarExplosion
                             46 	.globl _dibujarExplosion
                             47 	.globl _dibujarEnemigo
                             48 	.globl _checkCollision
                             49 	.globl _getTilePtr
                             50 	.globl _redibujarProta
                             51 	.globl _menuFin
                             52 	.globl _borrarProta
                             53 	.globl _dibujarProta
                             54 	.globl _dibujarMapa
                             55 	.globl _pathFinding
                             56 	.globl _abs
                             57 	.globl _cpct_etm_setTileset2x4
                             58 	.globl _cpct_etm_drawTileBox2x4
                             59 	.globl _cpct_akp_musicPlay
                             60 	.globl _cpct_akp_musicInit
                             61 	.globl _cpct_getScreenPtr
                             62 	.globl _cpct_setPALColour
                             63 	.globl _cpct_setPalette
                             64 	.globl _cpct_waitVSYNC
                             65 	.globl _cpct_setVideoMode
                             66 	.globl _cpct_drawStringM0
                             67 	.globl _cpct_drawSpriteMaskedAlignedTable
                             68 	.globl _cpct_drawSolidBox
                             69 	.globl _cpct_drawSprite
                             70 	.globl _cpct_isAnyKeyPressed
                             71 	.globl _cpct_isKeyPressed
                             72 	.globl _cpct_scanKeyboard_if
                             73 	.globl _cpct_scanKeyboard_f
                             74 	.globl _cpct_memset
                             75 	.globl _cpct_disableFirmware
                             76 	.globl _num_mapa
                             77 	.globl _mapa
                             78 	.globl _iter
                             79 	.globl _cu
                             80 	.globl _prota
                             81 	.globl _enemy
                             82 	.globl _EEje
                             83 	.globl _EMirar
                             84 	.globl _spawnY
                             85 	.globl _spawnX
                             86 	.globl _mapas
                             87 ;--------------------------------------------------------
                             88 ; special function registers
                             89 ;--------------------------------------------------------
                             90 ;--------------------------------------------------------
                             91 ; ram data
                             92 ;--------------------------------------------------------
                             93 	.area _DATA
   0000                      94 _EMirar::
   0000                      95 	.ds 1
   0001                      96 _EEje::
   0001                      97 	.ds 1
   0002                      98 _enemy::
   0002                      99 	.ds 1296
   0512                     100 _prota::
   0512                     101 	.ds 8
   051A                     102 _cu::
   051A                     103 	.ds 10
   0524                     104 _iter::
   0524                     105 	.ds 1
   0525                     106 _mapa::
   0525                     107 	.ds 2
   0527                     108 _num_mapa::
   0527                     109 	.ds 1
                            110 ;--------------------------------------------------------
                            111 ; ram data
                            112 ;--------------------------------------------------------
                            113 	.area _INITIALIZED
                            114 ;--------------------------------------------------------
                            115 ; absolute external ram data
                            116 ;--------------------------------------------------------
                            117 	.area _DABS (ABS)
                            118 ;--------------------------------------------------------
                            119 ; global & static initialisations
                            120 ;--------------------------------------------------------
                            121 	.area _HOME
                            122 	.area _GSINIT
                            123 	.area _GSFINAL
                            124 	.area _GSINIT
                            125 ;--------------------------------------------------------
                            126 ; Home
                            127 ;--------------------------------------------------------
                            128 	.area _HOME
                            129 	.area _HOME
                            130 ;--------------------------------------------------------
                            131 ; code
                            132 ;--------------------------------------------------------
                            133 	.area _CODE
                            134 ;src/main.c:109: cpctm_createTransparentMaskTable(g_tablatrans, 0x0E00, M0, 0); // es el color 8 - 4D - FF00FF
                            135 ;	---------------------------------
                            136 ; Function dummy_cpct_transparentMaskTable0M0_container
                            137 ; ---------------------------------
   0000                     138 _dummy_cpct_transparentMaskTable0M0_container::
                            139 	.area _g_tablatrans_ (ABS) 
   0E00                     140 	.org 0x0E00 
   0E00                     141 	 _g_tablatrans::
   0E00 FF AA 55 00 AA AA   142 	.db 0xFF, 0xAA, 0x55, 0x00, 0xAA, 0xAA, 0x00, 0x00 
        00 00
   0E08 55 00 55 00 00 00   143 	.db 0x55, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E10 AA AA 00 00 AA AA   144 	.db 0xAA, 0xAA, 0x00, 0x00, 0xAA, 0xAA, 0x00, 0x00 
        00 00
   0E18 00 00 00 00 00 00   145 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E20 55 00 55 00 00 00   146 	.db 0x55, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E28 55 00 55 00 00 00   147 	.db 0x55, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E30 00 00 00 00 00 00   148 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E38 00 00 00 00 00 00   149 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E40 AA AA 00 00 AA AA   150 	.db 0xAA, 0xAA, 0x00, 0x00, 0xAA, 0xAA, 0x00, 0x00 
        00 00
   0E48 00 00 00 00 00 00   151 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E50 AA AA 00 00 AA AA   152 	.db 0xAA, 0xAA, 0x00, 0x00, 0xAA, 0xAA, 0x00, 0x00 
        00 00
   0E58 00 00 00 00 00 00   153 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E60 00 00 00 00 00 00   154 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E68 00 00 00 00 00 00   155 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E70 00 00 00 00 00 00   156 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E78 00 00 00 00 00 00   157 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E80 55 00 55 00 00 00   158 	.db 0x55, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E88 55 00 55 00 00 00   159 	.db 0x55, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E90 00 00 00 00 00 00   160 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E98 00 00 00 00 00 00   161 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0EA0 55 00 55 00 00 00   162 	.db 0x55, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0EA8 55 00 55 00 00 00   163 	.db 0x55, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0EB0 00 00 00 00 00 00   164 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0EB8 00 00 00 00 00 00   165 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0EC0 00 00 00 00 00 00   166 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0EC8 00 00 00 00 00 00   167 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0ED0 00 00 00 00 00 00   168 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0ED8 00 00 00 00 00 00   169 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0EE0 00 00 00 00 00 00   170 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0EE8 00 00 00 00 00 00   171 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0EF0 00 00 00 00 00 00   172 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0EF8 00 00 00 00 00 00   173 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
                            174 	.area _CSEG (REL, CON) 
                            175 ;src/main.c:112: void dibujarMapa() {
                            176 ;	---------------------------------
                            177 ; Function dibujarMapa
                            178 ; ---------------------------------
   0000                     179 _dibujarMapa::
                            180 ;src/main.c:113: cpct_etm_drawTilemap2x4 (g_map1_W, g_map1_H, ORIGEN_MAPA, mapa);
   0000 2Ar25r05      [16]  181 	ld	hl,(_mapa)
   0003 E5            [11]  182 	push	hl
   0004 21 F0 C0      [10]  183 	ld	hl,#0xC0F0
   0007 E5            [11]  184 	push	hl
   0008 21 2C 28      [10]  185 	ld	hl,#0x282C
   000B E5            [11]  186 	push	hl
   000C 2E 00         [ 7]  187 	ld	l, #0x00
   000E E5            [11]  188 	push	hl
   000F AF            [ 4]  189 	xor	a, a
   0010 F5            [11]  190 	push	af
   0011 33            [ 6]  191 	inc	sp
   0012 CDr00r00      [17]  192 	call	_cpct_etm_drawTileBox2x4
   0015 C9            [10]  193 	ret
   0016                     194 _mapas:
   0016r00r00               195 	.dw _g_map1
   0018r00r00               196 	.dw _g_map2
   001Ar00r00               197 	.dw _g_map3
   001C                     198 _spawnX:
   001C 00                  199 	.db #0x00	; 0
   001D 3C                  200 	.db #0x3C	; 60
   001E 47                  201 	.db #0x47	; 71	'G'
   001F 14                  202 	.db #0x14	; 20
   0020 3C                  203 	.db #0x3C	; 60
   0021                     204 _spawnY:
   0021 00                  205 	.db #0x00	; 0
   0022 2C                  206 	.db #0x2C	; 44
   0023 72                  207 	.db #0x72	; 114	'r'
   0024 8A                  208 	.db #0x8A	; 138
   0025 8A                  209 	.db #0x8A	; 138
                            210 ;src/main.c:116: void dibujarProta() {
                            211 ;	---------------------------------
                            212 ; Function dibujarProta
                            213 ; ---------------------------------
   0026                     214 _dibujarProta::
                            215 ;src/main.c:117: u8* pvmem = cpct_getScreenPtr(CPCT_VMEM_START, prota.x, prota.y);
   0026 21r13r05      [10]  216 	ld	hl, #_prota + 1
   0029 56            [ 7]  217 	ld	d,(hl)
   002A 21r12r05      [10]  218 	ld	hl, #_prota + 0
   002D 46            [ 7]  219 	ld	b,(hl)
   002E D5            [11]  220 	push	de
   002F 33            [ 6]  221 	inc	sp
   0030 C5            [11]  222 	push	bc
   0031 33            [ 6]  223 	inc	sp
   0032 21 00 C0      [10]  224 	ld	hl,#0xC000
   0035 E5            [11]  225 	push	hl
   0036 CDr00r00      [17]  226 	call	_cpct_getScreenPtr
   0039 EB            [ 4]  227 	ex	de,hl
                            228 ;src/main.c:118: cpct_drawSpriteMaskedAlignedTable (prota.sprite, pvmem, G_HERO_W, G_HERO_H, g_tablatrans);
   003A ED 4Br16r05   [20]  229 	ld	bc, (#_prota + 4)
   003E 21r00r0E      [10]  230 	ld	hl,#_g_tablatrans
   0041 E5            [11]  231 	push	hl
   0042 21 07 16      [10]  232 	ld	hl,#0x1607
   0045 E5            [11]  233 	push	hl
   0046 D5            [11]  234 	push	de
   0047 C5            [11]  235 	push	bc
   0048 CDr00r00      [17]  236 	call	_cpct_drawSpriteMaskedAlignedTable
   004B C9            [10]  237 	ret
                            238 ;src/main.c:121: void borrarProta() {
                            239 ;	---------------------------------
                            240 ; Function borrarProta
                            241 ; ---------------------------------
   004C                     242 _borrarProta::
   004C DD E5         [15]  243 	push	ix
   004E DD 21 00 00   [14]  244 	ld	ix,#0
   0052 DD 39         [15]  245 	add	ix,sp
   0054 F5            [11]  246 	push	af
   0055 3B            [ 6]  247 	dec	sp
                            248 ;src/main.c:123: u8 w = 4 + (prota.px & 1);
   0056 21r14r05      [10]  249 	ld	hl, #_prota + 2
   0059 4E            [ 7]  250 	ld	c,(hl)
   005A 79            [ 4]  251 	ld	a,c
   005B E6 01         [ 7]  252 	and	a, #0x01
   005D 47            [ 4]  253 	ld	b,a
   005E 04            [ 4]  254 	inc	b
   005F 04            [ 4]  255 	inc	b
   0060 04            [ 4]  256 	inc	b
   0061 04            [ 4]  257 	inc	b
                            258 ;src/main.c:126: u8 h = 6 + (prota.py & 2 ? 1 : 0);
   0062 21r15r05      [10]  259 	ld	hl, #_prota + 3
   0065 5E            [ 7]  260 	ld	e,(hl)
   0066 CB 4B         [ 8]  261 	bit	1, e
   0068 28 04         [12]  262 	jr	Z,00103$
   006A 3E 01         [ 7]  263 	ld	a,#0x01
   006C 18 02         [12]  264 	jr	00104$
   006E                     265 00103$:
   006E 3E 00         [ 7]  266 	ld	a,#0x00
   0070                     267 00104$:
   0070 C6 06         [ 7]  268 	add	a, #0x06
   0072 DD 77 FD      [19]  269 	ld	-3 (ix),a
                            270 ;src/main.c:128: cpct_etm_drawTileBox2x4 (prota.px / 2, (prota.py - ORIGEN_MAPA_Y)/4, w, h, g_map1_W, ORIGEN_MAPA, mapa);
   0075 FD 2Ar25r05   [20]  271 	ld	iy,(_mapa)
   0079 16 00         [ 7]  272 	ld	d,#0x00
   007B 7B            [ 4]  273 	ld	a,e
   007C C6 E8         [ 7]  274 	add	a,#0xE8
   007E DD 77 FE      [19]  275 	ld	-2 (ix),a
   0081 7A            [ 4]  276 	ld	a,d
   0082 CE FF         [ 7]  277 	adc	a,#0xFF
   0084 DD 77 FF      [19]  278 	ld	-1 (ix),a
   0087 DD 6E FE      [19]  279 	ld	l,-2 (ix)
   008A DD 66 FF      [19]  280 	ld	h,-1 (ix)
   008D DD CB FF 7E   [20]  281 	bit	7, -1 (ix)
   0091 28 04         [12]  282 	jr	Z,00105$
   0093 21 EB FF      [10]  283 	ld	hl,#0xFFEB
   0096 19            [11]  284 	add	hl,de
   0097                     285 00105$:
   0097 CB 2C         [ 8]  286 	sra	h
   0099 CB 1D         [ 8]  287 	rr	l
   009B CB 2C         [ 8]  288 	sra	h
   009D CB 1D         [ 8]  289 	rr	l
   009F 55            [ 4]  290 	ld	d,l
   00A0 CB 39         [ 8]  291 	srl	c
   00A2 FD E5         [15]  292 	push	iy
   00A4 21 F0 C0      [10]  293 	ld	hl,#0xC0F0
   00A7 E5            [11]  294 	push	hl
   00A8 3E 28         [ 7]  295 	ld	a,#0x28
   00AA F5            [11]  296 	push	af
   00AB 33            [ 6]  297 	inc	sp
   00AC DD 7E FD      [19]  298 	ld	a,-3 (ix)
   00AF F5            [11]  299 	push	af
   00B0 33            [ 6]  300 	inc	sp
   00B1 C5            [11]  301 	push	bc
   00B2 33            [ 6]  302 	inc	sp
   00B3 D5            [11]  303 	push	de
   00B4 33            [ 6]  304 	inc	sp
   00B5 79            [ 4]  305 	ld	a,c
   00B6 F5            [11]  306 	push	af
   00B7 33            [ 6]  307 	inc	sp
   00B8 CDr00r00      [17]  308 	call	_cpct_etm_drawTileBox2x4
   00BB DD F9         [10]  309 	ld	sp, ix
   00BD DD E1         [14]  310 	pop	ix
   00BF C9            [10]  311 	ret
                            312 ;src/main.c:131: void menuFin(){
                            313 ;	---------------------------------
                            314 ; Function menuFin
                            315 ; ---------------------------------
   00C0                     316 _menuFin::
                            317 ;src/main.c:134: cpct_clearScreen(0);
   00C0 21 00 40      [10]  318 	ld	hl,#0x4000
   00C3 E5            [11]  319 	push	hl
   00C4 AF            [ 4]  320 	xor	a, a
   00C5 F5            [11]  321 	push	af
   00C6 33            [ 6]  322 	inc	sp
   00C7 26 C0         [ 7]  323 	ld	h, #0xC0
   00C9 E5            [11]  324 	push	hl
   00CA CDr00r00      [17]  325 	call	_cpct_memset
                            326 ;src/main.c:136: memptr = cpct_getScreenPtr(CPCT_VMEM_START, 24, 90); // centrado en horizontal y arriba en vertical
   00CD 21 18 5A      [10]  327 	ld	hl,#0x5A18
   00D0 E5            [11]  328 	push	hl
   00D1 21 00 C0      [10]  329 	ld	hl,#0xC000
   00D4 E5            [11]  330 	push	hl
   00D5 CDr00r00      [17]  331 	call	_cpct_getScreenPtr
   00D8 4D            [ 4]  332 	ld	c,l
   00D9 44            [ 4]  333 	ld	b,h
                            334 ;src/main.c:137: cpct_drawStringM0("GAME OVER", memptr, 2, 0);
   00DA 21 02 00      [10]  335 	ld	hl,#0x0002
   00DD E5            [11]  336 	push	hl
   00DE C5            [11]  337 	push	bc
   00DF 21rEDr00      [10]  338 	ld	hl,#___str_0
   00E2 E5            [11]  339 	push	hl
   00E3 CDr00r00      [17]  340 	call	_cpct_drawStringM0
   00E6 21 06 00      [10]  341 	ld	hl,#6
   00E9 39            [11]  342 	add	hl,sp
   00EA F9            [ 6]  343 	ld	sp,hl
                            344 ;src/main.c:139: while(1){}
   00EB                     345 00102$:
   00EB 18 FE         [12]  346 	jr	00102$
   00ED                     347 ___str_0:
   00ED 47 41 4D 45 20 4F   348 	.ascii "GAME OVER"
        56 45 52
   00F6 00                  349 	.db 0x00
                            350 ;src/main.c:142: void redibujarProta() {
                            351 ;	---------------------------------
                            352 ; Function redibujarProta
                            353 ; ---------------------------------
   00F7                     354 _redibujarProta::
                            355 ;src/main.c:143: borrarProta();
   00F7 CDr4Cr00      [17]  356 	call	_borrarProta
                            357 ;src/main.c:144: prota.px = prota.x;
   00FA 01r14r05      [10]  358 	ld	bc,#_prota + 2
   00FD 3Ar12r05      [13]  359 	ld	a, (#_prota + 0)
   0100 02            [ 7]  360 	ld	(bc),a
                            361 ;src/main.c:145: prota.py = prota.y;
   0101 01r15r05      [10]  362 	ld	bc,#_prota + 3
   0104 3Ar13r05      [13]  363 	ld	a, (#_prota + 1)
   0107 02            [ 7]  364 	ld	(bc),a
                            365 ;src/main.c:146: dibujarProta();
   0108 C3r26r00      [10]  366 	jp  _dibujarProta
                            367 ;src/main.c:149: u8* getTilePtr(u8 x, u8 y) {
                            368 ;	---------------------------------
                            369 ; Function getTilePtr
                            370 ; ---------------------------------
   010B                     371 _getTilePtr::
   010B DD E5         [15]  372 	push	ix
   010D DD 21 00 00   [14]  373 	ld	ix,#0
   0111 DD 39         [15]  374 	add	ix,sp
                            375 ;src/main.c:150: return mapa + ((y-ORIGEN_MAPA_Y)/4)*g_map1_W + x/2;
   0113 DD 4E 05      [19]  376 	ld	c,5 (ix)
   0116 06 00         [ 7]  377 	ld	b,#0x00
   0118 79            [ 4]  378 	ld	a,c
   0119 C6 E8         [ 7]  379 	add	a,#0xE8
   011B 5F            [ 4]  380 	ld	e,a
   011C 78            [ 4]  381 	ld	a,b
   011D CE FF         [ 7]  382 	adc	a,#0xFF
   011F 57            [ 4]  383 	ld	d,a
   0120 6B            [ 4]  384 	ld	l, e
   0121 62            [ 4]  385 	ld	h, d
   0122 CB 7A         [ 8]  386 	bit	7, d
   0124 28 04         [12]  387 	jr	Z,00103$
   0126 21 EB FF      [10]  388 	ld	hl,#0xFFEB
   0129 09            [11]  389 	add	hl,bc
   012A                     390 00103$:
   012A CB 2C         [ 8]  391 	sra	h
   012C CB 1D         [ 8]  392 	rr	l
   012E CB 2C         [ 8]  393 	sra	h
   0130 CB 1D         [ 8]  394 	rr	l
   0132 4D            [ 4]  395 	ld	c, l
   0133 44            [ 4]  396 	ld	b, h
   0134 29            [11]  397 	add	hl, hl
   0135 29            [11]  398 	add	hl, hl
   0136 09            [11]  399 	add	hl, bc
   0137 29            [11]  400 	add	hl, hl
   0138 29            [11]  401 	add	hl, hl
   0139 29            [11]  402 	add	hl, hl
   013A 4D            [ 4]  403 	ld	c,l
   013B 44            [ 4]  404 	ld	b,h
   013C 2Ar25r05      [16]  405 	ld	hl,(_mapa)
   013F 09            [11]  406 	add	hl,bc
   0140 DD 4E 04      [19]  407 	ld	c,4 (ix)
   0143 CB 39         [ 8]  408 	srl	c
   0145 59            [ 4]  409 	ld	e,c
   0146 16 00         [ 7]  410 	ld	d,#0x00
   0148 19            [11]  411 	add	hl,de
   0149 DD E1         [14]  412 	pop	ix
   014B C9            [10]  413 	ret
                            414 ;src/main.c:153: u8 checkCollision(int direction) { // check optimization
                            415 ;	---------------------------------
                            416 ; Function checkCollision
                            417 ; ---------------------------------
   014C                     418 _checkCollision::
   014C DD E5         [15]  419 	push	ix
   014E DD 21 00 00   [14]  420 	ld	ix,#0
   0152 DD 39         [15]  421 	add	ix,sp
   0154 F5            [11]  422 	push	af
                            423 ;src/main.c:154: u8 *headTile=0, *feetTile=0, *waistTile=0;
   0155 21 00 00      [10]  424 	ld	hl,#0x0000
   0158 E3            [19]  425 	ex	(sp), hl
   0159 11 00 00      [10]  426 	ld	de,#0x0000
   015C 01 00 00      [10]  427 	ld	bc,#0x0000
                            428 ;src/main.c:156: switch (direction) {
   015F DD CB 05 7E   [20]  429 	bit	7, 5 (ix)
   0163 C2r80r02      [10]  430 	jp	NZ,00105$
   0166 3E 03         [ 7]  431 	ld	a,#0x03
   0168 DD BE 04      [19]  432 	cp	a, 4 (ix)
   016B 3E 00         [ 7]  433 	ld	a,#0x00
   016D DD 9E 05      [19]  434 	sbc	a, 5 (ix)
   0170 E2r75r01      [10]  435 	jp	PO, 00128$
   0173 EE 80         [ 7]  436 	xor	a, #0x80
   0175                     437 00128$:
   0175 FAr80r02      [10]  438 	jp	M,00105$
   0178 DD 5E 04      [19]  439 	ld	e,4 (ix)
   017B 16 00         [ 7]  440 	ld	d,#0x00
   017D 21r84r01      [10]  441 	ld	hl,#00129$
   0180 19            [11]  442 	add	hl,de
   0181 19            [11]  443 	add	hl,de
   0182 19            [11]  444 	add	hl,de
   0183 E9            [ 4]  445 	jp	(hl)
   0184                     446 00129$:
   0184 C3r90r01      [10]  447 	jp	00101$
   0187 C3rDBr01      [10]  448 	jp	00102$
   018A C3r1Cr02      [10]  449 	jp	00103$
   018D C3r4Fr02      [10]  450 	jp	00104$
                            451 ;src/main.c:157: case 0:
   0190                     452 00101$:
                            453 ;src/main.c:158: headTile  = getTilePtr(prota.x + G_HERO_W - 3, prota.y);
   0190 21r13r05      [10]  454 	ld	hl, #(_prota + 0x0001) + 0
   0193 5E            [ 7]  455 	ld	e,(hl)
   0194 21r12r05      [10]  456 	ld	hl, #_prota + 0
   0197 4E            [ 7]  457 	ld	c,(hl)
   0198 0C            [ 4]  458 	inc	c
   0199 0C            [ 4]  459 	inc	c
   019A 0C            [ 4]  460 	inc	c
   019B 0C            [ 4]  461 	inc	c
   019C 7B            [ 4]  462 	ld	a,e
   019D F5            [11]  463 	push	af
   019E 33            [ 6]  464 	inc	sp
   019F 79            [ 4]  465 	ld	a,c
   01A0 F5            [11]  466 	push	af
   01A1 33            [ 6]  467 	inc	sp
   01A2 CDr0Br01      [17]  468 	call	_getTilePtr
   01A5 F1            [10]  469 	pop	af
   01A6 33            [ 6]  470 	inc	sp
   01A7 33            [ 6]  471 	inc	sp
   01A8 E5            [11]  472 	push	hl
                            473 ;src/main.c:159: feetTile  = getTilePtr(prota.x + G_HERO_W - 3, prota.y + ALTO_PROTA - 2);
   01A9 3Ar13r05      [13]  474 	ld	a, (#(_prota + 0x0001) + 0)
   01AC C6 14         [ 7]  475 	add	a, #0x14
   01AE 4F            [ 4]  476 	ld	c,a
   01AF 21r12r05      [10]  477 	ld	hl, #_prota + 0
   01B2 46            [ 7]  478 	ld	b,(hl)
   01B3 04            [ 4]  479 	inc	b
   01B4 04            [ 4]  480 	inc	b
   01B5 04            [ 4]  481 	inc	b
   01B6 04            [ 4]  482 	inc	b
   01B7 79            [ 4]  483 	ld	a,c
   01B8 F5            [11]  484 	push	af
   01B9 33            [ 6]  485 	inc	sp
   01BA C5            [11]  486 	push	bc
   01BB 33            [ 6]  487 	inc	sp
   01BC CDr0Br01      [17]  488 	call	_getTilePtr
   01BF F1            [10]  489 	pop	af
   01C0 EB            [ 4]  490 	ex	de,hl
                            491 ;src/main.c:160: waistTile = getTilePtr(prota.x + G_HERO_W - 3, prota.y + ALTO_PROTA/2);
   01C1 3Ar13r05      [13]  492 	ld	a, (#(_prota + 0x0001) + 0)
   01C4 C6 0B         [ 7]  493 	add	a, #0x0B
   01C6 47            [ 4]  494 	ld	b,a
   01C7 3Ar12r05      [13]  495 	ld	a, (#_prota + 0)
   01CA C6 04         [ 7]  496 	add	a, #0x04
   01CC D5            [11]  497 	push	de
   01CD C5            [11]  498 	push	bc
   01CE 33            [ 6]  499 	inc	sp
   01CF F5            [11]  500 	push	af
   01D0 33            [ 6]  501 	inc	sp
   01D1 CDr0Br01      [17]  502 	call	_getTilePtr
   01D4 F1            [10]  503 	pop	af
   01D5 4D            [ 4]  504 	ld	c,l
   01D6 44            [ 4]  505 	ld	b,h
   01D7 D1            [10]  506 	pop	de
                            507 ;src/main.c:161: break;
   01D8 C3r80r02      [10]  508 	jp	00105$
                            509 ;src/main.c:162: case 1:
   01DB                     510 00102$:
                            511 ;src/main.c:163: headTile  = getTilePtr(prota.x - 1, prota.y);
   01DB 21r13r05      [10]  512 	ld	hl, #(_prota + 0x0001) + 0
   01DE 56            [ 7]  513 	ld	d,(hl)
   01DF 21r12r05      [10]  514 	ld	hl, #_prota + 0
   01E2 46            [ 7]  515 	ld	b,(hl)
   01E3 05            [ 4]  516 	dec	b
   01E4 D5            [11]  517 	push	de
   01E5 33            [ 6]  518 	inc	sp
   01E6 C5            [11]  519 	push	bc
   01E7 33            [ 6]  520 	inc	sp
   01E8 CDr0Br01      [17]  521 	call	_getTilePtr
   01EB F1            [10]  522 	pop	af
   01EC 33            [ 6]  523 	inc	sp
   01ED 33            [ 6]  524 	inc	sp
   01EE E5            [11]  525 	push	hl
                            526 ;src/main.c:164: feetTile  = getTilePtr(prota.x - 1, prota.y + ALTO_PROTA - 2);
   01EF 3Ar13r05      [13]  527 	ld	a, (#(_prota + 0x0001) + 0)
   01F2 C6 14         [ 7]  528 	add	a, #0x14
   01F4 57            [ 4]  529 	ld	d,a
   01F5 21r12r05      [10]  530 	ld	hl, #_prota + 0
   01F8 46            [ 7]  531 	ld	b,(hl)
   01F9 05            [ 4]  532 	dec	b
   01FA D5            [11]  533 	push	de
   01FB 33            [ 6]  534 	inc	sp
   01FC C5            [11]  535 	push	bc
   01FD 33            [ 6]  536 	inc	sp
   01FE CDr0Br01      [17]  537 	call	_getTilePtr
   0201 F1            [10]  538 	pop	af
   0202 EB            [ 4]  539 	ex	de,hl
                            540 ;src/main.c:165: waistTile = getTilePtr(prota.x - 1, prota.y + ALTO_PROTA/2);
   0203 3Ar13r05      [13]  541 	ld	a, (#(_prota + 0x0001) + 0)
   0206 C6 0B         [ 7]  542 	add	a, #0x0B
   0208 47            [ 4]  543 	ld	b,a
   0209 3Ar12r05      [13]  544 	ld	a, (#_prota + 0)
   020C C6 FF         [ 7]  545 	add	a,#0xFF
   020E D5            [11]  546 	push	de
   020F C5            [11]  547 	push	bc
   0210 33            [ 6]  548 	inc	sp
   0211 F5            [11]  549 	push	af
   0212 33            [ 6]  550 	inc	sp
   0213 CDr0Br01      [17]  551 	call	_getTilePtr
   0216 F1            [10]  552 	pop	af
   0217 4D            [ 4]  553 	ld	c,l
   0218 44            [ 4]  554 	ld	b,h
   0219 D1            [10]  555 	pop	de
                            556 ;src/main.c:166: break;
   021A 18 64         [12]  557 	jr	00105$
                            558 ;src/main.c:167: case 2:
   021C                     559 00103$:
                            560 ;src/main.c:168: headTile   = getTilePtr(prota.x, prota.y - 2);
   021C 3Ar13r05      [13]  561 	ld	a, (#(_prota + 0x0001) + 0)
   021F C6 FE         [ 7]  562 	add	a,#0xFE
   0221 21r12r05      [10]  563 	ld	hl, #_prota + 0
   0224 56            [ 7]  564 	ld	d,(hl)
   0225 C5            [11]  565 	push	bc
   0226 F5            [11]  566 	push	af
   0227 33            [ 6]  567 	inc	sp
   0228 D5            [11]  568 	push	de
   0229 33            [ 6]  569 	inc	sp
   022A CDr0Br01      [17]  570 	call	_getTilePtr
   022D F1            [10]  571 	pop	af
   022E C1            [10]  572 	pop	bc
   022F 33            [ 6]  573 	inc	sp
   0230 33            [ 6]  574 	inc	sp
   0231 E5            [11]  575 	push	hl
                            576 ;src/main.c:169: feetTile   = getTilePtr(prota.x + G_HERO_W - 4, prota.y - 2);
   0232 21r13r05      [10]  577 	ld	hl, #(_prota + 0x0001) + 0
   0235 56            [ 7]  578 	ld	d,(hl)
   0236 15            [ 4]  579 	dec	d
   0237 15            [ 4]  580 	dec	d
   0238 3Ar12r05      [13]  581 	ld	a, (#_prota + 0)
   023B C6 03         [ 7]  582 	add	a, #0x03
   023D C5            [11]  583 	push	bc
   023E D5            [11]  584 	push	de
   023F 33            [ 6]  585 	inc	sp
   0240 F5            [11]  586 	push	af
   0241 33            [ 6]  587 	inc	sp
   0242 CDr0Br01      [17]  588 	call	_getTilePtr
   0245 F1            [10]  589 	pop	af
   0246 EB            [ 4]  590 	ex	de,hl
   0247 C1            [10]  591 	pop	bc
                            592 ;src/main.c:170: *waistTile = 0;
   0248 21 00 00      [10]  593 	ld	hl,#0x0000
   024B 36 00         [10]  594 	ld	(hl),#0x00
                            595 ;src/main.c:171: break;
   024D 18 31         [12]  596 	jr	00105$
                            597 ;src/main.c:172: case 3:
   024F                     598 00104$:
                            599 ;src/main.c:173: headTile  = getTilePtr(prota.x, prota.y + ALTO_PROTA  );
   024F 3Ar13r05      [13]  600 	ld	a, (#(_prota + 0x0001) + 0)
   0252 C6 16         [ 7]  601 	add	a, #0x16
   0254 21r12r05      [10]  602 	ld	hl, #_prota + 0
   0257 56            [ 7]  603 	ld	d,(hl)
   0258 C5            [11]  604 	push	bc
   0259 F5            [11]  605 	push	af
   025A 33            [ 6]  606 	inc	sp
   025B D5            [11]  607 	push	de
   025C 33            [ 6]  608 	inc	sp
   025D CDr0Br01      [17]  609 	call	_getTilePtr
   0260 F1            [10]  610 	pop	af
   0261 C1            [10]  611 	pop	bc
   0262 33            [ 6]  612 	inc	sp
   0263 33            [ 6]  613 	inc	sp
   0264 E5            [11]  614 	push	hl
                            615 ;src/main.c:174: feetTile  = getTilePtr(prota.x + G_HERO_W - 4, prota.y + ALTO_PROTA );
   0265 3Ar13r05      [13]  616 	ld	a, (#(_prota + 0x0001) + 0)
   0268 C6 16         [ 7]  617 	add	a, #0x16
   026A 57            [ 4]  618 	ld	d,a
   026B 3Ar12r05      [13]  619 	ld	a, (#_prota + 0)
   026E C6 03         [ 7]  620 	add	a, #0x03
   0270 C5            [11]  621 	push	bc
   0271 D5            [11]  622 	push	de
   0272 33            [ 6]  623 	inc	sp
   0273 F5            [11]  624 	push	af
   0274 33            [ 6]  625 	inc	sp
   0275 CDr0Br01      [17]  626 	call	_getTilePtr
   0278 F1            [10]  627 	pop	af
   0279 EB            [ 4]  628 	ex	de,hl
   027A C1            [10]  629 	pop	bc
                            630 ;src/main.c:175: *waistTile = 0;
   027B 21 00 00      [10]  631 	ld	hl,#0x0000
   027E 36 00         [10]  632 	ld	(hl),#0x00
                            633 ;src/main.c:177: }
   0280                     634 00105$:
                            635 ;src/main.c:179: if (*headTile > 2 || *feetTile > 2 || *waistTile > 2)
   0280 E1            [10]  636 	pop	hl
   0281 E5            [11]  637 	push	hl
   0282 6E            [ 7]  638 	ld	l,(hl)
   0283 3E 02         [ 7]  639 	ld	a,#0x02
   0285 95            [ 4]  640 	sub	a, l
   0286 38 0E         [12]  641 	jr	C,00106$
   0288 1A            [ 7]  642 	ld	a,(de)
   0289 5F            [ 4]  643 	ld	e,a
   028A 3E 02         [ 7]  644 	ld	a,#0x02
   028C 93            [ 4]  645 	sub	a, e
   028D 38 07         [12]  646 	jr	C,00106$
   028F 0A            [ 7]  647 	ld	a,(bc)
   0290 4F            [ 4]  648 	ld	c,a
   0291 3E 02         [ 7]  649 	ld	a,#0x02
   0293 91            [ 4]  650 	sub	a, c
   0294 30 04         [12]  651 	jr	NC,00107$
   0296                     652 00106$:
                            653 ;src/main.c:180: return 1;
   0296 2E 01         [ 7]  654 	ld	l,#0x01
   0298 18 02         [12]  655 	jr	00110$
   029A                     656 00107$:
                            657 ;src/main.c:182: return 0;
   029A 2E 00         [ 7]  658 	ld	l,#0x00
   029C                     659 00110$:
   029C DD F9         [10]  660 	ld	sp, ix
   029E DD E1         [14]  661 	pop	ix
   02A0 C9            [10]  662 	ret
                            663 ;src/main.c:185: void dibujarEnemigo(TEnemy *enemy) {
                            664 ;	---------------------------------
                            665 ; Function dibujarEnemigo
                            666 ; ---------------------------------
   02A1                     667 _dibujarEnemigo::
   02A1 DD E5         [15]  668 	push	ix
   02A3 DD 21 00 00   [14]  669 	ld	ix,#0
   02A7 DD 39         [15]  670 	add	ix,sp
                            671 ;src/main.c:186: u8* pvmem = cpct_getScreenPtr(CPCT_VMEM_START, enemy->x, enemy->y);
   02A9 DD 4E 04      [19]  672 	ld	c,4 (ix)
   02AC DD 46 05      [19]  673 	ld	b,5 (ix)
   02AF 69            [ 4]  674 	ld	l, c
   02B0 60            [ 4]  675 	ld	h, b
   02B1 23            [ 6]  676 	inc	hl
   02B2 56            [ 7]  677 	ld	d,(hl)
   02B3 0A            [ 7]  678 	ld	a,(bc)
   02B4 C5            [11]  679 	push	bc
   02B5 D5            [11]  680 	push	de
   02B6 33            [ 6]  681 	inc	sp
   02B7 F5            [11]  682 	push	af
   02B8 33            [ 6]  683 	inc	sp
   02B9 21 00 C0      [10]  684 	ld	hl,#0xC000
   02BC E5            [11]  685 	push	hl
   02BD CDr00r00      [17]  686 	call	_cpct_getScreenPtr
   02C0 EB            [ 4]  687 	ex	de,hl
                            688 ;src/main.c:187: cpct_drawSpriteMaskedAlignedTable (enemy->sprite, pvmem, G_ENEMY_W, G_ENEMY_H, g_tablatrans);
   02C1 E1            [10]  689 	pop	hl
   02C2 01 04 00      [10]  690 	ld	bc, #0x0004
   02C5 09            [11]  691 	add	hl, bc
   02C6 4E            [ 7]  692 	ld	c,(hl)
   02C7 23            [ 6]  693 	inc	hl
   02C8 46            [ 7]  694 	ld	b,(hl)
   02C9 21r00r0E      [10]  695 	ld	hl,#_g_tablatrans
   02CC E5            [11]  696 	push	hl
   02CD 21 04 16      [10]  697 	ld	hl,#0x1604
   02D0 E5            [11]  698 	push	hl
   02D1 D5            [11]  699 	push	de
   02D2 C5            [11]  700 	push	bc
   02D3 CDr00r00      [17]  701 	call	_cpct_drawSpriteMaskedAlignedTable
   02D6 DD E1         [14]  702 	pop	ix
   02D8 C9            [10]  703 	ret
                            704 ;src/main.c:190: void dibujarExplosion(TEnemy *enemy) {
                            705 ;	---------------------------------
                            706 ; Function dibujarExplosion
                            707 ; ---------------------------------
   02D9                     708 _dibujarExplosion::
   02D9 DD E5         [15]  709 	push	ix
   02DB DD 21 00 00   [14]  710 	ld	ix,#0
   02DF DD 39         [15]  711 	add	ix,sp
                            712 ;src/main.c:191: u8* pvmem = cpct_getScreenPtr(CPCT_VMEM_START, enemy->x, enemy->y);
   02E1 DD 4E 04      [19]  713 	ld	c,4 (ix)
   02E4 DD 46 05      [19]  714 	ld	b,5 (ix)
   02E7 69            [ 4]  715 	ld	l, c
   02E8 60            [ 4]  716 	ld	h, b
   02E9 23            [ 6]  717 	inc	hl
   02EA 56            [ 7]  718 	ld	d,(hl)
   02EB 0A            [ 7]  719 	ld	a,(bc)
   02EC 47            [ 4]  720 	ld	b,a
   02ED D5            [11]  721 	push	de
   02EE 33            [ 6]  722 	inc	sp
   02EF C5            [11]  723 	push	bc
   02F0 33            [ 6]  724 	inc	sp
   02F1 21 00 C0      [10]  725 	ld	hl,#0xC000
   02F4 E5            [11]  726 	push	hl
   02F5 CDr00r00      [17]  727 	call	_cpct_getScreenPtr
   02F8 4D            [ 4]  728 	ld	c,l
   02F9 44            [ 4]  729 	ld	b,h
                            730 ;src/main.c:192: cpct_drawSpriteMaskedAlignedTable (g_explosion, pvmem, G_EXPLOSION_W, G_EXPLOSION_H, g_tablatrans);
   02FA 11r00r0E      [10]  731 	ld	de,#_g_tablatrans+0
   02FD D5            [11]  732 	push	de
   02FE 21 04 16      [10]  733 	ld	hl,#0x1604
   0301 E5            [11]  734 	push	hl
   0302 C5            [11]  735 	push	bc
   0303 21r00r00      [10]  736 	ld	hl,#_g_explosion
   0306 E5            [11]  737 	push	hl
   0307 CDr00r00      [17]  738 	call	_cpct_drawSpriteMaskedAlignedTable
   030A DD E1         [14]  739 	pop	ix
   030C C9            [10]  740 	ret
                            741 ;src/main.c:195: void borrarExplosion() {
                            742 ;	---------------------------------
                            743 ; Function borrarExplosion
                            744 ; ---------------------------------
   030D                     745 _borrarExplosion::
   030D DD E5         [15]  746 	push	ix
   030F DD 21 00 00   [14]  747 	ld	ix,#0
   0313 DD 39         [15]  748 	add	ix,sp
   0315 F5            [11]  749 	push	af
   0316 3B            [ 6]  750 	dec	sp
                            751 ;src/main.c:196: u8 w = 4 + (enemy->px & 1);
   0317 21r04r00      [10]  752 	ld	hl, #_enemy + 2
   031A 4E            [ 7]  753 	ld	c,(hl)
   031B 79            [ 4]  754 	ld	a,c
   031C E6 01         [ 7]  755 	and	a, #0x01
   031E 47            [ 4]  756 	ld	b,a
   031F 04            [ 4]  757 	inc	b
   0320 04            [ 4]  758 	inc	b
   0321 04            [ 4]  759 	inc	b
   0322 04            [ 4]  760 	inc	b
                            761 ;src/main.c:199: u8 h = 7 + (enemy->py & 2 ? 1 : 0);
   0323 21r05r00      [10]  762 	ld	hl, #_enemy + 3
   0326 5E            [ 7]  763 	ld	e,(hl)
   0327 CB 4B         [ 8]  764 	bit	1, e
   0329 28 04         [12]  765 	jr	Z,00103$
   032B 3E 01         [ 7]  766 	ld	a,#0x01
   032D 18 02         [12]  767 	jr	00104$
   032F                     768 00103$:
   032F 3E 00         [ 7]  769 	ld	a,#0x00
   0331                     770 00104$:
   0331 C6 07         [ 7]  771 	add	a, #0x07
   0333 DD 77 FD      [19]  772 	ld	-3 (ix),a
                            773 ;src/main.c:201: cpct_etm_drawTileBox2x4 (enemy->px / 2, (enemy->py - ORIGEN_MAPA_Y)/4, w, h, g_map1_W, ORIGEN_MAPA, mapa);
   0336 FD 2Ar25r05   [20]  774 	ld	iy,(_mapa)
   033A 16 00         [ 7]  775 	ld	d,#0x00
   033C 7B            [ 4]  776 	ld	a,e
   033D C6 E8         [ 7]  777 	add	a,#0xE8
   033F DD 77 FE      [19]  778 	ld	-2 (ix),a
   0342 7A            [ 4]  779 	ld	a,d
   0343 CE FF         [ 7]  780 	adc	a,#0xFF
   0345 DD 77 FF      [19]  781 	ld	-1 (ix),a
   0348 DD 6E FE      [19]  782 	ld	l,-2 (ix)
   034B DD 66 FF      [19]  783 	ld	h,-1 (ix)
   034E DD CB FF 7E   [20]  784 	bit	7, -1 (ix)
   0352 28 04         [12]  785 	jr	Z,00105$
   0354 21 EB FF      [10]  786 	ld	hl,#0xFFEB
   0357 19            [11]  787 	add	hl,de
   0358                     788 00105$:
   0358 CB 2C         [ 8]  789 	sra	h
   035A CB 1D         [ 8]  790 	rr	l
   035C CB 2C         [ 8]  791 	sra	h
   035E CB 1D         [ 8]  792 	rr	l
   0360 55            [ 4]  793 	ld	d,l
   0361 CB 39         [ 8]  794 	srl	c
   0363 FD E5         [15]  795 	push	iy
   0365 21 F0 C0      [10]  796 	ld	hl,#0xC0F0
   0368 E5            [11]  797 	push	hl
   0369 3E 28         [ 7]  798 	ld	a,#0x28
   036B F5            [11]  799 	push	af
   036C 33            [ 6]  800 	inc	sp
   036D DD 7E FD      [19]  801 	ld	a,-3 (ix)
   0370 F5            [11]  802 	push	af
   0371 33            [ 6]  803 	inc	sp
   0372 C5            [11]  804 	push	bc
   0373 33            [ 6]  805 	inc	sp
   0374 D5            [11]  806 	push	de
   0375 33            [ 6]  807 	inc	sp
   0376 79            [ 4]  808 	ld	a,c
   0377 F5            [11]  809 	push	af
   0378 33            [ 6]  810 	inc	sp
   0379 CDr00r00      [17]  811 	call	_cpct_etm_drawTileBox2x4
   037C DD F9         [10]  812 	ld	sp, ix
   037E DD E1         [14]  813 	pop	ix
   0380 C9            [10]  814 	ret
                            815 ;src/main.c:205: void borrarEnemigo(TEnemy *enemy) {
                            816 ;	---------------------------------
                            817 ; Function borrarEnemigo
                            818 ; ---------------------------------
   0381                     819 _borrarEnemigo::
   0381 DD E5         [15]  820 	push	ix
   0383 DD 21 00 00   [14]  821 	ld	ix,#0
   0387 DD 39         [15]  822 	add	ix,sp
   0389 21 FA FF      [10]  823 	ld	hl,#-6
   038C 39            [11]  824 	add	hl,sp
   038D F9            [ 6]  825 	ld	sp,hl
                            826 ;src/main.c:207: u8 w = 4 + (enemy->px & 1);
   038E DD 4E 04      [19]  827 	ld	c,4 (ix)
   0391 DD 46 05      [19]  828 	ld	b,5 (ix)
   0394 69            [ 4]  829 	ld	l, c
   0395 60            [ 4]  830 	ld	h, b
   0396 23            [ 6]  831 	inc	hl
   0397 23            [ 6]  832 	inc	hl
   0398 5E            [ 7]  833 	ld	e,(hl)
   0399 7B            [ 4]  834 	ld	a,e
   039A E6 01         [ 7]  835 	and	a, #0x01
   039C C6 04         [ 7]  836 	add	a, #0x04
   039E DD 77 FA      [19]  837 	ld	-6 (ix),a
                            838 ;src/main.c:210: u8 h = 7 + (enemy->py & 2 ? 1 : 0);
   03A1 69            [ 4]  839 	ld	l, c
   03A2 60            [ 4]  840 	ld	h, b
   03A3 23            [ 6]  841 	inc	hl
   03A4 23            [ 6]  842 	inc	hl
   03A5 23            [ 6]  843 	inc	hl
   03A6 56            [ 7]  844 	ld	d,(hl)
   03A7 CB 4A         [ 8]  845 	bit	1, d
   03A9 28 04         [12]  846 	jr	Z,00103$
   03AB 3E 01         [ 7]  847 	ld	a,#0x01
   03AD 18 02         [12]  848 	jr	00104$
   03AF                     849 00103$:
   03AF 3E 00         [ 7]  850 	ld	a,#0x00
   03B1                     851 00104$:
   03B1 C6 07         [ 7]  852 	add	a, #0x07
   03B3 DD 77 FB      [19]  853 	ld	-5 (ix),a
                            854 ;src/main.c:212: cpct_etm_drawTileBox2x4 (enemy->px / 2, (enemy->py - ORIGEN_MAPA_Y)/4, w, h, g_map1_W, ORIGEN_MAPA, mapa);
   03B6 FD 2Ar25r05   [20]  855 	ld	iy,(_mapa)
   03BA DD 72 FE      [19]  856 	ld	-2 (ix),d
   03BD DD 36 FF 00   [19]  857 	ld	-1 (ix),#0x00
   03C1 DD 7E FE      [19]  858 	ld	a,-2 (ix)
   03C4 C6 E8         [ 7]  859 	add	a,#0xE8
   03C6 DD 77 FC      [19]  860 	ld	-4 (ix),a
   03C9 DD 7E FF      [19]  861 	ld	a,-1 (ix)
   03CC CE FF         [ 7]  862 	adc	a,#0xFF
   03CE DD 77 FD      [19]  863 	ld	-3 (ix),a
   03D1 DD 56 FC      [19]  864 	ld	d,-4 (ix)
   03D4 DD 6E FD      [19]  865 	ld	l,-3 (ix)
   03D7 DD CB FD 7E   [20]  866 	bit	7, -3 (ix)
   03DB 28 0C         [12]  867 	jr	Z,00105$
   03DD DD 7E FE      [19]  868 	ld	a,-2 (ix)
   03E0 C6 EB         [ 7]  869 	add	a, #0xEB
   03E2 57            [ 4]  870 	ld	d,a
   03E3 DD 7E FF      [19]  871 	ld	a,-1 (ix)
   03E6 CE FF         [ 7]  872 	adc	a, #0xFF
   03E8 6F            [ 4]  873 	ld	l,a
   03E9                     874 00105$:
   03E9 CB 2D         [ 8]  875 	sra	l
   03EB CB 1A         [ 8]  876 	rr	d
   03ED CB 2D         [ 8]  877 	sra	l
   03EF CB 1A         [ 8]  878 	rr	d
   03F1 CB 3B         [ 8]  879 	srl	e
   03F3 C5            [11]  880 	push	bc
   03F4 FD E5         [15]  881 	push	iy
   03F6 21 F0 C0      [10]  882 	ld	hl,#0xC0F0
   03F9 E5            [11]  883 	push	hl
   03FA 3E 28         [ 7]  884 	ld	a,#0x28
   03FC F5            [11]  885 	push	af
   03FD 33            [ 6]  886 	inc	sp
   03FE DD 66 FB      [19]  887 	ld	h,-5 (ix)
   0401 DD 6E FA      [19]  888 	ld	l,-6 (ix)
   0404 E5            [11]  889 	push	hl
   0405 D5            [11]  890 	push	de
   0406 CDr00r00      [17]  891 	call	_cpct_etm_drawTileBox2x4
   0409 C1            [10]  892 	pop	bc
                            893 ;src/main.c:214: enemy->mover = NO;
   040A 21 06 00      [10]  894 	ld	hl,#0x0006
   040D 09            [11]  895 	add	hl,bc
   040E 36 00         [10]  896 	ld	(hl),#0x00
   0410 DD F9         [10]  897 	ld	sp, ix
   0412 DD E1         [14]  898 	pop	ix
   0414 C9            [10]  899 	ret
                            900 ;src/main.c:217: void redibujarEnemigo(TEnemy *enemy) {
                            901 ;	---------------------------------
                            902 ; Function redibujarEnemigo
                            903 ; ---------------------------------
   0415                     904 _redibujarEnemigo::
   0415 DD E5         [15]  905 	push	ix
   0417 DD 21 00 00   [14]  906 	ld	ix,#0
   041B DD 39         [15]  907 	add	ix,sp
                            908 ;src/main.c:218: borrarEnemigo(enemy);
   041D DD 6E 04      [19]  909 	ld	l,4 (ix)
   0420 DD 66 05      [19]  910 	ld	h,5 (ix)
   0423 E5            [11]  911 	push	hl
   0424 CDr81r03      [17]  912 	call	_borrarEnemigo
   0427 F1            [10]  913 	pop	af
                            914 ;src/main.c:219: enemy->px = enemy->x;
   0428 DD 4E 04      [19]  915 	ld	c,4 (ix)
   042B DD 46 05      [19]  916 	ld	b,5 (ix)
   042E 59            [ 4]  917 	ld	e, c
   042F 50            [ 4]  918 	ld	d, b
   0430 13            [ 6]  919 	inc	de
   0431 13            [ 6]  920 	inc	de
   0432 0A            [ 7]  921 	ld	a,(bc)
   0433 12            [ 7]  922 	ld	(de),a
                            923 ;src/main.c:220: enemy->py = enemy->y;
   0434 59            [ 4]  924 	ld	e, c
   0435 50            [ 4]  925 	ld	d, b
   0436 13            [ 6]  926 	inc	de
   0437 13            [ 6]  927 	inc	de
   0438 13            [ 6]  928 	inc	de
   0439 69            [ 4]  929 	ld	l, c
   043A 60            [ 4]  930 	ld	h, b
   043B 23            [ 6]  931 	inc	hl
   043C 7E            [ 7]  932 	ld	a,(hl)
   043D 12            [ 7]  933 	ld	(de),a
                            934 ;src/main.c:221: dibujarEnemigo(enemy);
   043E C5            [11]  935 	push	bc
   043F CDrA1r02      [17]  936 	call	_dibujarEnemigo
   0442 F1            [10]  937 	pop	af
   0443 DD E1         [14]  938 	pop	ix
   0445 C9            [10]  939 	ret
                            940 ;src/main.c:224: u8 checkEnemyCollision(int direction, TEnemy *enemy){
                            941 ;	---------------------------------
                            942 ; Function checkEnemyCollision
                            943 ; ---------------------------------
   0446                     944 _checkEnemyCollision::
   0446 DD E5         [15]  945 	push	ix
   0448 DD 21 00 00   [14]  946 	ld	ix,#0
   044C DD 39         [15]  947 	add	ix,sp
   044E 21 F7 FF      [10]  948 	ld	hl,#-9
   0451 39            [11]  949 	add	hl,sp
   0452 F9            [ 6]  950 	ld	sp,hl
                            951 ;src/main.c:226: u8 colisiona = 1;
   0453 DD 36 F7 01   [19]  952 	ld	-9 (ix),#0x01
                            953 ;src/main.c:228: switch (direction) {
   0457 DD CB 05 7E   [20]  954 	bit	7, 5 (ix)
   045B C2r0Er08      [10]  955 	jp	NZ,00165$
   045E 3E 03         [ 7]  956 	ld	a,#0x03
   0460 DD BE 04      [19]  957 	cp	a, 4 (ix)
   0463 3E 00         [ 7]  958 	ld	a,#0x00
   0465 DD 9E 05      [19]  959 	sbc	a, 5 (ix)
   0468 E2r6Dr04      [10]  960 	jp	PO, 00272$
   046B EE 80         [ 7]  961 	xor	a, #0x80
   046D                     962 00272$:
   046D FAr0Er08      [10]  963 	jp	M,00165$
                            964 ;src/main.c:230: if( *getTilePtr(enemy->x + G_ENEMY_W + 1, enemy->y) <= 2
   0470 DD 4E 06      [19]  965 	ld	c,6 (ix)
   0473 DD 46 07      [19]  966 	ld	b,7 (ix)
   0476 0A            [ 7]  967 	ld	a,(bc)
   0477 5F            [ 4]  968 	ld	e,a
   0478 21 01 00      [10]  969 	ld	hl,#0x0001
   047B 09            [11]  970 	add	hl,bc
   047C DD 75 F8      [19]  971 	ld	-8 (ix),l
   047F DD 74 F9      [19]  972 	ld	-7 (ix),h
   0482 DD 6E F8      [19]  973 	ld	l,-8 (ix)
   0485 DD 66 F9      [19]  974 	ld	h,-7 (ix)
   0488 56            [ 7]  975 	ld	d,(hl)
                            976 ;src/main.c:243: enemy->muerto = SI;
   0489 21 08 00      [10]  977 	ld	hl,#0x0008
   048C 09            [11]  978 	add	hl,bc
   048D DD 75 FA      [19]  979 	ld	-6 (ix),l
   0490 DD 74 FB      [19]  980 	ld	-5 (ix),h
                            981 ;src/main.c:250: enemy->mira = M_izquierda;
   0493 21 07 00      [10]  982 	ld	hl,#0x0007
   0496 09            [11]  983 	add	hl,bc
   0497 DD 75 FC      [19]  984 	ld	-4 (ix),l
   049A DD 74 FD      [19]  985 	ld	-3 (ix),h
                            986 ;src/main.c:228: switch (direction) {
   049D D5            [11]  987 	push	de
   049E DD 5E 04      [19]  988 	ld	e,4 (ix)
   04A1 16 00         [ 7]  989 	ld	d,#0x00
   04A3 21rABr04      [10]  990 	ld	hl,#00273$
   04A6 19            [11]  991 	add	hl,de
   04A7 19            [11]  992 	add	hl,de
   04A8 19            [11]  993 	add	hl,de
   04A9 D1            [10]  994 	pop	de
   04AA E9            [ 4]  995 	jp	(hl)
   04AB                     996 00273$:
   04AB C3rB7r04      [10]  997 	jp	00101$
   04AE C3r90r05      [10]  998 	jp	00117$
   04B1 C3r65r06      [10]  999 	jp	00133$
   04B4 C3r34r07      [10] 1000 	jp	00149$
                           1001 ;src/main.c:229: case 0:
   04B7                    1002 00101$:
                           1003 ;src/main.c:230: if( *getTilePtr(enemy->x + G_ENEMY_W + 1, enemy->y) <= 2
   04B7 7B            [ 4] 1004 	ld	a,e
   04B8 C6 05         [ 7] 1005 	add	a, #0x05
   04BA C5            [11] 1006 	push	bc
   04BB D5            [11] 1007 	push	de
   04BC 33            [ 6] 1008 	inc	sp
   04BD F5            [11] 1009 	push	af
   04BE 33            [ 6] 1010 	inc	sp
   04BF CDr0Br01      [17] 1011 	call	_getTilePtr
   04C2 F1            [10] 1012 	pop	af
   04C3 C1            [10] 1013 	pop	bc
   04C4 5E            [ 7] 1014 	ld	e,(hl)
   04C5 3E 02         [ 7] 1015 	ld	a,#0x02
   04C7 93            [ 4] 1016 	sub	a, e
   04C8 DAr85r05      [10] 1017 	jp	C,00113$
                           1018 ;src/main.c:231: && *getTilePtr(enemy->x + G_ENEMY_W + 1, enemy->y + G_ENEMY_H/2) <= 2
   04CB DD 6E F8      [19] 1019 	ld	l,-8 (ix)
   04CE DD 66 F9      [19] 1020 	ld	h,-7 (ix)
   04D1 7E            [ 7] 1021 	ld	a,(hl)
   04D2 C6 0B         [ 7] 1022 	add	a, #0x0B
   04D4 57            [ 4] 1023 	ld	d,a
   04D5 0A            [ 7] 1024 	ld	a,(bc)
   04D6 C6 05         [ 7] 1025 	add	a, #0x05
   04D8 C5            [11] 1026 	push	bc
   04D9 D5            [11] 1027 	push	de
   04DA 33            [ 6] 1028 	inc	sp
   04DB F5            [11] 1029 	push	af
   04DC 33            [ 6] 1030 	inc	sp
   04DD CDr0Br01      [17] 1031 	call	_getTilePtr
   04E0 F1            [10] 1032 	pop	af
   04E1 C1            [10] 1033 	pop	bc
   04E2 5E            [ 7] 1034 	ld	e,(hl)
   04E3 3E 02         [ 7] 1035 	ld	a,#0x02
   04E5 93            [ 4] 1036 	sub	a, e
   04E6 DAr85r05      [10] 1037 	jp	C,00113$
                           1038 ;src/main.c:232: && *getTilePtr(enemy->x + G_ENEMY_W + 1, enemy->y + G_ENEMY_H) <= 2)
   04E9 DD 6E F8      [19] 1039 	ld	l,-8 (ix)
   04EC DD 66 F9      [19] 1040 	ld	h,-7 (ix)
   04EF 7E            [ 7] 1041 	ld	a,(hl)
   04F0 C6 16         [ 7] 1042 	add	a, #0x16
   04F2 57            [ 4] 1043 	ld	d,a
   04F3 0A            [ 7] 1044 	ld	a,(bc)
   04F4 C6 05         [ 7] 1045 	add	a, #0x05
   04F6 C5            [11] 1046 	push	bc
   04F7 D5            [11] 1047 	push	de
   04F8 33            [ 6] 1048 	inc	sp
   04F9 F5            [11] 1049 	push	af
   04FA 33            [ 6] 1050 	inc	sp
   04FB CDr0Br01      [17] 1051 	call	_getTilePtr
   04FE F1            [10] 1052 	pop	af
   04FF C1            [10] 1053 	pop	bc
   0500 5E            [ 7] 1054 	ld	e,(hl)
   0501 3E 02         [ 7] 1055 	ld	a,#0x02
   0503 93            [ 4] 1056 	sub	a, e
   0504 DAr85r05      [10] 1057 	jp	C,00113$
                           1058 ;src/main.c:234: if( (cu.y + G_KNIFEX_0_H) < enemy->y || cu.y  > (enemy->y + G_ENEMY_H) ){
   0507 21r1Br05      [10] 1059 	ld	hl, #_cu + 1
   050A 5E            [ 7] 1060 	ld	e,(hl)
   050B 16 00         [ 7] 1061 	ld	d,#0x00
   050D 21 04 00      [10] 1062 	ld	hl,#0x0004
   0510 19            [11] 1063 	add	hl,de
   0511 DD 75 FE      [19] 1064 	ld	-2 (ix),l
   0514 DD 74 FF      [19] 1065 	ld	-1 (ix),h
   0517 DD 6E F8      [19] 1066 	ld	l,-8 (ix)
   051A DD 66 F9      [19] 1067 	ld	h,-7 (ix)
   051D 6E            [ 7] 1068 	ld	l,(hl)
   051E 26 00         [ 7] 1069 	ld	h,#0x00
   0520 DD 7E FE      [19] 1070 	ld	a,-2 (ix)
   0523 95            [ 4] 1071 	sub	a, l
   0524 DD 7E FF      [19] 1072 	ld	a,-1 (ix)
   0527 9C            [ 4] 1073 	sbc	a, h
   0528 E2r2Dr05      [10] 1074 	jp	PO, 00274$
   052B EE 80         [ 7] 1075 	xor	a, #0x80
   052D                    1076 00274$:
   052D FAr42r05      [10] 1077 	jp	M,00108$
   0530 D5            [11] 1078 	push	de
   0531 11 16 00      [10] 1079 	ld	de,#0x0016
   0534 19            [11] 1080 	add	hl, de
   0535 D1            [10] 1081 	pop	de
   0536 7D            [ 4] 1082 	ld	a,l
   0537 93            [ 4] 1083 	sub	a, e
   0538 7C            [ 4] 1084 	ld	a,h
   0539 9A            [ 4] 1085 	sbc	a, d
   053A E2r3Fr05      [10] 1086 	jp	PO, 00275$
   053D EE 80         [ 7] 1087 	xor	a, #0x80
   053F                    1088 00275$:
   053F F2r49r05      [10] 1089 	jp	P,00109$
   0542                    1090 00108$:
                           1091 ;src/main.c:235: colisiona = 0;
   0542 DD 36 F7 00   [19] 1092 	ld	-9 (ix),#0x00
   0546 C3r0Er08      [10] 1093 	jp	00165$
   0549                    1094 00109$:
                           1095 ;src/main.c:238: if(cu.x > enemy->x){ //si el cu esta abajo
   0549 21r1Ar05      [10] 1096 	ld	hl, #_cu + 0
   054C 5E            [ 7] 1097 	ld	e,(hl)
   054D 0A            [ 7] 1098 	ld	a,(bc)
   054E 4F            [ 4] 1099 	ld	c,a
   054F 93            [ 4] 1100 	sub	a, e
   0550 30 2C         [12] 1101 	jr	NC,00106$
                           1102 ;src/main.c:239: if( cu.x - (enemy->x + G_ENEMY_W) > 1){ // si hay espacio entre el enemigo y el cu
   0552 6B            [ 4] 1103 	ld	l,e
   0553 26 00         [ 7] 1104 	ld	h,#0x00
   0555 06 00         [ 7] 1105 	ld	b,#0x00
   0557 03            [ 6] 1106 	inc	bc
   0558 03            [ 6] 1107 	inc	bc
   0559 03            [ 6] 1108 	inc	bc
   055A 03            [ 6] 1109 	inc	bc
   055B BF            [ 4] 1110 	cp	a, a
   055C ED 42         [15] 1111 	sbc	hl, bc
   055E 3E 01         [ 7] 1112 	ld	a,#0x01
   0560 BD            [ 4] 1113 	cp	a, l
   0561 3E 00         [ 7] 1114 	ld	a,#0x00
   0563 9C            [ 4] 1115 	sbc	a, h
   0564 E2r69r05      [10] 1116 	jp	PO, 00276$
   0567 EE 80         [ 7] 1117 	xor	a, #0x80
   0569                    1118 00276$:
   0569 F2r73r05      [10] 1119 	jp	P,00103$
                           1120 ;src/main.c:240: colisiona = 0;
   056C DD 36 F7 00   [19] 1121 	ld	-9 (ix),#0x00
   0570 C3r0Er08      [10] 1122 	jp	00165$
   0573                    1123 00103$:
                           1124 ;src/main.c:243: enemy->muerto = SI;
   0573 DD 6E FA      [19] 1125 	ld	l,-6 (ix)
   0576 DD 66 FB      [19] 1126 	ld	h,-5 (ix)
   0579 36 01         [10] 1127 	ld	(hl),#0x01
   057B C3r0Er08      [10] 1128 	jp	00165$
   057E                    1129 00106$:
                           1130 ;src/main.c:246: colisiona = 0;
   057E DD 36 F7 00   [19] 1131 	ld	-9 (ix),#0x00
   0582 C3r0Er08      [10] 1132 	jp	00165$
   0585                    1133 00113$:
                           1134 ;src/main.c:250: enemy->mira = M_izquierda;
   0585 DD 6E FC      [19] 1135 	ld	l,-4 (ix)
   0588 DD 66 FD      [19] 1136 	ld	h,-3 (ix)
   058B 36 01         [10] 1137 	ld	(hl),#0x01
                           1138 ;src/main.c:252: break;
   058D C3r0Er08      [10] 1139 	jp	00165$
                           1140 ;src/main.c:253: case 1:
   0590                    1141 00117$:
                           1142 ;src/main.c:254: if( *getTilePtr(enemy->x - 1, enemy->y) <= 2
   0590 1D            [ 4] 1143 	dec	e
   0591 C5            [11] 1144 	push	bc
   0592 D5            [11] 1145 	push	de
   0593 CDr0Br01      [17] 1146 	call	_getTilePtr
   0596 F1            [10] 1147 	pop	af
   0597 C1            [10] 1148 	pop	bc
   0598 5E            [ 7] 1149 	ld	e,(hl)
   0599 3E 02         [ 7] 1150 	ld	a,#0x02
   059B 93            [ 4] 1151 	sub	a, e
   059C DAr5Ar06      [10] 1152 	jp	C,00129$
                           1153 ;src/main.c:255: && *getTilePtr(enemy->x - 1, enemy->y + G_ENEMY_H/2) <= 2
   059F DD 6E F8      [19] 1154 	ld	l,-8 (ix)
   05A2 DD 66 F9      [19] 1155 	ld	h,-7 (ix)
   05A5 7E            [ 7] 1156 	ld	a,(hl)
   05A6 C6 0B         [ 7] 1157 	add	a, #0x0B
   05A8 57            [ 4] 1158 	ld	d,a
   05A9 0A            [ 7] 1159 	ld	a,(bc)
   05AA C6 FF         [ 7] 1160 	add	a,#0xFF
   05AC C5            [11] 1161 	push	bc
   05AD D5            [11] 1162 	push	de
   05AE 33            [ 6] 1163 	inc	sp
   05AF F5            [11] 1164 	push	af
   05B0 33            [ 6] 1165 	inc	sp
   05B1 CDr0Br01      [17] 1166 	call	_getTilePtr
   05B4 F1            [10] 1167 	pop	af
   05B5 C1            [10] 1168 	pop	bc
   05B6 5E            [ 7] 1169 	ld	e,(hl)
   05B7 3E 02         [ 7] 1170 	ld	a,#0x02
   05B9 93            [ 4] 1171 	sub	a, e
   05BA DAr5Ar06      [10] 1172 	jp	C,00129$
                           1173 ;src/main.c:256: && *getTilePtr(enemy->x - 1, enemy->y + G_ENEMY_H) <= 2)
   05BD DD 6E F8      [19] 1174 	ld	l,-8 (ix)
   05C0 DD 66 F9      [19] 1175 	ld	h,-7 (ix)
   05C3 7E            [ 7] 1176 	ld	a,(hl)
   05C4 C6 16         [ 7] 1177 	add	a, #0x16
   05C6 57            [ 4] 1178 	ld	d,a
   05C7 0A            [ 7] 1179 	ld	a,(bc)
   05C8 C6 FF         [ 7] 1180 	add	a,#0xFF
   05CA C5            [11] 1181 	push	bc
   05CB D5            [11] 1182 	push	de
   05CC 33            [ 6] 1183 	inc	sp
   05CD F5            [11] 1184 	push	af
   05CE 33            [ 6] 1185 	inc	sp
   05CF CDr0Br01      [17] 1186 	call	_getTilePtr
   05D2 F1            [10] 1187 	pop	af
   05D3 C1            [10] 1188 	pop	bc
   05D4 5E            [ 7] 1189 	ld	e,(hl)
   05D5 3E 02         [ 7] 1190 	ld	a,#0x02
   05D7 93            [ 4] 1191 	sub	a, e
   05D8 DAr5Ar06      [10] 1192 	jp	C,00129$
                           1193 ;src/main.c:258: if( (cu.y + G_KNIFEX_0_H) < enemy->y || cu.y  > (enemy->y + G_ENEMY_H) ){
   05DB 21r1Br05      [10] 1194 	ld	hl, #_cu + 1
   05DE 5E            [ 7] 1195 	ld	e,(hl)
   05DF 16 00         [ 7] 1196 	ld	d,#0x00
   05E1 21 04 00      [10] 1197 	ld	hl,#0x0004
   05E4 19            [11] 1198 	add	hl,de
   05E5 DD 75 FE      [19] 1199 	ld	-2 (ix),l
   05E8 DD 74 FF      [19] 1200 	ld	-1 (ix),h
   05EB DD 6E F8      [19] 1201 	ld	l,-8 (ix)
   05EE DD 66 F9      [19] 1202 	ld	h,-7 (ix)
   05F1 6E            [ 7] 1203 	ld	l,(hl)
   05F2 26 00         [ 7] 1204 	ld	h,#0x00
   05F4 DD 7E FE      [19] 1205 	ld	a,-2 (ix)
   05F7 95            [ 4] 1206 	sub	a, l
   05F8 DD 7E FF      [19] 1207 	ld	a,-1 (ix)
   05FB 9C            [ 4] 1208 	sbc	a, h
   05FC E2r01r06      [10] 1209 	jp	PO, 00277$
   05FF EE 80         [ 7] 1210 	xor	a, #0x80
   0601                    1211 00277$:
   0601 FAr16r06      [10] 1212 	jp	M,00124$
   0604 D5            [11] 1213 	push	de
   0605 11 16 00      [10] 1214 	ld	de,#0x0016
   0608 19            [11] 1215 	add	hl, de
   0609 D1            [10] 1216 	pop	de
   060A 7D            [ 4] 1217 	ld	a,l
   060B 93            [ 4] 1218 	sub	a, e
   060C 7C            [ 4] 1219 	ld	a,h
   060D 9A            [ 4] 1220 	sbc	a, d
   060E E2r13r06      [10] 1221 	jp	PO, 00278$
   0611 EE 80         [ 7] 1222 	xor	a, #0x80
   0613                    1223 00278$:
   0613 F2r1Dr06      [10] 1224 	jp	P,00125$
   0616                    1225 00124$:
                           1226 ;src/main.c:259: colisiona = 0;
   0616 DD 36 F7 00   [19] 1227 	ld	-9 (ix),#0x00
   061A C3r0Er08      [10] 1228 	jp	00165$
   061D                    1229 00125$:
                           1230 ;src/main.c:262: if(enemy->x > cu.x){ //si el cu esta abajo
   061D 0A            [ 7] 1231 	ld	a,(bc)
   061E 5F            [ 4] 1232 	ld	e,a
   061F 21r1Ar05      [10] 1233 	ld	hl, #_cu + 0
   0622 4E            [ 7] 1234 	ld	c,(hl)
   0623 79            [ 4] 1235 	ld	a,c
   0624 93            [ 4] 1236 	sub	a, e
   0625 30 2C         [12] 1237 	jr	NC,00122$
                           1238 ;src/main.c:263: if( enemy->x - (cu.x + G_KNIFEX_0_W) > 1){ // si hay espacio entre el enemigo y el cu
   0627 6B            [ 4] 1239 	ld	l,e
   0628 26 00         [ 7] 1240 	ld	h,#0x00
   062A 06 00         [ 7] 1241 	ld	b,#0x00
   062C 03            [ 6] 1242 	inc	bc
   062D 03            [ 6] 1243 	inc	bc
   062E 03            [ 6] 1244 	inc	bc
   062F 03            [ 6] 1245 	inc	bc
   0630 BF            [ 4] 1246 	cp	a, a
   0631 ED 42         [15] 1247 	sbc	hl, bc
   0633 3E 01         [ 7] 1248 	ld	a,#0x01
   0635 BD            [ 4] 1249 	cp	a, l
   0636 3E 00         [ 7] 1250 	ld	a,#0x00
   0638 9C            [ 4] 1251 	sbc	a, h
   0639 E2r3Er06      [10] 1252 	jp	PO, 00279$
   063C EE 80         [ 7] 1253 	xor	a, #0x80
   063E                    1254 00279$:
   063E F2r48r06      [10] 1255 	jp	P,00119$
                           1256 ;src/main.c:264: colisiona = 0;
   0641 DD 36 F7 00   [19] 1257 	ld	-9 (ix),#0x00
   0645 C3r0Er08      [10] 1258 	jp	00165$
   0648                    1259 00119$:
                           1260 ;src/main.c:267: enemy->muerto = SI;
   0648 DD 6E FA      [19] 1261 	ld	l,-6 (ix)
   064B DD 66 FB      [19] 1262 	ld	h,-5 (ix)
   064E 36 01         [10] 1263 	ld	(hl),#0x01
   0650 C3r0Er08      [10] 1264 	jp	00165$
   0653                    1265 00122$:
                           1266 ;src/main.c:270: colisiona = 0;
   0653 DD 36 F7 00   [19] 1267 	ld	-9 (ix),#0x00
   0657 C3r0Er08      [10] 1268 	jp	00165$
   065A                    1269 00129$:
                           1270 ;src/main.c:274: enemy->mira = M_derecha;
   065A DD 6E FC      [19] 1271 	ld	l,-4 (ix)
   065D DD 66 FD      [19] 1272 	ld	h,-3 (ix)
   0660 36 00         [10] 1273 	ld	(hl),#0x00
                           1274 ;src/main.c:276: break;
   0662 C3r0Er08      [10] 1275 	jp	00165$
                           1276 ;src/main.c:277: case 2:
   0665                    1277 00133$:
                           1278 ;src/main.c:278: if( *getTilePtr(enemy->x, enemy->y - 2) <= 2
   0665 15            [ 4] 1279 	dec	d
   0666 15            [ 4] 1280 	dec	d
   0667 C5            [11] 1281 	push	bc
   0668 D5            [11] 1282 	push	de
   0669 CDr0Br01      [17] 1283 	call	_getTilePtr
   066C F1            [10] 1284 	pop	af
   066D C1            [10] 1285 	pop	bc
   066E 5E            [ 7] 1286 	ld	e,(hl)
   066F 3E 02         [ 7] 1287 	ld	a,#0x02
   0671 93            [ 4] 1288 	sub	a, e
   0672 DAr2Cr07      [10] 1289 	jp	C,00145$
                           1290 ;src/main.c:279: && *getTilePtr(enemy->x + G_ENEMY_W / 2, enemy->y - 2) <= 2
   0675 DD 6E F8      [19] 1291 	ld	l,-8 (ix)
   0678 DD 66 F9      [19] 1292 	ld	h,-7 (ix)
   067B 56            [ 7] 1293 	ld	d,(hl)
   067C 15            [ 4] 1294 	dec	d
   067D 15            [ 4] 1295 	dec	d
   067E 0A            [ 7] 1296 	ld	a,(bc)
   067F C6 02         [ 7] 1297 	add	a, #0x02
   0681 C5            [11] 1298 	push	bc
   0682 D5            [11] 1299 	push	de
   0683 33            [ 6] 1300 	inc	sp
   0684 F5            [11] 1301 	push	af
   0685 33            [ 6] 1302 	inc	sp
   0686 CDr0Br01      [17] 1303 	call	_getTilePtr
   0689 F1            [10] 1304 	pop	af
   068A C1            [10] 1305 	pop	bc
   068B 5E            [ 7] 1306 	ld	e,(hl)
   068C 3E 02         [ 7] 1307 	ld	a,#0x02
   068E 93            [ 4] 1308 	sub	a, e
   068F DAr2Cr07      [10] 1309 	jp	C,00145$
                           1310 ;src/main.c:280: && *getTilePtr(enemy->x + G_ENEMY_W, enemy->y - 2) <= 2)
   0692 DD 6E F8      [19] 1311 	ld	l,-8 (ix)
   0695 DD 66 F9      [19] 1312 	ld	h,-7 (ix)
   0698 56            [ 7] 1313 	ld	d,(hl)
   0699 15            [ 4] 1314 	dec	d
   069A 15            [ 4] 1315 	dec	d
   069B 0A            [ 7] 1316 	ld	a,(bc)
   069C C6 04         [ 7] 1317 	add	a, #0x04
   069E C5            [11] 1318 	push	bc
   069F D5            [11] 1319 	push	de
   06A0 33            [ 6] 1320 	inc	sp
   06A1 F5            [11] 1321 	push	af
   06A2 33            [ 6] 1322 	inc	sp
   06A3 CDr0Br01      [17] 1323 	call	_getTilePtr
   06A6 F1            [10] 1324 	pop	af
   06A7 C1            [10] 1325 	pop	bc
   06A8 5E            [ 7] 1326 	ld	e,(hl)
   06A9 3E 02         [ 7] 1327 	ld	a,#0x02
   06AB 93            [ 4] 1328 	sub	a, e
   06AC DAr2Cr07      [10] 1329 	jp	C,00145$
                           1330 ;src/main.c:282: if((cu.x + G_KNIFEY_0_W) < enemy->x || cu.x  > (enemy->x + G_ENEMY_W)){
   06AF 21r1Ar05      [10] 1331 	ld	hl, #_cu + 0
   06B2 5E            [ 7] 1332 	ld	e,(hl)
   06B3 16 00         [ 7] 1333 	ld	d,#0x00
   06B5 21 02 00      [10] 1334 	ld	hl,#0x0002
   06B8 19            [11] 1335 	add	hl,de
   06B9 DD 75 FE      [19] 1336 	ld	-2 (ix),l
   06BC DD 74 FF      [19] 1337 	ld	-1 (ix),h
   06BF 0A            [ 7] 1338 	ld	a,(bc)
   06C0 6F            [ 4] 1339 	ld	l,a
   06C1 26 00         [ 7] 1340 	ld	h,#0x00
   06C3 DD 7E FE      [19] 1341 	ld	a,-2 (ix)
   06C6 95            [ 4] 1342 	sub	a, l
   06C7 DD 7E FF      [19] 1343 	ld	a,-1 (ix)
   06CA 9C            [ 4] 1344 	sbc	a, h
   06CB E2rD0r06      [10] 1345 	jp	PO, 00280$
   06CE EE 80         [ 7] 1346 	xor	a, #0x80
   06D0                    1347 00280$:
   06D0 FArE3r06      [10] 1348 	jp	M,00140$
   06D3 23            [ 6] 1349 	inc	hl
   06D4 23            [ 6] 1350 	inc	hl
   06D5 23            [ 6] 1351 	inc	hl
   06D6 23            [ 6] 1352 	inc	hl
   06D7 7D            [ 4] 1353 	ld	a,l
   06D8 93            [ 4] 1354 	sub	a, e
   06D9 7C            [ 4] 1355 	ld	a,h
   06DA 9A            [ 4] 1356 	sbc	a, d
   06DB E2rE0r06      [10] 1357 	jp	PO, 00281$
   06DE EE 80         [ 7] 1358 	xor	a, #0x80
   06E0                    1359 00281$:
   06E0 F2rE9r06      [10] 1360 	jp	P,00141$
   06E3                    1361 00140$:
                           1362 ;src/main.c:284: colisiona = 0;
   06E3 DD 36 F7 00   [19] 1363 	ld	-9 (ix),#0x00
   06E7 18 4B         [12] 1364 	jr	00149$
   06E9                    1365 00141$:
                           1366 ;src/main.c:287: if(enemy->y>cu.y){
   06E9 DD 6E F8      [19] 1367 	ld	l,-8 (ix)
   06EC DD 66 F9      [19] 1368 	ld	h,-7 (ix)
   06EF 5E            [ 7] 1369 	ld	e,(hl)
   06F0 21r1Br05      [10] 1370 	ld	hl, #(_cu + 0x0001) + 0
   06F3 6E            [ 7] 1371 	ld	l,(hl)
   06F4 7D            [ 4] 1372 	ld	a,l
   06F5 93            [ 4] 1373 	sub	a, e
   06F6 30 2E         [12] 1374 	jr	NC,00138$
                           1375 ;src/main.c:288: if(enemy->y - (cu.y + G_KNIFEY_0_H)  > 2){
   06F8 16 00         [ 7] 1376 	ld	d,#0x00
   06FA 26 00         [ 7] 1377 	ld	h,#0x00
   06FC D5            [11] 1378 	push	de
   06FD 11 08 00      [10] 1379 	ld	de,#0x0008
   0700 19            [11] 1380 	add	hl, de
   0701 D1            [10] 1381 	pop	de
   0702 7B            [ 4] 1382 	ld	a,e
   0703 95            [ 4] 1383 	sub	a, l
   0704 5F            [ 4] 1384 	ld	e,a
   0705 7A            [ 4] 1385 	ld	a,d
   0706 9C            [ 4] 1386 	sbc	a, h
   0707 57            [ 4] 1387 	ld	d,a
   0708 3E 02         [ 7] 1388 	ld	a,#0x02
   070A BB            [ 4] 1389 	cp	a, e
   070B 3E 00         [ 7] 1390 	ld	a,#0x00
   070D 9A            [ 4] 1391 	sbc	a, d
   070E E2r13r07      [10] 1392 	jp	PO, 00282$
   0711 EE 80         [ 7] 1393 	xor	a, #0x80
   0713                    1394 00282$:
   0713 F2r1Cr07      [10] 1395 	jp	P,00135$
                           1396 ;src/main.c:289: colisiona = 0;
   0716 DD 36 F7 00   [19] 1397 	ld	-9 (ix),#0x00
   071A 18 18         [12] 1398 	jr	00149$
   071C                    1399 00135$:
                           1400 ;src/main.c:292: enemy->muerto = SI;
   071C DD 6E FA      [19] 1401 	ld	l,-6 (ix)
   071F DD 66 FB      [19] 1402 	ld	h,-5 (ix)
   0722 36 01         [10] 1403 	ld	(hl),#0x01
   0724 18 0E         [12] 1404 	jr	00149$
   0726                    1405 00138$:
                           1406 ;src/main.c:296: colisiona = 0;
   0726 DD 36 F7 00   [19] 1407 	ld	-9 (ix),#0x00
   072A 18 08         [12] 1408 	jr	00149$
   072C                    1409 00145$:
                           1410 ;src/main.c:302: enemy->mira = M_abajo;
   072C DD 6E FC      [19] 1411 	ld	l,-4 (ix)
   072F DD 66 FD      [19] 1412 	ld	h,-3 (ix)
   0732 36 03         [10] 1413 	ld	(hl),#0x03
                           1414 ;src/main.c:305: case 3:
   0734                    1415 00149$:
                           1416 ;src/main.c:308: if( *getTilePtr(enemy->x, enemy->y + G_ENEMY_H + 2) <= 2
   0734 DD 6E F8      [19] 1417 	ld	l,-8 (ix)
   0737 DD 66 F9      [19] 1418 	ld	h,-7 (ix)
   073A 7E            [ 7] 1419 	ld	a,(hl)
   073B C6 18         [ 7] 1420 	add	a, #0x18
   073D 57            [ 4] 1421 	ld	d,a
   073E 0A            [ 7] 1422 	ld	a,(bc)
   073F C5            [11] 1423 	push	bc
   0740 D5            [11] 1424 	push	de
   0741 33            [ 6] 1425 	inc	sp
   0742 F5            [11] 1426 	push	af
   0743 33            [ 6] 1427 	inc	sp
   0744 CDr0Br01      [17] 1428 	call	_getTilePtr
   0747 F1            [10] 1429 	pop	af
   0748 C1            [10] 1430 	pop	bc
   0749 5E            [ 7] 1431 	ld	e,(hl)
   074A 3E 02         [ 7] 1432 	ld	a,#0x02
   074C 93            [ 4] 1433 	sub	a, e
   074D DAr06r08      [10] 1434 	jp	C,00161$
                           1435 ;src/main.c:309: && *getTilePtr(enemy->x + G_ENEMY_W / 2, enemy->y + G_ENEMY_H + 2) <= 2
   0750 DD 6E F8      [19] 1436 	ld	l,-8 (ix)
   0753 DD 66 F9      [19] 1437 	ld	h,-7 (ix)
   0756 7E            [ 7] 1438 	ld	a,(hl)
   0757 C6 18         [ 7] 1439 	add	a, #0x18
   0759 57            [ 4] 1440 	ld	d,a
   075A 0A            [ 7] 1441 	ld	a,(bc)
   075B C6 02         [ 7] 1442 	add	a, #0x02
   075D C5            [11] 1443 	push	bc
   075E D5            [11] 1444 	push	de
   075F 33            [ 6] 1445 	inc	sp
   0760 F5            [11] 1446 	push	af
   0761 33            [ 6] 1447 	inc	sp
   0762 CDr0Br01      [17] 1448 	call	_getTilePtr
   0765 F1            [10] 1449 	pop	af
   0766 C1            [10] 1450 	pop	bc
   0767 5E            [ 7] 1451 	ld	e,(hl)
   0768 3E 02         [ 7] 1452 	ld	a,#0x02
   076A 93            [ 4] 1453 	sub	a, e
   076B DAr06r08      [10] 1454 	jp	C,00161$
                           1455 ;src/main.c:310: && *getTilePtr(enemy->x + G_ENEMY_W, enemy->y + G_ENEMY_H + 2) <= 2)
   076E DD 6E F8      [19] 1456 	ld	l,-8 (ix)
   0771 DD 66 F9      [19] 1457 	ld	h,-7 (ix)
   0774 7E            [ 7] 1458 	ld	a,(hl)
   0775 C6 18         [ 7] 1459 	add	a, #0x18
   0777 57            [ 4] 1460 	ld	d,a
   0778 0A            [ 7] 1461 	ld	a,(bc)
   0779 C6 04         [ 7] 1462 	add	a, #0x04
   077B C5            [11] 1463 	push	bc
   077C D5            [11] 1464 	push	de
   077D 33            [ 6] 1465 	inc	sp
   077E F5            [11] 1466 	push	af
   077F 33            [ 6] 1467 	inc	sp
   0780 CDr0Br01      [17] 1468 	call	_getTilePtr
   0783 F1            [10] 1469 	pop	af
   0784 C1            [10] 1470 	pop	bc
   0785 5E            [ 7] 1471 	ld	e,(hl)
   0786 3E 02         [ 7] 1472 	ld	a,#0x02
   0788 93            [ 4] 1473 	sub	a, e
   0789 38 7B         [12] 1474 	jr	C,00161$
                           1475 ;src/main.c:312: if( (cu.x + G_KNIFEY_0_W) < enemy->x || cu.x  > (enemy->x + G_ENEMY_W) ){
   078B 21r1Ar05      [10] 1476 	ld	hl, #_cu + 0
   078E 5E            [ 7] 1477 	ld	e,(hl)
   078F 16 00         [ 7] 1478 	ld	d,#0x00
   0791 21 02 00      [10] 1479 	ld	hl,#0x0002
   0794 19            [11] 1480 	add	hl,de
   0795 DD 75 FE      [19] 1481 	ld	-2 (ix),l
   0798 DD 74 FF      [19] 1482 	ld	-1 (ix),h
   079B 0A            [ 7] 1483 	ld	a,(bc)
   079C 4F            [ 4] 1484 	ld	c,a
   079D 06 00         [ 7] 1485 	ld	b,#0x00
   079F DD 7E FE      [19] 1486 	ld	a,-2 (ix)
   07A2 91            [ 4] 1487 	sub	a, c
   07A3 DD 7E FF      [19] 1488 	ld	a,-1 (ix)
   07A6 98            [ 4] 1489 	sbc	a, b
   07A7 E2rACr07      [10] 1490 	jp	PO, 00283$
   07AA EE 80         [ 7] 1491 	xor	a, #0x80
   07AC                    1492 00283$:
   07AC FArBFr07      [10] 1493 	jp	M,00156$
   07AF 03            [ 6] 1494 	inc	bc
   07B0 03            [ 6] 1495 	inc	bc
   07B1 03            [ 6] 1496 	inc	bc
   07B2 03            [ 6] 1497 	inc	bc
   07B3 79            [ 4] 1498 	ld	a,c
   07B4 93            [ 4] 1499 	sub	a, e
   07B5 78            [ 4] 1500 	ld	a,b
   07B6 9A            [ 4] 1501 	sbc	a, d
   07B7 E2rBCr07      [10] 1502 	jp	PO, 00284$
   07BA EE 80         [ 7] 1503 	xor	a, #0x80
   07BC                    1504 00284$:
   07BC F2rC5r07      [10] 1505 	jp	P,00157$
   07BF                    1506 00156$:
                           1507 ;src/main.c:313: colisiona = 0;
   07BF DD 36 F7 00   [19] 1508 	ld	-9 (ix),#0x00
   07C3 18 49         [12] 1509 	jr	00165$
   07C5                    1510 00157$:
                           1511 ;src/main.c:316: if(cu.y > enemy->y){ //si el cu esta abajo
   07C5 21r1Br05      [10] 1512 	ld	hl, #(_cu + 0x0001) + 0
   07C8 4E            [ 7] 1513 	ld	c,(hl)
   07C9 DD 6E F8      [19] 1514 	ld	l,-8 (ix)
   07CC DD 66 F9      [19] 1515 	ld	h,-7 (ix)
   07CF 5E            [ 7] 1516 	ld	e,(hl)
   07D0 7B            [ 4] 1517 	ld	a,e
   07D1 91            [ 4] 1518 	sub	a, c
   07D2 30 2C         [12] 1519 	jr	NC,00154$
                           1520 ;src/main.c:317: if( cu.y - (enemy->y + G_ENEMY_H)  > 2){ // si hay espacio entre el enemigo y el cu
   07D4 06 00         [ 7] 1521 	ld	b,#0x00
   07D6 16 00         [ 7] 1522 	ld	d,#0x00
   07D8 21 16 00      [10] 1523 	ld	hl,#0x0016
   07DB 19            [11] 1524 	add	hl,de
   07DC 79            [ 4] 1525 	ld	a,c
   07DD 95            [ 4] 1526 	sub	a, l
   07DE 4F            [ 4] 1527 	ld	c,a
   07DF 78            [ 4] 1528 	ld	a,b
   07E0 9C            [ 4] 1529 	sbc	a, h
   07E1 47            [ 4] 1530 	ld	b,a
   07E2 3E 02         [ 7] 1531 	ld	a,#0x02
   07E4 B9            [ 4] 1532 	cp	a, c
   07E5 3E 00         [ 7] 1533 	ld	a,#0x00
   07E7 98            [ 4] 1534 	sbc	a, b
   07E8 E2rEDr07      [10] 1535 	jp	PO, 00285$
   07EB EE 80         [ 7] 1536 	xor	a, #0x80
   07ED                    1537 00285$:
   07ED F2rF6r07      [10] 1538 	jp	P,00151$
                           1539 ;src/main.c:318: colisiona = 0;
   07F0 DD 36 F7 00   [19] 1540 	ld	-9 (ix),#0x00
   07F4 18 18         [12] 1541 	jr	00165$
   07F6                    1542 00151$:
                           1543 ;src/main.c:321: enemy->muerto = SI;
   07F6 DD 6E FA      [19] 1544 	ld	l,-6 (ix)
   07F9 DD 66 FB      [19] 1545 	ld	h,-5 (ix)
   07FC 36 01         [10] 1546 	ld	(hl),#0x01
   07FE 18 0E         [12] 1547 	jr	00165$
   0800                    1548 00154$:
                           1549 ;src/main.c:325: colisiona = 0;
   0800 DD 36 F7 00   [19] 1550 	ld	-9 (ix),#0x00
   0804 18 08         [12] 1551 	jr	00165$
   0806                    1552 00161$:
                           1553 ;src/main.c:329: enemy->mira = M_arriba;
   0806 DD 6E FC      [19] 1554 	ld	l,-4 (ix)
   0809 DD 66 FD      [19] 1555 	ld	h,-3 (ix)
   080C 36 02         [10] 1556 	ld	(hl),#0x02
                           1557 ;src/main.c:332: }
   080E                    1558 00165$:
                           1559 ;src/main.c:333: return colisiona;
   080E DD 6E F7      [19] 1560 	ld	l,-9 (ix)
   0811 DD F9         [10] 1561 	ld	sp, ix
   0813 DD E1         [14] 1562 	pop	ix
   0815 C9            [10] 1563 	ret
                           1564 ;src/main.c:336: void moverEnemigoArriba(TEnemy *enemy){
                           1565 ;	---------------------------------
                           1566 ; Function moverEnemigoArriba
                           1567 ; ---------------------------------
   0816                    1568 _moverEnemigoArriba::
   0816 DD E5         [15] 1569 	push	ix
   0818 DD 21 00 00   [14] 1570 	ld	ix,#0
   081C DD 39         [15] 1571 	add	ix,sp
                           1572 ;src/main.c:337: enemy->y--;
   081E DD 4E 04      [19] 1573 	ld	c,4 (ix)
   0821 DD 46 05      [19] 1574 	ld	b,5 (ix)
   0824 69            [ 4] 1575 	ld	l, c
   0825 60            [ 4] 1576 	ld	h, b
   0826 23            [ 6] 1577 	inc	hl
   0827 5E            [ 7] 1578 	ld	e,(hl)
   0828 1D            [ 4] 1579 	dec	e
   0829 73            [ 7] 1580 	ld	(hl),e
                           1581 ;src/main.c:338: enemy->y--;
   082A 1D            [ 4] 1582 	dec	e
   082B 73            [ 7] 1583 	ld	(hl),e
                           1584 ;src/main.c:339: enemy->mover = SI;
   082C 21 06 00      [10] 1585 	ld	hl,#0x0006
   082F 09            [11] 1586 	add	hl,bc
   0830 36 01         [10] 1587 	ld	(hl),#0x01
   0832 DD E1         [14] 1588 	pop	ix
   0834 C9            [10] 1589 	ret
                           1590 ;src/main.c:342: void moverEnemigoAbajo(TEnemy *enemy){
                           1591 ;	---------------------------------
                           1592 ; Function moverEnemigoAbajo
                           1593 ; ---------------------------------
   0835                    1594 _moverEnemigoAbajo::
   0835 DD E5         [15] 1595 	push	ix
   0837 DD 21 00 00   [14] 1596 	ld	ix,#0
   083B DD 39         [15] 1597 	add	ix,sp
                           1598 ;src/main.c:343: enemy->y++;
   083D DD 4E 04      [19] 1599 	ld	c,4 (ix)
   0840 DD 46 05      [19] 1600 	ld	b,5 (ix)
   0843 59            [ 4] 1601 	ld	e, c
   0844 50            [ 4] 1602 	ld	d, b
   0845 13            [ 6] 1603 	inc	de
   0846 1A            [ 7] 1604 	ld	a,(de)
   0847 3C            [ 4] 1605 	inc	a
   0848 12            [ 7] 1606 	ld	(de),a
                           1607 ;src/main.c:344: enemy->y++;
   0849 3C            [ 4] 1608 	inc	a
   084A 12            [ 7] 1609 	ld	(de),a
                           1610 ;src/main.c:345: enemy->mover = SI;
   084B 21 06 00      [10] 1611 	ld	hl,#0x0006
   084E 09            [11] 1612 	add	hl,bc
   084F 36 01         [10] 1613 	ld	(hl),#0x01
   0851 DD E1         [14] 1614 	pop	ix
   0853 C9            [10] 1615 	ret
                           1616 ;src/main.c:348: void moverEnemigoDerecha(TEnemy *enemy){
                           1617 ;	---------------------------------
                           1618 ; Function moverEnemigoDerecha
                           1619 ; ---------------------------------
   0854                    1620 _moverEnemigoDerecha::
                           1621 ;src/main.c:349: enemy->x++;
   0854 D1            [10] 1622 	pop	de
   0855 C1            [10] 1623 	pop	bc
   0856 C5            [11] 1624 	push	bc
   0857 D5            [11] 1625 	push	de
   0858 0A            [ 7] 1626 	ld	a,(bc)
   0859 3C            [ 4] 1627 	inc	a
   085A 02            [ 7] 1628 	ld	(bc),a
                           1629 ;src/main.c:350: enemy->x++;
   085B 3C            [ 4] 1630 	inc	a
   085C 02            [ 7] 1631 	ld	(bc),a
                           1632 ;src/main.c:351: enemy->mover = SI;
   085D 21 06 00      [10] 1633 	ld	hl,#0x0006
   0860 09            [11] 1634 	add	hl,bc
   0861 36 01         [10] 1635 	ld	(hl),#0x01
   0863 C9            [10] 1636 	ret
                           1637 ;src/main.c:354: void moverEnemigoIzquierda(TEnemy *enemy){
                           1638 ;	---------------------------------
                           1639 ; Function moverEnemigoIzquierda
                           1640 ; ---------------------------------
   0864                    1641 _moverEnemigoIzquierda::
                           1642 ;src/main.c:355: enemy->x--;
   0864 D1            [10] 1643 	pop	de
   0865 C1            [10] 1644 	pop	bc
   0866 C5            [11] 1645 	push	bc
   0867 D5            [11] 1646 	push	de
   0868 0A            [ 7] 1647 	ld	a,(bc)
   0869 C6 FF         [ 7] 1648 	add	a,#0xFF
   086B 02            [ 7] 1649 	ld	(bc),a
                           1650 ;src/main.c:356: enemy->x--;
   086C C6 FF         [ 7] 1651 	add	a,#0xFF
   086E 02            [ 7] 1652 	ld	(bc),a
                           1653 ;src/main.c:357: enemy->mover = SI;
   086F 21 06 00      [10] 1654 	ld	hl,#0x0006
   0872 09            [11] 1655 	add	hl,bc
   0873 36 01         [10] 1656 	ld	(hl),#0x01
   0875 C9            [10] 1657 	ret
                           1658 ;src/main.c:360: void moverEnemigoPathfinding(TEnemy *enemy){
                           1659 ;	---------------------------------
                           1660 ; Function moverEnemigoPathfinding
                           1661 ; ---------------------------------
   0876                    1662 _moverEnemigoPathfinding::
   0876 DD E5         [15] 1663 	push	ix
   0878 DD 21 00 00   [14] 1664 	ld	ix,#0
   087C DD 39         [15] 1665 	add	ix,sp
   087E 21 F3 FF      [10] 1666 	ld	hl,#-13
   0881 39            [11] 1667 	add	hl,sp
   0882 F9            [ 6] 1668 	ld	sp,hl
                           1669 ;src/main.c:361: if(!enemy->muerto){
   0883 DD 4E 04      [19] 1670 	ld	c,4 (ix)
   0886 DD 46 05      [19] 1671 	ld	b,5 (ix)
   0889 C5            [11] 1672 	push	bc
   088A FD E1         [14] 1673 	pop	iy
   088C FD 7E 08      [19] 1674 	ld	a,8 (iy)
   088F B7            [ 4] 1675 	or	a, a
   0890 C2r9Cr09      [10] 1676 	jp	NZ,00112$
                           1677 ;src/main.c:363: if (!enemy->reversePatrol) {
   0893 21 0D 00      [10] 1678 	ld	hl,#0x000D
   0896 09            [11] 1679 	add	hl,bc
   0897 E3            [19] 1680 	ex	(sp), hl
   0898 E1            [10] 1681 	pop	hl
   0899 E5            [11] 1682 	push	hl
   089A 7E            [ 7] 1683 	ld	a,(hl)
   089B DD 77 FF      [19] 1684 	ld	-1 (ix),a
                           1685 ;src/main.c:364: if(enemy->iter < enemy->longitud_camino - 8){
   089E 21 0F 00      [10] 1686 	ld	hl,#0x000F
   08A1 09            [11] 1687 	add	hl,bc
   08A2 EB            [ 4] 1688 	ex	de,hl
                           1689 ;src/main.c:365: enemy->x = enemy->camino[enemy->iter];
   08A3 21 17 00      [10] 1690 	ld	hl,#0x0017
   08A6 09            [11] 1691 	add	hl,bc
   08A7 DD 75 FD      [19] 1692 	ld	-3 (ix),l
   08AA DD 74 FE      [19] 1693 	ld	-2 (ix),h
                           1694 ;src/main.c:367: enemy->y = enemy->camino[enemy->iter];
   08AD 21 01 00      [10] 1695 	ld	hl,#0x0001
   08B0 09            [11] 1696 	add	hl,bc
   08B1 DD 75 FB      [19] 1697 	ld	-5 (ix),l
   08B4 DD 74 FC      [19] 1698 	ld	-4 (ix),h
                           1699 ;src/main.c:369: enemy->mover = SI;
   08B7 21 06 00      [10] 1700 	ld	hl,#0x0006
   08BA 09            [11] 1701 	add	hl,bc
   08BB DD 75 F9      [19] 1702 	ld	-7 (ix),l
   08BE DD 74 FA      [19] 1703 	ld	-6 (ix),h
                           1704 ;src/main.c:372: enemy->lastIter = enemy->iter - 1;
   08C1 21 10 00      [10] 1705 	ld	hl,#0x0010
   08C4 09            [11] 1706 	add	hl,bc
   08C5 DD 75 F7      [19] 1707 	ld	-9 (ix),l
   08C8 DD 74 F8      [19] 1708 	ld	-8 (ix),h
                           1709 ;src/main.c:363: if (!enemy->reversePatrol) {
   08CB DD 7E FF      [19] 1710 	ld	a,-1 (ix)
   08CE B7            [ 4] 1711 	or	a, a
   08CF 20 78         [12] 1712 	jr	NZ,00108$
                           1713 ;src/main.c:364: if(enemy->iter < enemy->longitud_camino - 8){
   08D1 1A            [ 7] 1714 	ld	a,(de)
   08D2 DD 77 FF      [19] 1715 	ld	-1 (ix),a
   08D5 69            [ 4] 1716 	ld	l, c
   08D6 60            [ 4] 1717 	ld	h, b
   08D7 C5            [11] 1718 	push	bc
   08D8 01 43 01      [10] 1719 	ld	bc, #0x0143
   08DB 09            [11] 1720 	add	hl, bc
   08DC C1            [10] 1721 	pop	bc
   08DD 6E            [ 7] 1722 	ld	l,(hl)
   08DE 26 00         [ 7] 1723 	ld	h,#0x00
   08E0 7D            [ 4] 1724 	ld	a,l
   08E1 C6 F8         [ 7] 1725 	add	a,#0xF8
   08E3 DD 77 F5      [19] 1726 	ld	-11 (ix),a
   08E6 7C            [ 4] 1727 	ld	a,h
   08E7 CE FF         [ 7] 1728 	adc	a,#0xFF
   08E9 DD 77 F6      [19] 1729 	ld	-10 (ix),a
   08EC DD 7E FF      [19] 1730 	ld	a, -1 (ix)
   08EF 26 00         [ 7] 1731 	ld	h, #0x00
   08F1 DD 96 F5      [19] 1732 	sub	a, -11 (ix)
   08F4 7C            [ 4] 1733 	ld	a,h
   08F5 DD 9E F6      [19] 1734 	sbc	a, -10 (ix)
   08F8 E2rFDr08      [10] 1735 	jp	PO, 00130$
   08FB EE 80         [ 7] 1736 	xor	a, #0x80
   08FD                    1737 00130$:
   08FD F2r38r09      [10] 1738 	jp	P,00102$
                           1739 ;src/main.c:365: enemy->x = enemy->camino[enemy->iter];
   0900 DD 6E FF      [19] 1740 	ld	l,-1 (ix)
   0903 26 00         [ 7] 1741 	ld	h,#0x00
   0905 DD 7E FD      [19] 1742 	ld	a,-3 (ix)
   0908 85            [ 4] 1743 	add	a, l
   0909 6F            [ 4] 1744 	ld	l,a
   090A DD 7E FE      [19] 1745 	ld	a,-2 (ix)
   090D 8C            [ 4] 1746 	adc	a, h
   090E 67            [ 4] 1747 	ld	h,a
   090F 7E            [ 7] 1748 	ld	a,(hl)
   0910 02            [ 7] 1749 	ld	(bc),a
                           1750 ;src/main.c:366: enemy->iter++;
   0911 1A            [ 7] 1751 	ld	a,(de)
   0912 4F            [ 4] 1752 	ld	c,a
   0913 0C            [ 4] 1753 	inc	c
   0914 79            [ 4] 1754 	ld	a,c
   0915 12            [ 7] 1755 	ld	(de),a
                           1756 ;src/main.c:367: enemy->y = enemy->camino[enemy->iter];
   0916 69            [ 4] 1757 	ld	l,c
   0917 26 00         [ 7] 1758 	ld	h,#0x00
   0919 DD 7E FD      [19] 1759 	ld	a,-3 (ix)
   091C 85            [ 4] 1760 	add	a, l
   091D 6F            [ 4] 1761 	ld	l,a
   091E DD 7E FE      [19] 1762 	ld	a,-2 (ix)
   0921 8C            [ 4] 1763 	adc	a, h
   0922 67            [ 4] 1764 	ld	h,a
   0923 46            [ 7] 1765 	ld	b,(hl)
   0924 DD 6E FB      [19] 1766 	ld	l,-5 (ix)
   0927 DD 66 FC      [19] 1767 	ld	h,-4 (ix)
   092A 70            [ 7] 1768 	ld	(hl),b
                           1769 ;src/main.c:368: enemy->iter++;
   092B 0C            [ 4] 1770 	inc	c
   092C 79            [ 4] 1771 	ld	a,c
   092D 12            [ 7] 1772 	ld	(de),a
                           1773 ;src/main.c:369: enemy->mover = SI;
   092E DD 6E F9      [19] 1774 	ld	l,-7 (ix)
   0931 DD 66 FA      [19] 1775 	ld	h,-6 (ix)
   0934 36 01         [10] 1776 	ld	(hl),#0x01
   0936 18 64         [12] 1777 	jr	00112$
   0938                    1778 00102$:
                           1779 ;src/main.c:372: enemy->lastIter = enemy->iter - 1;
   0938 DD 4E FF      [19] 1780 	ld	c,-1 (ix)
   093B 0D            [ 4] 1781 	dec	c
   093C DD 6E F7      [19] 1782 	ld	l,-9 (ix)
   093F DD 66 F8      [19] 1783 	ld	h,-8 (ix)
   0942 71            [ 7] 1784 	ld	(hl),c
                           1785 ;src/main.c:375: enemy->reversePatrol = 1;
   0943 E1            [10] 1786 	pop	hl
   0944 E5            [11] 1787 	push	hl
   0945 36 01         [10] 1788 	ld	(hl),#0x01
   0947 18 53         [12] 1789 	jr	00112$
   0949                    1790 00108$:
                           1791 ;src/main.c:378: if(enemy->lastIter > 1){
   0949 DD 6E F7      [19] 1792 	ld	l,-9 (ix)
   094C DD 66 F8      [19] 1793 	ld	h,-8 (ix)
   094F 6E            [ 7] 1794 	ld	l,(hl)
   0950 3E 01         [ 7] 1795 	ld	a,#0x01
   0952 95            [ 4] 1796 	sub	a, l
   0953 30 41         [12] 1797 	jr	NC,00105$
                           1798 ;src/main.c:379: enemy->y = enemy->camino[enemy->lastIter];
   0955 26 00         [ 7] 1799 	ld	h,#0x00
   0957 DD 5E FD      [19] 1800 	ld	e,-3 (ix)
   095A DD 56 FE      [19] 1801 	ld	d,-2 (ix)
   095D 19            [11] 1802 	add	hl,de
   095E 5E            [ 7] 1803 	ld	e,(hl)
   095F DD 6E FB      [19] 1804 	ld	l,-5 (ix)
   0962 DD 66 FC      [19] 1805 	ld	h,-4 (ix)
   0965 73            [ 7] 1806 	ld	(hl),e
                           1807 ;src/main.c:380: enemy->lastIter--;
   0966 DD 6E F7      [19] 1808 	ld	l,-9 (ix)
   0969 DD 66 F8      [19] 1809 	ld	h,-8 (ix)
   096C 5E            [ 7] 1810 	ld	e,(hl)
   096D 1D            [ 4] 1811 	dec	e
   096E DD 6E F7      [19] 1812 	ld	l,-9 (ix)
   0971 DD 66 F8      [19] 1813 	ld	h,-8 (ix)
   0974 73            [ 7] 1814 	ld	(hl),e
                           1815 ;src/main.c:381: enemy->x = enemy->camino[enemy->lastIter];
   0975 6B            [ 4] 1816 	ld	l,e
   0976 26 00         [ 7] 1817 	ld	h,#0x00
   0978 DD 7E FD      [19] 1818 	ld	a,-3 (ix)
   097B 85            [ 4] 1819 	add	a, l
   097C 6F            [ 4] 1820 	ld	l,a
   097D DD 7E FE      [19] 1821 	ld	a,-2 (ix)
   0980 8C            [ 4] 1822 	adc	a, h
   0981 67            [ 4] 1823 	ld	h,a
   0982 7E            [ 7] 1824 	ld	a,(hl)
   0983 02            [ 7] 1825 	ld	(bc),a
                           1826 ;src/main.c:382: enemy->lastIter--;
   0984 1D            [ 4] 1827 	dec	e
   0985 DD 6E F7      [19] 1828 	ld	l,-9 (ix)
   0988 DD 66 F8      [19] 1829 	ld	h,-8 (ix)
   098B 73            [ 7] 1830 	ld	(hl),e
                           1831 ;src/main.c:383: enemy->mover = SI;
   098C DD 6E F9      [19] 1832 	ld	l,-7 (ix)
   098F DD 66 FA      [19] 1833 	ld	h,-6 (ix)
   0992 36 01         [10] 1834 	ld	(hl),#0x01
   0994 18 06         [12] 1835 	jr	00112$
   0996                    1836 00105$:
                           1837 ;src/main.c:386: enemy->iter = 0;
   0996 AF            [ 4] 1838 	xor	a, a
   0997 12            [ 7] 1839 	ld	(de),a
                           1840 ;src/main.c:388: enemy->reversePatrol = 0;
   0998 E1            [10] 1841 	pop	hl
   0999 E5            [11] 1842 	push	hl
   099A 36 00         [10] 1843 	ld	(hl),#0x00
   099C                    1844 00112$:
   099C DD F9         [10] 1845 	ld	sp, ix
   099E DD E1         [14] 1846 	pop	ix
   09A0 C9            [10] 1847 	ret
                           1848 ;src/main.c:395: void moverEnemigo(TEnemy *enemy){
                           1849 ;	---------------------------------
                           1850 ; Function moverEnemigo
                           1851 ; ---------------------------------
   09A1                    1852 _moverEnemigo::
   09A1 DD E5         [15] 1853 	push	ix
   09A3 DD 21 00 00   [14] 1854 	ld	ix,#0
   09A7 DD 39         [15] 1855 	add	ix,sp
                           1856 ;src/main.c:396: if(!enemy->muerto){
   09A9 DD 4E 04      [19] 1857 	ld	c,4 (ix)
   09AC DD 46 05      [19] 1858 	ld	b,5 (ix)
   09AF C5            [11] 1859 	push	bc
   09B0 FD E1         [14] 1860 	pop	iy
   09B2 FD 7E 08      [19] 1861 	ld	a,8 (iy)
   09B5 B7            [ 4] 1862 	or	a, a
   09B6 20 46         [12] 1863 	jr	NZ,00110$
                           1864 ;src/main.c:397: if(!checkEnemyCollision(enemy->mira, enemy)){
   09B8 21 07 00      [10] 1865 	ld	hl,#0x0007
   09BB 09            [11] 1866 	add	hl,bc
   09BC 5E            [ 7] 1867 	ld	e,(hl)
   09BD 16 00         [ 7] 1868 	ld	d,#0x00
   09BF E5            [11] 1869 	push	hl
   09C0 C5            [11] 1870 	push	bc
   09C1 C5            [11] 1871 	push	bc
   09C2 D5            [11] 1872 	push	de
   09C3 CDr46r04      [17] 1873 	call	_checkEnemyCollision
   09C6 F1            [10] 1874 	pop	af
   09C7 F1            [10] 1875 	pop	af
   09C8 7D            [ 4] 1876 	ld	a,l
   09C9 C1            [10] 1877 	pop	bc
   09CA E1            [10] 1878 	pop	hl
   09CB B7            [ 4] 1879 	or	a, a
   09CC 20 30         [12] 1880 	jr	NZ,00110$
                           1881 ;src/main.c:399: switch (enemy->mira) {
   09CE 5E            [ 7] 1882 	ld	e,(hl)
   09CF 3E 03         [ 7] 1883 	ld	a,#0x03
   09D1 93            [ 4] 1884 	sub	a, e
   09D2 38 2A         [12] 1885 	jr	C,00110$
   09D4 16 00         [ 7] 1886 	ld	d,#0x00
   09D6 21rDCr09      [10] 1887 	ld	hl,#00124$
   09D9 19            [11] 1888 	add	hl,de
   09DA 19            [11] 1889 	add	hl,de
                           1890 ;src/main.c:401: case 0:
   09DB E9            [ 4] 1891 	jp	(hl)
   09DC                    1892 00124$:
   09DC 18 06         [12] 1893 	jr	00101$
   09DE 18 0B         [12] 1894 	jr	00102$
   09E0 18 10         [12] 1895 	jr	00103$
   09E2 18 15         [12] 1896 	jr	00104$
   09E4                    1897 00101$:
                           1898 ;src/main.c:402: moverEnemigoDerecha(enemy);
   09E4 C5            [11] 1899 	push	bc
   09E5 CDr54r08      [17] 1900 	call	_moverEnemigoDerecha
   09E8 F1            [10] 1901 	pop	af
                           1902 ;src/main.c:403: break;
   09E9 18 13         [12] 1903 	jr	00110$
                           1904 ;src/main.c:404: case 1:
   09EB                    1905 00102$:
                           1906 ;src/main.c:405: moverEnemigoIzquierda(enemy);
   09EB C5            [11] 1907 	push	bc
   09EC CDr64r08      [17] 1908 	call	_moverEnemigoIzquierda
   09EF F1            [10] 1909 	pop	af
                           1910 ;src/main.c:406: break;
   09F0 18 0C         [12] 1911 	jr	00110$
                           1912 ;src/main.c:407: case 2:
   09F2                    1913 00103$:
                           1914 ;src/main.c:408: moverEnemigoArriba(enemy);
   09F2 C5            [11] 1915 	push	bc
   09F3 CDr16r08      [17] 1916 	call	_moverEnemigoArriba
   09F6 F1            [10] 1917 	pop	af
                           1918 ;src/main.c:409: break;
   09F7 18 05         [12] 1919 	jr	00110$
                           1920 ;src/main.c:410: case 3:
   09F9                    1921 00104$:
                           1922 ;src/main.c:411: moverEnemigoAbajo(enemy);
   09F9 C5            [11] 1923 	push	bc
   09FA CDr35r08      [17] 1924 	call	_moverEnemigoAbajo
   09FD F1            [10] 1925 	pop	af
                           1926 ;src/main.c:413: }
   09FE                    1927 00110$:
   09FE DD E1         [14] 1928 	pop	ix
   0A00 C9            [10] 1929 	ret
                           1930 ;src/main.c:418: void lookFor(TEnemy* enemy){
                           1931 ;	---------------------------------
                           1932 ; Function lookFor
                           1933 ; ---------------------------------
   0A01                    1934 _lookFor::
   0A01 DD E5         [15] 1935 	push	ix
   0A03 DD 21 00 00   [14] 1936 	ld	ix,#0
   0A07 DD 39         [15] 1937 	add	ix,sp
   0A09 21 F6 FF      [10] 1938 	ld	hl,#-10
   0A0C 39            [11] 1939 	add	hl,sp
   0A0D F9            [ 6] 1940 	ld	sp,hl
                           1941 ;src/main.c:421: u8 interpone = NO;
   0A0E 0E 00         [ 7] 1942 	ld	c,#0x00
                           1943 ;src/main.c:425: u8 difx = abs(enemy->x - prota.x);
   0A10 DD 7E 04      [19] 1944 	ld	a,4 (ix)
   0A13 DD 77 FA      [19] 1945 	ld	-6 (ix),a
   0A16 DD 7E 05      [19] 1946 	ld	a,5 (ix)
   0A19 DD 77 FB      [19] 1947 	ld	-5 (ix),a
   0A1C DD 6E FA      [19] 1948 	ld	l,-6 (ix)
   0A1F DD 66 FB      [19] 1949 	ld	h,-5 (ix)
   0A22 46            [ 7] 1950 	ld	b,(hl)
   0A23 16 00         [ 7] 1951 	ld	d,#0x00
   0A25 21r12r05      [10] 1952 	ld	hl,#_prota+0
   0A28 6E            [ 7] 1953 	ld	l,(hl)
   0A29 26 00         [ 7] 1954 	ld	h,#0x00
   0A2B 78            [ 4] 1955 	ld	a,b
   0A2C 95            [ 4] 1956 	sub	a, l
   0A2D 5F            [ 4] 1957 	ld	e,a
   0A2E 7A            [ 4] 1958 	ld	a,d
   0A2F 9C            [ 4] 1959 	sbc	a, h
   0A30 57            [ 4] 1960 	ld	d,a
   0A31 C5            [11] 1961 	push	bc
   0A32 D5            [11] 1962 	push	de
   0A33 CDr00r00      [17] 1963 	call	_abs
   0A36 F1            [10] 1964 	pop	af
   0A37 C1            [10] 1965 	pop	bc
   0A38 45            [ 4] 1966 	ld	b,l
                           1967 ;src/main.c:426: u8 dify = abs(enemy->y - prota.y);
   0A39 DD 7E FA      [19] 1968 	ld	a,-6 (ix)
   0A3C C6 01         [ 7] 1969 	add	a, #0x01
   0A3E DD 77 F8      [19] 1970 	ld	-8 (ix),a
   0A41 DD 7E FB      [19] 1971 	ld	a,-5 (ix)
   0A44 CE 00         [ 7] 1972 	adc	a, #0x00
   0A46 DD 77 F9      [19] 1973 	ld	-7 (ix),a
   0A49 DD 6E F8      [19] 1974 	ld	l,-8 (ix)
   0A4C DD 66 F9      [19] 1975 	ld	h,-7 (ix)
   0A4F 5E            [ 7] 1976 	ld	e,(hl)
   0A50 16 00         [ 7] 1977 	ld	d,#0x00
   0A52 21r13r05      [10] 1978 	ld	hl, #(_prota + 0x0001) + 0
   0A55 6E            [ 7] 1979 	ld	l,(hl)
   0A56 26 00         [ 7] 1980 	ld	h,#0x00
   0A58 7B            [ 4] 1981 	ld	a,e
   0A59 95            [ 4] 1982 	sub	a, l
   0A5A 5F            [ 4] 1983 	ld	e,a
   0A5B 7A            [ 4] 1984 	ld	a,d
   0A5C 9C            [ 4] 1985 	sbc	a, h
   0A5D 57            [ 4] 1986 	ld	d,a
   0A5E C5            [11] 1987 	push	bc
   0A5F D5            [11] 1988 	push	de
   0A60 CDr00r00      [17] 1989 	call	_abs
   0A63 F1            [10] 1990 	pop	af
   0A64 C1            [10] 1991 	pop	bc
                           1992 ;src/main.c:427: dist = difx + dify; // manhattan
   0A65 78            [ 4] 1993 	ld	a,b
   0A66 85            [ 4] 1994 	add	a, l
   0A67 47            [ 4] 1995 	ld	b,a
                           1996 ;src/main.c:429: enemy->seen = NO;
   0A68 DD 7E FA      [19] 1997 	ld	a,-6 (ix)
   0A6B C6 12         [ 7] 1998 	add	a, #0x12
   0A6D DD 77 F6      [19] 1999 	ld	-10 (ix),a
   0A70 DD 7E FB      [19] 2000 	ld	a,-5 (ix)
   0A73 CE 00         [ 7] 2001 	adc	a, #0x00
   0A75 DD 77 F7      [19] 2002 	ld	-9 (ix),a
   0A78 E1            [10] 2003 	pop	hl
   0A79 E5            [11] 2004 	push	hl
   0A7A 36 00         [10] 2005 	ld	(hl),#0x00
                           2006 ;src/main.c:430: enemy->inRange = NO;
   0A7C DD 7E FA      [19] 2007 	ld	a,-6 (ix)
   0A7F C6 11         [ 7] 2008 	add	a, #0x11
   0A81 DD 77 FE      [19] 2009 	ld	-2 (ix),a
   0A84 DD 7E FB      [19] 2010 	ld	a,-5 (ix)
   0A87 CE 00         [ 7] 2011 	adc	a, #0x00
   0A89 DD 77 FF      [19] 2012 	ld	-1 (ix),a
   0A8C DD 6E FE      [19] 2013 	ld	l,-2 (ix)
   0A8F DD 66 FF      [19] 2014 	ld	h,-1 (ix)
   0A92 36 00         [10] 2015 	ld	(hl),#0x00
                           2016 ;src/main.c:432: if (dist <= 10) {// te detectan los sensores de proximidad
   0A94 3E 0A         [ 7] 2017 	ld	a,#0x0A
   0A96 90            [ 4] 2018 	sub	a, b
   0A97 38 0F         [12] 2019 	jr	C,00123$
                           2020 ;src/main.c:433: enemy->seen = 1;
   0A99 E1            [10] 2021 	pop	hl
   0A9A E5            [11] 2022 	push	hl
   0A9B 36 01         [10] 2023 	ld	(hl),#0x01
                           2024 ;src/main.c:434: enemy->inRange = 1;
   0A9D DD 6E FE      [19] 2025 	ld	l,-2 (ix)
   0AA0 DD 66 FF      [19] 2026 	ld	h,-1 (ix)
   0AA3 36 01         [10] 2027 	ld	(hl),#0x01
   0AA5 C3r9Fr0B      [10] 2028 	jp	00133$
   0AA8                    2029 00123$:
                           2030 ;src/main.c:435: } else if(enemy->x > prota.x - 50 && enemy->x < prota.x + 50  ){
   0AA8 DD 6E FA      [19] 2031 	ld	l,-6 (ix)
   0AAB DD 66 FB      [19] 2032 	ld	h,-5 (ix)
   0AAE 7E            [ 7] 2033 	ld	a,(hl)
   0AAF DD 77 FE      [19] 2034 	ld	-2 (ix),a
   0AB2 21r12r05      [10] 2035 	ld	hl, #_prota + 0
   0AB5 46            [ 7] 2036 	ld	b,(hl)
   0AB6 58            [ 4] 2037 	ld	e,b
   0AB7 16 00         [ 7] 2038 	ld	d,#0x00
   0AB9 7B            [ 4] 2039 	ld	a,e
   0ABA C6 CE         [ 7] 2040 	add	a,#0xCE
   0ABC DD 77 FC      [19] 2041 	ld	-4 (ix),a
   0ABF 7A            [ 4] 2042 	ld	a,d
   0AC0 CE FF         [ 7] 2043 	adc	a,#0xFF
   0AC2 DD 77 FD      [19] 2044 	ld	-3 (ix),a
   0AC5 DD 6E FE      [19] 2045 	ld	l,-2 (ix)
   0AC8 26 00         [ 7] 2046 	ld	h,#0x00
   0ACA DD 7E FC      [19] 2047 	ld	a,-4 (ix)
   0ACD 95            [ 4] 2048 	sub	a, l
   0ACE DD 7E FD      [19] 2049 	ld	a,-3 (ix)
   0AD1 9C            [ 4] 2050 	sbc	a, h
   0AD2 E2rD7r0A      [10] 2051 	jp	PO, 00205$
   0AD5 EE 80         [ 7] 2052 	xor	a, #0x80
   0AD7                    2053 00205$:
   0AD7 F2r9Fr0B      [10] 2054 	jp	P,00133$
   0ADA 7B            [ 4] 2055 	ld	a,e
   0ADB C6 32         [ 7] 2056 	add	a, #0x32
   0ADD 5F            [ 4] 2057 	ld	e,a
   0ADE 7A            [ 4] 2058 	ld	a,d
   0ADF CE 00         [ 7] 2059 	adc	a, #0x00
   0AE1 57            [ 4] 2060 	ld	d,a
   0AE2 7D            [ 4] 2061 	ld	a,l
   0AE3 93            [ 4] 2062 	sub	a, e
   0AE4 7C            [ 4] 2063 	ld	a,h
   0AE5 9A            [ 4] 2064 	sbc	a, d
   0AE6 E2rEBr0A      [10] 2065 	jp	PO, 00206$
   0AE9 EE 80         [ 7] 2066 	xor	a, #0x80
   0AEB                    2067 00206$:
   0AEB F2r9Fr0B      [10] 2068 	jp	P,00133$
                           2069 ;src/main.c:436: if(enemy->y > prota.y - 4 && enemy->y < prota.y + 4){
   0AEE DD 6E F8      [19] 2070 	ld	l,-8 (ix)
   0AF1 DD 66 F9      [19] 2071 	ld	h,-7 (ix)
   0AF4 5E            [ 7] 2072 	ld	e,(hl)
   0AF5 21r13r05      [10] 2073 	ld	hl, #(_prota + 0x0001) + 0
   0AF8 6E            [ 7] 2074 	ld	l,(hl)
   0AF9 26 00         [ 7] 2075 	ld	h,#0x00
   0AFB 7D            [ 4] 2076 	ld	a,l
   0AFC C6 FC         [ 7] 2077 	add	a,#0xFC
   0AFE DD 77 FC      [19] 2078 	ld	-4 (ix),a
   0B01 7C            [ 4] 2079 	ld	a,h
   0B02 CE FF         [ 7] 2080 	adc	a,#0xFF
   0B04 DD 77 FD      [19] 2081 	ld	-3 (ix),a
   0B07 16 00         [ 7] 2082 	ld	d,#0x00
   0B09 DD 7E FC      [19] 2083 	ld	a,-4 (ix)
   0B0C 93            [ 4] 2084 	sub	a, e
   0B0D DD 7E FD      [19] 2085 	ld	a,-3 (ix)
   0B10 9A            [ 4] 2086 	sbc	a, d
   0B11 E2r16r0B      [10] 2087 	jp	PO, 00207$
   0B14 EE 80         [ 7] 2088 	xor	a, #0x80
   0B16                    2089 00207$:
   0B16 F2r9Fr0B      [10] 2090 	jp	P,00133$
   0B19 23            [ 6] 2091 	inc	hl
   0B1A 23            [ 6] 2092 	inc	hl
   0B1B 23            [ 6] 2093 	inc	hl
   0B1C 23            [ 6] 2094 	inc	hl
   0B1D 7B            [ 4] 2095 	ld	a,e
   0B1E 95            [ 4] 2096 	sub	a, l
   0B1F 7A            [ 4] 2097 	ld	a,d
   0B20 9C            [ 4] 2098 	sbc	a, h
   0B21 E2r26r0B      [10] 2099 	jp	PO, 00208$
   0B24 EE 80         [ 7] 2100 	xor	a, #0x80
   0B26                    2101 00208$:
   0B26 F2r9Fr0B      [10] 2102 	jp	P,00133$
                           2103 ;src/main.c:437: if(enemy->x > prota.x){
   0B29 78            [ 4] 2104 	ld	a,b
   0B2A DD 96 FE      [19] 2105 	sub	a, -2 (ix)
   0B2D 3E 00         [ 7] 2106 	ld	a,#0x00
   0B2F 17            [ 4] 2107 	rla
   0B30 B7            [ 4] 2108 	or	a, a
   0B31 28 36         [12] 2109 	jr	Z,00114$
                           2110 ;src/main.c:438: i = prota.x;
   0B33 58            [ 4] 2111 	ld	e,b
                           2112 ;src/main.c:439: for (i; i<enemy->x && !interpone; i++){
   0B34                    2113 00127$:
   0B34 DD 6E FA      [19] 2114 	ld	l,-6 (ix)
   0B37 DD 66 FB      [19] 2115 	ld	h,-5 (ix)
   0B3A 46            [ 7] 2116 	ld	b,(hl)
   0B3B 7B            [ 4] 2117 	ld	a,e
   0B3C 90            [ 4] 2118 	sub	a, b
   0B3D 30 20         [12] 2119 	jr	NC,00103$
   0B3F 79            [ 4] 2120 	ld	a,c
   0B40 B7            [ 4] 2121 	or	a, a
   0B41 20 1C         [12] 2122 	jr	NZ,00103$
                           2123 ;src/main.c:440: if(*getTilePtr(i , prota.y) > 2){
   0B43 21r13r05      [10] 2124 	ld	hl, #(_prota + 0x0001) + 0
   0B46 46            [ 7] 2125 	ld	b,(hl)
   0B47 C5            [11] 2126 	push	bc
   0B48 D5            [11] 2127 	push	de
   0B49 C5            [11] 2128 	push	bc
   0B4A 33            [ 6] 2129 	inc	sp
   0B4B 7B            [ 4] 2130 	ld	a,e
   0B4C F5            [11] 2131 	push	af
   0B4D 33            [ 6] 2132 	inc	sp
   0B4E CDr0Br01      [17] 2133 	call	_getTilePtr
   0B51 F1            [10] 2134 	pop	af
   0B52 D1            [10] 2135 	pop	de
   0B53 C1            [10] 2136 	pop	bc
   0B54 46            [ 7] 2137 	ld	b,(hl)
   0B55 3E 02         [ 7] 2138 	ld	a,#0x02
   0B57 90            [ 4] 2139 	sub	a, b
   0B58 30 02         [12] 2140 	jr	NC,00128$
                           2141 ;src/main.c:441: interpone = SI;
   0B5A 0E 01         [ 7] 2142 	ld	c,#0x01
   0B5C                    2143 00128$:
                           2144 ;src/main.c:439: for (i; i<enemy->x && !interpone; i++){
   0B5C 1C            [ 4] 2145 	inc	e
   0B5D 18 D5         [12] 2146 	jr	00127$
   0B5F                    2147 00103$:
                           2148 ;src/main.c:444: if(!interpone){
   0B5F 79            [ 4] 2149 	ld	a,c
   0B60 B7            [ 4] 2150 	or	a, a
   0B61 20 3C         [12] 2151 	jr	NZ,00133$
                           2152 ;src/main.c:445: enemy->seen = SI;
   0B63 E1            [10] 2153 	pop	hl
   0B64 E5            [11] 2154 	push	hl
   0B65 36 01         [10] 2155 	ld	(hl),#0x01
   0B67 18 36         [12] 2156 	jr	00133$
   0B69                    2157 00114$:
                           2158 ;src/main.c:447: }else if(enemy->x > prota.x){
   0B69 B7            [ 4] 2159 	or	a, a
   0B6A 28 33         [12] 2160 	jr	Z,00133$
                           2161 ;src/main.c:448: i = enemy->x;
   0B6C DD 46 FE      [19] 2162 	ld	b,-2 (ix)
                           2163 ;src/main.c:449: for (i; i<prota.x && !interpone; i++){
   0B6F                    2164 00131$:
   0B6F 21r12r05      [10] 2165 	ld	hl, #_prota + 0
   0B72 5E            [ 7] 2166 	ld	e,(hl)
   0B73 78            [ 4] 2167 	ld	a,b
   0B74 93            [ 4] 2168 	sub	a, e
   0B75 30 20         [12] 2169 	jr	NC,00108$
   0B77 79            [ 4] 2170 	ld	a,c
   0B78 B7            [ 4] 2171 	or	a, a
   0B79 20 1C         [12] 2172 	jr	NZ,00108$
                           2173 ;src/main.c:450: if(*getTilePtr(i, enemy->y) > 2){
   0B7B DD 6E F8      [19] 2174 	ld	l,-8 (ix)
   0B7E DD 66 F9      [19] 2175 	ld	h,-7 (ix)
   0B81 56            [ 7] 2176 	ld	d,(hl)
   0B82 C5            [11] 2177 	push	bc
   0B83 D5            [11] 2178 	push	de
   0B84 33            [ 6] 2179 	inc	sp
   0B85 C5            [11] 2180 	push	bc
   0B86 33            [ 6] 2181 	inc	sp
   0B87 CDr0Br01      [17] 2182 	call	_getTilePtr
   0B8A F1            [10] 2183 	pop	af
   0B8B C1            [10] 2184 	pop	bc
   0B8C 5E            [ 7] 2185 	ld	e,(hl)
   0B8D 3E 02         [ 7] 2186 	ld	a,#0x02
   0B8F 93            [ 4] 2187 	sub	a, e
   0B90 30 02         [12] 2188 	jr	NC,00132$
                           2189 ;src/main.c:451: interpone = SI;
   0B92 0E 01         [ 7] 2190 	ld	c,#0x01
   0B94                    2191 00132$:
                           2192 ;src/main.c:449: for (i; i<prota.x && !interpone; i++){
   0B94 04            [ 4] 2193 	inc	b
   0B95 18 D8         [12] 2194 	jr	00131$
   0B97                    2195 00108$:
                           2196 ;src/main.c:454: if(!interpone){
   0B97 79            [ 4] 2197 	ld	a,c
   0B98 B7            [ 4] 2198 	or	a, a
   0B99 20 04         [12] 2199 	jr	NZ,00133$
                           2200 ;src/main.c:455: enemy->seen = SI;
   0B9B E1            [10] 2201 	pop	hl
   0B9C E5            [11] 2202 	push	hl
   0B9D 36 01         [10] 2203 	ld	(hl),#0x01
   0B9F                    2204 00133$:
   0B9F DD F9         [10] 2205 	ld	sp, ix
   0BA1 DD E1         [14] 2206 	pop	ix
   0BA3 C9            [10] 2207 	ret
                           2208 ;src/main.c:462: void patrol(TEnemy *enemy) {
                           2209 ;	---------------------------------
                           2210 ; Function patrol
                           2211 ; ---------------------------------
   0BA4                    2212 _patrol::
                           2213 ;src/main.c:463: if (enemy->onPathPatrol) {
   0BA4 D1            [10] 2214 	pop	de
   0BA5 C1            [10] 2215 	pop	bc
   0BA6 C5            [11] 2216 	push	bc
   0BA7 D5            [11] 2217 	push	de
   0BA8 C5            [11] 2218 	push	bc
   0BA9 FD E1         [14] 2219 	pop	iy
   0BAB FD 7E 0C      [19] 2220 	ld	a,12 (iy)
   0BAE B7            [ 4] 2221 	or	a, a
   0BAF C8            [11] 2222 	ret	Z
                           2223 ;src/main.c:464: moverEnemigoPathfinding(enemy);
   0BB0 C5            [11] 2224 	push	bc
   0BB1 CDr76r08      [17] 2225 	call	_moverEnemigoPathfinding
   0BB4 F1            [10] 2226 	pop	af
   0BB5 C9            [10] 2227 	ret
                           2228 ;src/main.c:468: void seek(TEnemy* actual){
                           2229 ;	---------------------------------
                           2230 ; Function seek
                           2231 ; ---------------------------------
   0BB6                    2232 _seek::
                           2233 ;src/main.c:469: moverEnemigoPathfinding(actual);
   0BB6 C1            [10] 2234 	pop	bc
   0BB7 E1            [10] 2235 	pop	hl
   0BB8 E5            [11] 2236 	push	hl
   0BB9 C5            [11] 2237 	push	bc
   0BBA E5            [11] 2238 	push	hl
   0BBB CDr76r08      [17] 2239 	call	_moverEnemigoPathfinding
   0BBE F1            [10] 2240 	pop	af
   0BBF C9            [10] 2241 	ret
                           2242 ;src/main.c:472: void engage(TEnemy *enemy, u8 dx, u8 dy) {
                           2243 ;	---------------------------------
                           2244 ; Function engage
                           2245 ; ---------------------------------
   0BC0                    2246 _engage::
   0BC0 DD E5         [15] 2247 	push	ix
   0BC2 DD 21 00 00   [14] 2248 	ld	ix,#0
   0BC6 DD 39         [15] 2249 	add	ix,sp
   0BC8 F5            [11] 2250 	push	af
   0BC9 F5            [11] 2251 	push	af
                           2252 ;src/main.c:473: u8 difx = abs(enemy->x - prota.x); // calculo distancia para mantener una dist
   0BCA DD 4E 04      [19] 2253 	ld	c,4 (ix)
   0BCD DD 46 05      [19] 2254 	ld	b,5 (ix)
   0BD0 0A            [ 7] 2255 	ld	a,(bc)
   0BD1 5F            [ 4] 2256 	ld	e,a
   0BD2 16 00         [ 7] 2257 	ld	d,#0x00
   0BD4 21r12r05      [10] 2258 	ld	hl,#_prota+0
   0BD7 6E            [ 7] 2259 	ld	l,(hl)
   0BD8 26 00         [ 7] 2260 	ld	h,#0x00
   0BDA 7B            [ 4] 2261 	ld	a,e
   0BDB 95            [ 4] 2262 	sub	a, l
   0BDC 5F            [ 4] 2263 	ld	e,a
   0BDD 7A            [ 4] 2264 	ld	a,d
   0BDE 9C            [ 4] 2265 	sbc	a, h
   0BDF 57            [ 4] 2266 	ld	d,a
   0BE0 C5            [11] 2267 	push	bc
   0BE1 D5            [11] 2268 	push	de
   0BE2 CDr00r00      [17] 2269 	call	_abs
   0BE5 F1            [10] 2270 	pop	af
   0BE6 C1            [10] 2271 	pop	bc
   0BE7 DD 75 FC      [19] 2272 	ld	-4 (ix),l
                           2273 ;src/main.c:474: u8 dify = abs(enemy->y - prota.y);
   0BEA 21 01 00      [10] 2274 	ld	hl,#0x0001
   0BED 09            [11] 2275 	add	hl,bc
   0BEE DD 75 FD      [19] 2276 	ld	-3 (ix),l
   0BF1 DD 74 FE      [19] 2277 	ld	-2 (ix),h
   0BF4 DD 6E FD      [19] 2278 	ld	l,-3 (ix)
   0BF7 DD 66 FE      [19] 2279 	ld	h,-2 (ix)
   0BFA 5E            [ 7] 2280 	ld	e,(hl)
   0BFB 16 00         [ 7] 2281 	ld	d,#0x00
   0BFD 21r13r05      [10] 2282 	ld	hl,#_prota+1
   0C00 6E            [ 7] 2283 	ld	l,(hl)
   0C01 26 00         [ 7] 2284 	ld	h,#0x00
   0C03 7B            [ 4] 2285 	ld	a,e
   0C04 95            [ 4] 2286 	sub	a, l
   0C05 5F            [ 4] 2287 	ld	e,a
   0C06 7A            [ 4] 2288 	ld	a,d
   0C07 9C            [ 4] 2289 	sbc	a, h
   0C08 57            [ 4] 2290 	ld	d,a
   0C09 C5            [11] 2291 	push	bc
   0C0A D5            [11] 2292 	push	de
   0C0B CDr00r00      [17] 2293 	call	_abs
   0C0E F1            [10] 2294 	pop	af
   0C0F C1            [10] 2295 	pop	bc
                           2296 ;src/main.c:475: u8 dist = difx + dify; // manhattan
   0C10 DD 7E FC      [19] 2297 	ld	a,-4 (ix)
   0C13 85            [ 4] 2298 	add	a, l
   0C14 57            [ 4] 2299 	ld	d,a
                           2300 ;src/main.c:477: if (enemy->y == dy) { // alineado en el eje y
   0C15 DD 6E FD      [19] 2301 	ld	l,-3 (ix)
   0C18 DD 66 FE      [19] 2302 	ld	h,-2 (ix)
   0C1B 5E            [ 7] 2303 	ld	e,(hl)
                           2304 ;src/main.c:479: if (dist > 20) {
   0C1C 3E 14         [ 7] 2305 	ld	a,#0x14
   0C1E 92            [ 4] 2306 	sub	a, d
   0C1F 3E 00         [ 7] 2307 	ld	a,#0x00
   0C21 17            [ 4] 2308 	rla
   0C22 DD 77 FF      [19] 2309 	ld	-1 (ix),a
                           2310 ;src/main.c:477: if (enemy->y == dy) { // alineado en el eje y
   0C25 DD 7E 07      [19] 2311 	ld	a,7 (ix)
   0C28 93            [ 4] 2312 	sub	a, e
   0C29 C2r57r0D      [10] 2313 	jp	NZ,00173$
                           2314 ;src/main.c:479: if (dist > 20) {
   0C2C DD 7E FF      [19] 2315 	ld	a,-1 (ix)
   0C2F B7            [ 4] 2316 	or	a, a
   0C30 CArF8r0F      [10] 2317 	jp	Z,00175$
                           2318 ;src/main.c:480: if (dx < enemy->x) {
   0C33 0A            [ 7] 2319 	ld	a,(bc)
   0C34 57            [ 4] 2320 	ld	d,a
   0C35 DD 7E 06      [19] 2321 	ld	a,6 (ix)
   0C38 92            [ 4] 2322 	sub	a, d
   0C39 D2rF8r0F      [10] 2323 	jp	NC,00175$
                           2324 ;src/main.c:481: if(*getTilePtr(enemy->x - 1, enemy->y) <= 2
   0C3C 15            [ 4] 2325 	dec	d
   0C3D C5            [11] 2326 	push	bc
   0C3E 7B            [ 4] 2327 	ld	a,e
   0C3F F5            [11] 2328 	push	af
   0C40 33            [ 6] 2329 	inc	sp
   0C41 D5            [11] 2330 	push	de
   0C42 33            [ 6] 2331 	inc	sp
   0C43 CDr0Br01      [17] 2332 	call	_getTilePtr
   0C46 F1            [10] 2333 	pop	af
   0C47 C1            [10] 2334 	pop	bc
   0C48 5E            [ 7] 2335 	ld	e,(hl)
   0C49 3E 02         [ 7] 2336 	ld	a,#0x02
   0C4B 93            [ 4] 2337 	sub	a, e
   0C4C 38 42         [12] 2338 	jr	C,00115$
                           2339 ;src/main.c:482: && *getTilePtr(enemy->x - 1, enemy->y + G_ENEMY_H/2) <= 2
   0C4E DD 6E FD      [19] 2340 	ld	l,-3 (ix)
   0C51 DD 66 FE      [19] 2341 	ld	h,-2 (ix)
   0C54 7E            [ 7] 2342 	ld	a,(hl)
   0C55 C6 0B         [ 7] 2343 	add	a, #0x0B
   0C57 57            [ 4] 2344 	ld	d,a
   0C58 0A            [ 7] 2345 	ld	a,(bc)
   0C59 C6 FF         [ 7] 2346 	add	a,#0xFF
   0C5B C5            [11] 2347 	push	bc
   0C5C D5            [11] 2348 	push	de
   0C5D 33            [ 6] 2349 	inc	sp
   0C5E F5            [11] 2350 	push	af
   0C5F 33            [ 6] 2351 	inc	sp
   0C60 CDr0Br01      [17] 2352 	call	_getTilePtr
   0C63 F1            [10] 2353 	pop	af
   0C64 C1            [10] 2354 	pop	bc
   0C65 5E            [ 7] 2355 	ld	e,(hl)
   0C66 3E 02         [ 7] 2356 	ld	a,#0x02
   0C68 93            [ 4] 2357 	sub	a, e
   0C69 38 25         [12] 2358 	jr	C,00115$
                           2359 ;src/main.c:483: && *getTilePtr(enemy->x - 1, enemy->y + G_ENEMY_H) <= 2) {
   0C6B DD 6E FD      [19] 2360 	ld	l,-3 (ix)
   0C6E DD 66 FE      [19] 2361 	ld	h,-2 (ix)
   0C71 7E            [ 7] 2362 	ld	a,(hl)
   0C72 C6 16         [ 7] 2363 	add	a, #0x16
   0C74 57            [ 4] 2364 	ld	d,a
   0C75 0A            [ 7] 2365 	ld	a,(bc)
   0C76 C6 FF         [ 7] 2366 	add	a,#0xFF
   0C78 C5            [11] 2367 	push	bc
   0C79 D5            [11] 2368 	push	de
   0C7A 33            [ 6] 2369 	inc	sp
   0C7B F5            [11] 2370 	push	af
   0C7C 33            [ 6] 2371 	inc	sp
   0C7D CDr0Br01      [17] 2372 	call	_getTilePtr
   0C80 F1            [10] 2373 	pop	af
   0C81 C1            [10] 2374 	pop	bc
   0C82 5E            [ 7] 2375 	ld	e,(hl)
   0C83 3E 02         [ 7] 2376 	ld	a,#0x02
   0C85 93            [ 4] 2377 	sub	a, e
   0C86 38 08         [12] 2378 	jr	C,00115$
                           2379 ;src/main.c:484: moverEnemigoIzquierda(enemy);
   0C88 C5            [11] 2380 	push	bc
   0C89 CDr64r08      [17] 2381 	call	_moverEnemigoIzquierda
   0C8C F1            [10] 2382 	pop	af
   0C8D C3rF8r0F      [10] 2383 	jp	00175$
   0C90                    2384 00115$:
                           2385 ;src/main.c:486: if (enemy->y > (ORIGEN_MAPA_Y + ALTO_MAPA/2)) {
   0C90 DD 6E FD      [19] 2386 	ld	l,-3 (ix)
   0C93 DD 66 FE      [19] 2387 	ld	h,-2 (ix)
   0C96 5E            [ 7] 2388 	ld	e,(hl)
                           2389 ;src/main.c:473: u8 difx = abs(enemy->x - prota.x); // calculo distancia para mantener una dist
   0C97 0A            [ 7] 2390 	ld	a,(bc)
   0C98 57            [ 4] 2391 	ld	d,a
                           2392 ;src/main.c:486: if (enemy->y > (ORIGEN_MAPA_Y + ALTO_MAPA/2)) {
   0C99 3E 70         [ 7] 2393 	ld	a,#0x70
   0C9B 93            [ 4] 2394 	sub	a, e
   0C9C 30 5E         [12] 2395 	jr	NC,00112$
                           2396 ;src/main.c:487: if(*getTilePtr(enemy->x, enemy->y + G_ENEMY_H + 2) <= 2
   0C9E 7B            [ 4] 2397 	ld	a,e
   0C9F C6 18         [ 7] 2398 	add	a, #0x18
   0CA1 67            [ 4] 2399 	ld	h,a
   0CA2 C5            [11] 2400 	push	bc
   0CA3 E5            [11] 2401 	push	hl
   0CA4 33            [ 6] 2402 	inc	sp
   0CA5 D5            [11] 2403 	push	de
   0CA6 33            [ 6] 2404 	inc	sp
   0CA7 CDr0Br01      [17] 2405 	call	_getTilePtr
   0CAA F1            [10] 2406 	pop	af
   0CAB C1            [10] 2407 	pop	bc
   0CAC 5E            [ 7] 2408 	ld	e,(hl)
   0CAD 3E 02         [ 7] 2409 	ld	a,#0x02
   0CAF 93            [ 4] 2410 	sub	a, e
   0CB0 38 42         [12] 2411 	jr	C,00102$
                           2412 ;src/main.c:488: && *getTilePtr(enemy->x + G_ENEMY_W / 2, enemy->y + G_ENEMY_H + 2) <= 2
   0CB2 DD 6E FD      [19] 2413 	ld	l,-3 (ix)
   0CB5 DD 66 FE      [19] 2414 	ld	h,-2 (ix)
   0CB8 7E            [ 7] 2415 	ld	a,(hl)
   0CB9 C6 18         [ 7] 2416 	add	a, #0x18
   0CBB 57            [ 4] 2417 	ld	d,a
   0CBC 0A            [ 7] 2418 	ld	a,(bc)
   0CBD C6 02         [ 7] 2419 	add	a, #0x02
   0CBF C5            [11] 2420 	push	bc
   0CC0 D5            [11] 2421 	push	de
   0CC1 33            [ 6] 2422 	inc	sp
   0CC2 F5            [11] 2423 	push	af
   0CC3 33            [ 6] 2424 	inc	sp
   0CC4 CDr0Br01      [17] 2425 	call	_getTilePtr
   0CC7 F1            [10] 2426 	pop	af
   0CC8 C1            [10] 2427 	pop	bc
   0CC9 5E            [ 7] 2428 	ld	e,(hl)
   0CCA 3E 02         [ 7] 2429 	ld	a,#0x02
   0CCC 93            [ 4] 2430 	sub	a, e
   0CCD 38 25         [12] 2431 	jr	C,00102$
                           2432 ;src/main.c:489: && *getTilePtr(enemy->x + G_ENEMY_W, enemy->y + G_ENEMY_H + 2) <= 2)
   0CCF DD 6E FD      [19] 2433 	ld	l,-3 (ix)
   0CD2 DD 66 FE      [19] 2434 	ld	h,-2 (ix)
   0CD5 7E            [ 7] 2435 	ld	a,(hl)
   0CD6 C6 18         [ 7] 2436 	add	a, #0x18
   0CD8 57            [ 4] 2437 	ld	d,a
   0CD9 0A            [ 7] 2438 	ld	a,(bc)
   0CDA C6 04         [ 7] 2439 	add	a, #0x04
   0CDC C5            [11] 2440 	push	bc
   0CDD D5            [11] 2441 	push	de
   0CDE 33            [ 6] 2442 	inc	sp
   0CDF F5            [11] 2443 	push	af
   0CE0 33            [ 6] 2444 	inc	sp
   0CE1 CDr0Br01      [17] 2445 	call	_getTilePtr
   0CE4 F1            [10] 2446 	pop	af
   0CE5 C1            [10] 2447 	pop	bc
   0CE6 5E            [ 7] 2448 	ld	e,(hl)
   0CE7 3E 02         [ 7] 2449 	ld	a,#0x02
   0CE9 93            [ 4] 2450 	sub	a, e
   0CEA 38 08         [12] 2451 	jr	C,00102$
                           2452 ;src/main.c:490: moverEnemigoAbajo(enemy);
   0CEC C5            [11] 2453 	push	bc
   0CED CDr35r08      [17] 2454 	call	_moverEnemigoAbajo
   0CF0 F1            [10] 2455 	pop	af
   0CF1 C3rF8r0F      [10] 2456 	jp	00175$
   0CF4                    2457 00102$:
                           2458 ;src/main.c:492: moverEnemigoArriba(enemy);
   0CF4 C5            [11] 2459 	push	bc
   0CF5 CDr16r08      [17] 2460 	call	_moverEnemigoArriba
   0CF8 F1            [10] 2461 	pop	af
   0CF9 C3rF8r0F      [10] 2462 	jp	00175$
   0CFC                    2463 00112$:
                           2464 ;src/main.c:494: if(*getTilePtr(enemy->x, enemy->y - 2) <= 2
   0CFC 63            [ 4] 2465 	ld	h,e
   0CFD 25            [ 4] 2466 	dec	h
   0CFE 25            [ 4] 2467 	dec	h
   0CFF C5            [11] 2468 	push	bc
   0D00 E5            [11] 2469 	push	hl
   0D01 33            [ 6] 2470 	inc	sp
   0D02 D5            [11] 2471 	push	de
   0D03 33            [ 6] 2472 	inc	sp
   0D04 CDr0Br01      [17] 2473 	call	_getTilePtr
   0D07 F1            [10] 2474 	pop	af
   0D08 C1            [10] 2475 	pop	bc
   0D09 5E            [ 7] 2476 	ld	e,(hl)
   0D0A 3E 02         [ 7] 2477 	ld	a,#0x02
   0D0C 93            [ 4] 2478 	sub	a, e
   0D0D 38 40         [12] 2479 	jr	C,00107$
                           2480 ;src/main.c:495: && *getTilePtr(enemy->x + G_ENEMY_W / 2, enemy->y - 2) <= 2
   0D0F DD 6E FD      [19] 2481 	ld	l,-3 (ix)
   0D12 DD 66 FE      [19] 2482 	ld	h,-2 (ix)
   0D15 56            [ 7] 2483 	ld	d,(hl)
   0D16 15            [ 4] 2484 	dec	d
   0D17 15            [ 4] 2485 	dec	d
   0D18 0A            [ 7] 2486 	ld	a,(bc)
   0D19 C6 02         [ 7] 2487 	add	a, #0x02
   0D1B C5            [11] 2488 	push	bc
   0D1C D5            [11] 2489 	push	de
   0D1D 33            [ 6] 2490 	inc	sp
   0D1E F5            [11] 2491 	push	af
   0D1F 33            [ 6] 2492 	inc	sp
   0D20 CDr0Br01      [17] 2493 	call	_getTilePtr
   0D23 F1            [10] 2494 	pop	af
   0D24 C1            [10] 2495 	pop	bc
   0D25 5E            [ 7] 2496 	ld	e,(hl)
   0D26 3E 02         [ 7] 2497 	ld	a,#0x02
   0D28 93            [ 4] 2498 	sub	a, e
   0D29 38 24         [12] 2499 	jr	C,00107$
                           2500 ;src/main.c:496: && *getTilePtr(enemy->x + G_ENEMY_W, enemy->y - 2) <= 2)
   0D2B DD 6E FD      [19] 2501 	ld	l,-3 (ix)
   0D2E DD 66 FE      [19] 2502 	ld	h,-2 (ix)
   0D31 56            [ 7] 2503 	ld	d,(hl)
   0D32 15            [ 4] 2504 	dec	d
   0D33 15            [ 4] 2505 	dec	d
   0D34 0A            [ 7] 2506 	ld	a,(bc)
   0D35 C6 04         [ 7] 2507 	add	a, #0x04
   0D37 C5            [11] 2508 	push	bc
   0D38 D5            [11] 2509 	push	de
   0D39 33            [ 6] 2510 	inc	sp
   0D3A F5            [11] 2511 	push	af
   0D3B 33            [ 6] 2512 	inc	sp
   0D3C CDr0Br01      [17] 2513 	call	_getTilePtr
   0D3F F1            [10] 2514 	pop	af
   0D40 C1            [10] 2515 	pop	bc
   0D41 5E            [ 7] 2516 	ld	e,(hl)
   0D42 3E 02         [ 7] 2517 	ld	a,#0x02
   0D44 93            [ 4] 2518 	sub	a, e
   0D45 38 08         [12] 2519 	jr	C,00107$
                           2520 ;src/main.c:497: moverEnemigoArriba(enemy);
   0D47 C5            [11] 2521 	push	bc
   0D48 CDr16r08      [17] 2522 	call	_moverEnemigoArriba
   0D4B F1            [10] 2523 	pop	af
   0D4C C3rF8r0F      [10] 2524 	jp	00175$
   0D4F                    2525 00107$:
                           2526 ;src/main.c:499: moverEnemigoAbajo(enemy);
   0D4F C5            [11] 2527 	push	bc
   0D50 CDr35r08      [17] 2528 	call	_moverEnemigoAbajo
   0D53 F1            [10] 2529 	pop	af
   0D54 C3rF8r0F      [10] 2530 	jp	00175$
   0D57                    2531 00173$:
                           2532 ;src/main.c:505: else if (enemy->x == dx) {
   0D57 0A            [ 7] 2533 	ld	a,(bc)
   0D58 57            [ 4] 2534 	ld	d,a
   0D59 DD 7E 06      [19] 2535 	ld	a,6 (ix)
   0D5C 92            [ 4] 2536 	sub	a, d
   0D5D C2r89r0E      [10] 2537 	jp	NZ,00170$
                           2538 ;src/main.c:507: if (dist > 20) {
   0D60 DD 7E FF      [19] 2539 	ld	a,-1 (ix)
   0D63 B7            [ 4] 2540 	or	a, a
   0D64 CArF8r0F      [10] 2541 	jp	Z,00175$
                           2542 ;src/main.c:508: if (dy < enemy->y) {
   0D67 DD 7E 07      [19] 2543 	ld	a,7 (ix)
   0D6A 93            [ 4] 2544 	sub	a, e
   0D6B D2rF8r0F      [10] 2545 	jp	NC,00175$
                           2546 ;src/main.c:509: if(*getTilePtr(enemy->x, enemy->y - 2) <= 2
   0D6E 63            [ 4] 2547 	ld	h,e
   0D6F 25            [ 4] 2548 	dec	h
   0D70 25            [ 4] 2549 	dec	h
   0D71 C5            [11] 2550 	push	bc
   0D72 E5            [11] 2551 	push	hl
   0D73 33            [ 6] 2552 	inc	sp
   0D74 D5            [11] 2553 	push	de
   0D75 33            [ 6] 2554 	inc	sp
   0D76 CDr0Br01      [17] 2555 	call	_getTilePtr
   0D79 F1            [10] 2556 	pop	af
   0D7A C1            [10] 2557 	pop	bc
   0D7B 5E            [ 7] 2558 	ld	e,(hl)
   0D7C 3E 02         [ 7] 2559 	ld	a,#0x02
   0D7E 93            [ 4] 2560 	sub	a, e
   0D7F 38 40         [12] 2561 	jr	C,00137$
                           2562 ;src/main.c:510: && *getTilePtr(enemy->x + G_ENEMY_W / 2, enemy->y - 2) <= 2
   0D81 DD 6E FD      [19] 2563 	ld	l,-3 (ix)
   0D84 DD 66 FE      [19] 2564 	ld	h,-2 (ix)
   0D87 56            [ 7] 2565 	ld	d,(hl)
   0D88 15            [ 4] 2566 	dec	d
   0D89 15            [ 4] 2567 	dec	d
   0D8A 0A            [ 7] 2568 	ld	a,(bc)
   0D8B C6 02         [ 7] 2569 	add	a, #0x02
   0D8D C5            [11] 2570 	push	bc
   0D8E D5            [11] 2571 	push	de
   0D8F 33            [ 6] 2572 	inc	sp
   0D90 F5            [11] 2573 	push	af
   0D91 33            [ 6] 2574 	inc	sp
   0D92 CDr0Br01      [17] 2575 	call	_getTilePtr
   0D95 F1            [10] 2576 	pop	af
   0D96 C1            [10] 2577 	pop	bc
   0D97 5E            [ 7] 2578 	ld	e,(hl)
   0D98 3E 02         [ 7] 2579 	ld	a,#0x02
   0D9A 93            [ 4] 2580 	sub	a, e
   0D9B 38 24         [12] 2581 	jr	C,00137$
                           2582 ;src/main.c:511: && *getTilePtr(enemy->x + G_ENEMY_W, enemy->y - 2) <= 2) {
   0D9D DD 6E FD      [19] 2583 	ld	l,-3 (ix)
   0DA0 DD 66 FE      [19] 2584 	ld	h,-2 (ix)
   0DA3 56            [ 7] 2585 	ld	d,(hl)
   0DA4 15            [ 4] 2586 	dec	d
   0DA5 15            [ 4] 2587 	dec	d
   0DA6 0A            [ 7] 2588 	ld	a,(bc)
   0DA7 C6 04         [ 7] 2589 	add	a, #0x04
   0DA9 C5            [11] 2590 	push	bc
   0DAA D5            [11] 2591 	push	de
   0DAB 33            [ 6] 2592 	inc	sp
   0DAC F5            [11] 2593 	push	af
   0DAD 33            [ 6] 2594 	inc	sp
   0DAE CDr0Br01      [17] 2595 	call	_getTilePtr
   0DB1 F1            [10] 2596 	pop	af
   0DB2 C1            [10] 2597 	pop	bc
   0DB3 5E            [ 7] 2598 	ld	e,(hl)
   0DB4 3E 02         [ 7] 2599 	ld	a,#0x02
   0DB6 93            [ 4] 2600 	sub	a, e
   0DB7 38 08         [12] 2601 	jr	C,00137$
                           2602 ;src/main.c:512: moverEnemigoArriba(enemy);
   0DB9 C5            [11] 2603 	push	bc
   0DBA CDr16r08      [17] 2604 	call	_moverEnemigoArriba
   0DBD F1            [10] 2605 	pop	af
   0DBE C3rF8r0F      [10] 2606 	jp	00175$
   0DC1                    2607 00137$:
                           2608 ;src/main.c:514: if (enemy->x < ANCHO_PANTALLA/2) {
   0DC1 0A            [ 7] 2609 	ld	a,(bc)
   0DC2 5F            [ 4] 2610 	ld	e,a
                           2611 ;src/main.c:474: u8 dify = abs(enemy->y - prota.y);
   0DC3 DD 6E FD      [19] 2612 	ld	l,-3 (ix)
   0DC6 DD 66 FE      [19] 2613 	ld	h,-2 (ix)
   0DC9 66            [ 7] 2614 	ld	h,(hl)
                           2615 ;src/main.c:514: if (enemy->x < ANCHO_PANTALLA/2) {
   0DCA 7B            [ 4] 2616 	ld	a,e
   0DCB D6 28         [ 7] 2617 	sub	a, #0x28
   0DCD 30 5C         [12] 2618 	jr	NC,00134$
                           2619 ;src/main.c:515: if(*getTilePtr(enemy->x - 1, enemy->y) <= 2
   0DCF 53            [ 4] 2620 	ld	d,e
   0DD0 15            [ 4] 2621 	dec	d
   0DD1 C5            [11] 2622 	push	bc
   0DD2 E5            [11] 2623 	push	hl
   0DD3 33            [ 6] 2624 	inc	sp
   0DD4 D5            [11] 2625 	push	de
   0DD5 33            [ 6] 2626 	inc	sp
   0DD6 CDr0Br01      [17] 2627 	call	_getTilePtr
   0DD9 F1            [10] 2628 	pop	af
   0DDA C1            [10] 2629 	pop	bc
   0DDB 5E            [ 7] 2630 	ld	e,(hl)
   0DDC 3E 02         [ 7] 2631 	ld	a,#0x02
   0DDE 93            [ 4] 2632 	sub	a, e
   0DDF 38 42         [12] 2633 	jr	C,00124$
                           2634 ;src/main.c:516: && *getTilePtr(enemy->x - 1, enemy->y + G_ENEMY_H/2) <= 2
   0DE1 DD 6E FD      [19] 2635 	ld	l,-3 (ix)
   0DE4 DD 66 FE      [19] 2636 	ld	h,-2 (ix)
   0DE7 7E            [ 7] 2637 	ld	a,(hl)
   0DE8 C6 0B         [ 7] 2638 	add	a, #0x0B
   0DEA 57            [ 4] 2639 	ld	d,a
   0DEB 0A            [ 7] 2640 	ld	a,(bc)
   0DEC C6 FF         [ 7] 2641 	add	a,#0xFF
   0DEE C5            [11] 2642 	push	bc
   0DEF D5            [11] 2643 	push	de
   0DF0 33            [ 6] 2644 	inc	sp
   0DF1 F5            [11] 2645 	push	af
   0DF2 33            [ 6] 2646 	inc	sp
   0DF3 CDr0Br01      [17] 2647 	call	_getTilePtr
   0DF6 F1            [10] 2648 	pop	af
   0DF7 C1            [10] 2649 	pop	bc
   0DF8 5E            [ 7] 2650 	ld	e,(hl)
   0DF9 3E 02         [ 7] 2651 	ld	a,#0x02
   0DFB 93            [ 4] 2652 	sub	a, e
   0DFC 38 25         [12] 2653 	jr	C,00124$
                           2654 ;src/main.c:517: && *getTilePtr(enemy->x - 1, enemy->y + G_ENEMY_H) <= 2)
   0DFE DD 6E FD      [19] 2655 	ld	l,-3 (ix)
   0E01 DD 66 FE      [19] 2656 	ld	h,-2 (ix)
   0E04 7E            [ 7] 2657 	ld	a,(hl)
   0E05 C6 16         [ 7] 2658 	add	a, #0x16
   0E07 57            [ 4] 2659 	ld	d,a
   0E08 0A            [ 7] 2660 	ld	a,(bc)
   0E09 C6 FF         [ 7] 2661 	add	a,#0xFF
   0E0B C5            [11] 2662 	push	bc
   0E0C D5            [11] 2663 	push	de
   0E0D 33            [ 6] 2664 	inc	sp
   0E0E F5            [11] 2665 	push	af
   0E0F 33            [ 6] 2666 	inc	sp
   0E10 CDr0Br01      [17] 2667 	call	_getTilePtr
   0E13 F1            [10] 2668 	pop	af
   0E14 C1            [10] 2669 	pop	bc
   0E15 5E            [ 7] 2670 	ld	e,(hl)
   0E16 3E 02         [ 7] 2671 	ld	a,#0x02
   0E18 93            [ 4] 2672 	sub	a, e
   0E19 38 08         [12] 2673 	jr	C,00124$
                           2674 ;src/main.c:518: moverEnemigoIzquierda(enemy);
   0E1B C5            [11] 2675 	push	bc
   0E1C CDr64r08      [17] 2676 	call	_moverEnemigoIzquierda
   0E1F F1            [10] 2677 	pop	af
   0E20 C3rF8r0F      [10] 2678 	jp	00175$
   0E23                    2679 00124$:
                           2680 ;src/main.c:520: moverEnemigoDerecha(enemy);
   0E23 C5            [11] 2681 	push	bc
   0E24 CDr54r08      [17] 2682 	call	_moverEnemigoDerecha
   0E27 F1            [10] 2683 	pop	af
   0E28 C3rF8r0F      [10] 2684 	jp	00175$
   0E2B                    2685 00134$:
                           2686 ;src/main.c:522: if(*getTilePtr(enemy->x + G_ENEMY_W + 1, enemy->y) <= 2
   0E2B 7B            [ 4] 2687 	ld	a,e
   0E2C C6 05         [ 7] 2688 	add	a, #0x05
   0E2E 57            [ 4] 2689 	ld	d,a
   0E2F C5            [11] 2690 	push	bc
   0E30 E5            [11] 2691 	push	hl
   0E31 33            [ 6] 2692 	inc	sp
   0E32 D5            [11] 2693 	push	de
   0E33 33            [ 6] 2694 	inc	sp
   0E34 CDr0Br01      [17] 2695 	call	_getTilePtr
   0E37 F1            [10] 2696 	pop	af
   0E38 C1            [10] 2697 	pop	bc
   0E39 5E            [ 7] 2698 	ld	e,(hl)
   0E3A 3E 02         [ 7] 2699 	ld	a,#0x02
   0E3C 93            [ 4] 2700 	sub	a, e
   0E3D 38 42         [12] 2701 	jr	C,00129$
                           2702 ;src/main.c:523: && *getTilePtr(enemy->x + G_ENEMY_W + 1, enemy->y + G_ENEMY_H/2) <= 2
   0E3F DD 6E FD      [19] 2703 	ld	l,-3 (ix)
   0E42 DD 66 FE      [19] 2704 	ld	h,-2 (ix)
   0E45 7E            [ 7] 2705 	ld	a,(hl)
   0E46 C6 0B         [ 7] 2706 	add	a, #0x0B
   0E48 57            [ 4] 2707 	ld	d,a
   0E49 0A            [ 7] 2708 	ld	a,(bc)
   0E4A C6 05         [ 7] 2709 	add	a, #0x05
   0E4C C5            [11] 2710 	push	bc
   0E4D D5            [11] 2711 	push	de
   0E4E 33            [ 6] 2712 	inc	sp
   0E4F F5            [11] 2713 	push	af
   0E50 33            [ 6] 2714 	inc	sp
   0E51 CDr0Br01      [17] 2715 	call	_getTilePtr
   0E54 F1            [10] 2716 	pop	af
   0E55 C1            [10] 2717 	pop	bc
   0E56 5E            [ 7] 2718 	ld	e,(hl)
   0E57 3E 02         [ 7] 2719 	ld	a,#0x02
   0E59 93            [ 4] 2720 	sub	a, e
   0E5A 38 25         [12] 2721 	jr	C,00129$
                           2722 ;src/main.c:524: && *getTilePtr(enemy->x + G_ENEMY_W + 1, enemy->y + G_ENEMY_H) <= 2)
   0E5C DD 6E FD      [19] 2723 	ld	l,-3 (ix)
   0E5F DD 66 FE      [19] 2724 	ld	h,-2 (ix)
   0E62 7E            [ 7] 2725 	ld	a,(hl)
   0E63 C6 16         [ 7] 2726 	add	a, #0x16
   0E65 57            [ 4] 2727 	ld	d,a
   0E66 0A            [ 7] 2728 	ld	a,(bc)
   0E67 C6 05         [ 7] 2729 	add	a, #0x05
   0E69 C5            [11] 2730 	push	bc
   0E6A D5            [11] 2731 	push	de
   0E6B 33            [ 6] 2732 	inc	sp
   0E6C F5            [11] 2733 	push	af
   0E6D 33            [ 6] 2734 	inc	sp
   0E6E CDr0Br01      [17] 2735 	call	_getTilePtr
   0E71 F1            [10] 2736 	pop	af
   0E72 C1            [10] 2737 	pop	bc
   0E73 5E            [ 7] 2738 	ld	e,(hl)
   0E74 3E 02         [ 7] 2739 	ld	a,#0x02
   0E76 93            [ 4] 2740 	sub	a, e
   0E77 38 08         [12] 2741 	jr	C,00129$
                           2742 ;src/main.c:525: moverEnemigoDerecha(enemy);
   0E79 C5            [11] 2743 	push	bc
   0E7A CDr54r08      [17] 2744 	call	_moverEnemigoDerecha
   0E7D F1            [10] 2745 	pop	af
   0E7E C3rF8r0F      [10] 2746 	jp	00175$
   0E81                    2747 00129$:
                           2748 ;src/main.c:527: moverEnemigoIzquierda(enemy);
   0E81 C5            [11] 2749 	push	bc
   0E82 CDr64r08      [17] 2750 	call	_moverEnemigoIzquierda
   0E85 F1            [10] 2751 	pop	af
   0E86 C3rF8r0F      [10] 2752 	jp	00175$
   0E89                    2753 00170$:
                           2754 ;src/main.c:534: if (dist > 20) {
   0E89 DD 7E FF      [19] 2755 	ld	a,-1 (ix)
   0E8C B7            [ 4] 2756 	or	a, a
   0E8D CArF8r0F      [10] 2757 	jp	Z,00175$
                           2758 ;src/main.c:535: if (dx < enemy->x) {
   0E90 DD 7E 06      [19] 2759 	ld	a,6 (ix)
   0E93 92            [ 4] 2760 	sub	a, d
   0E94 30 57         [12] 2761 	jr	NC,00154$
                           2762 ;src/main.c:536: if(*getTilePtr(enemy->x - 1, enemy->y) <= 2
   0E96 15            [ 4] 2763 	dec	d
   0E97 C5            [11] 2764 	push	bc
   0E98 7B            [ 4] 2765 	ld	a,e
   0E99 F5            [11] 2766 	push	af
   0E9A 33            [ 6] 2767 	inc	sp
   0E9B D5            [11] 2768 	push	de
   0E9C 33            [ 6] 2769 	inc	sp
   0E9D CDr0Br01      [17] 2770 	call	_getTilePtr
   0EA0 F1            [10] 2771 	pop	af
   0EA1 C1            [10] 2772 	pop	bc
   0EA2 5E            [ 7] 2773 	ld	e,(hl)
   0EA3 3E 02         [ 7] 2774 	ld	a,#0x02
   0EA5 93            [ 4] 2775 	sub	a, e
   0EA6 DAr43r0F      [10] 2776 	jp	C,00155$
                           2777 ;src/main.c:537: && *getTilePtr(enemy->x - 1, enemy->y + G_ENEMY_H/2) <= 2
   0EA9 DD 6E FD      [19] 2778 	ld	l,-3 (ix)
   0EAC DD 66 FE      [19] 2779 	ld	h,-2 (ix)
   0EAF 7E            [ 7] 2780 	ld	a,(hl)
   0EB0 C6 0B         [ 7] 2781 	add	a, #0x0B
   0EB2 57            [ 4] 2782 	ld	d,a
   0EB3 0A            [ 7] 2783 	ld	a,(bc)
   0EB4 C6 FF         [ 7] 2784 	add	a,#0xFF
   0EB6 C5            [11] 2785 	push	bc
   0EB7 D5            [11] 2786 	push	de
   0EB8 33            [ 6] 2787 	inc	sp
   0EB9 F5            [11] 2788 	push	af
   0EBA 33            [ 6] 2789 	inc	sp
   0EBB CDr0Br01      [17] 2790 	call	_getTilePtr
   0EBE F1            [10] 2791 	pop	af
   0EBF C1            [10] 2792 	pop	bc
   0EC0 5E            [ 7] 2793 	ld	e,(hl)
   0EC1 3E 02         [ 7] 2794 	ld	a,#0x02
   0EC3 93            [ 4] 2795 	sub	a, e
   0EC4 DAr43r0F      [10] 2796 	jp	C,00155$
                           2797 ;src/main.c:538: && *getTilePtr(enemy->x - 1, enemy->y + G_ENEMY_H) <= 2) {
   0EC7 DD 6E FD      [19] 2798 	ld	l,-3 (ix)
   0ECA DD 66 FE      [19] 2799 	ld	h,-2 (ix)
   0ECD 7E            [ 7] 2800 	ld	a,(hl)
   0ECE C6 16         [ 7] 2801 	add	a, #0x16
   0ED0 57            [ 4] 2802 	ld	d,a
   0ED1 0A            [ 7] 2803 	ld	a,(bc)
   0ED2 C6 FF         [ 7] 2804 	add	a,#0xFF
   0ED4 C5            [11] 2805 	push	bc
   0ED5 D5            [11] 2806 	push	de
   0ED6 33            [ 6] 2807 	inc	sp
   0ED7 F5            [11] 2808 	push	af
   0ED8 33            [ 6] 2809 	inc	sp
   0ED9 CDr0Br01      [17] 2810 	call	_getTilePtr
   0EDC F1            [10] 2811 	pop	af
   0EDD C1            [10] 2812 	pop	bc
   0EDE 5E            [ 7] 2813 	ld	e,(hl)
   0EDF 3E 02         [ 7] 2814 	ld	a,#0x02
   0EE1 93            [ 4] 2815 	sub	a, e
   0EE2 38 5F         [12] 2816 	jr	C,00155$
                           2817 ;src/main.c:539: moverEnemigoIzquierda(enemy);
   0EE4 C5            [11] 2818 	push	bc
   0EE5 C5            [11] 2819 	push	bc
   0EE6 CDr64r08      [17] 2820 	call	_moverEnemigoIzquierda
   0EE9 F1            [10] 2821 	pop	af
   0EEA C1            [10] 2822 	pop	bc
   0EEB 18 56         [12] 2823 	jr	00155$
   0EED                    2824 00154$:
                           2825 ;src/main.c:542: if(*getTilePtr(enemy->x + G_ENEMY_W + 1, enemy->y) <= 2
   0EED 7A            [ 4] 2826 	ld	a,d
   0EEE C6 05         [ 7] 2827 	add	a, #0x05
   0EF0 57            [ 4] 2828 	ld	d,a
   0EF1 C5            [11] 2829 	push	bc
   0EF2 7B            [ 4] 2830 	ld	a,e
   0EF3 F5            [11] 2831 	push	af
   0EF4 33            [ 6] 2832 	inc	sp
   0EF5 D5            [11] 2833 	push	de
   0EF6 33            [ 6] 2834 	inc	sp
   0EF7 CDr0Br01      [17] 2835 	call	_getTilePtr
   0EFA F1            [10] 2836 	pop	af
   0EFB C1            [10] 2837 	pop	bc
   0EFC 5E            [ 7] 2838 	ld	e,(hl)
   0EFD 3E 02         [ 7] 2839 	ld	a,#0x02
   0EFF 93            [ 4] 2840 	sub	a, e
   0F00 38 41         [12] 2841 	jr	C,00155$
                           2842 ;src/main.c:543: && *getTilePtr(enemy->x + G_ENEMY_W + 1, enemy->y + G_ENEMY_H/2) <= 2
   0F02 DD 6E FD      [19] 2843 	ld	l,-3 (ix)
   0F05 DD 66 FE      [19] 2844 	ld	h,-2 (ix)
   0F08 7E            [ 7] 2845 	ld	a,(hl)
   0F09 C6 0B         [ 7] 2846 	add	a, #0x0B
   0F0B 57            [ 4] 2847 	ld	d,a
   0F0C 0A            [ 7] 2848 	ld	a,(bc)
   0F0D C6 05         [ 7] 2849 	add	a, #0x05
   0F0F C5            [11] 2850 	push	bc
   0F10 D5            [11] 2851 	push	de
   0F11 33            [ 6] 2852 	inc	sp
   0F12 F5            [11] 2853 	push	af
   0F13 33            [ 6] 2854 	inc	sp
   0F14 CDr0Br01      [17] 2855 	call	_getTilePtr
   0F17 F1            [10] 2856 	pop	af
   0F18 C1            [10] 2857 	pop	bc
   0F19 5E            [ 7] 2858 	ld	e,(hl)
   0F1A 3E 02         [ 7] 2859 	ld	a,#0x02
   0F1C 93            [ 4] 2860 	sub	a, e
   0F1D 38 24         [12] 2861 	jr	C,00155$
                           2862 ;src/main.c:544: && *getTilePtr(enemy->x + G_ENEMY_W + 1, enemy->y + G_ENEMY_H) <= 2) {
   0F1F DD 6E FD      [19] 2863 	ld	l,-3 (ix)
   0F22 DD 66 FE      [19] 2864 	ld	h,-2 (ix)
   0F25 7E            [ 7] 2865 	ld	a,(hl)
   0F26 C6 16         [ 7] 2866 	add	a, #0x16
   0F28 57            [ 4] 2867 	ld	d,a
   0F29 0A            [ 7] 2868 	ld	a,(bc)
   0F2A C6 05         [ 7] 2869 	add	a, #0x05
   0F2C C5            [11] 2870 	push	bc
   0F2D D5            [11] 2871 	push	de
   0F2E 33            [ 6] 2872 	inc	sp
   0F2F F5            [11] 2873 	push	af
   0F30 33            [ 6] 2874 	inc	sp
   0F31 CDr0Br01      [17] 2875 	call	_getTilePtr
   0F34 F1            [10] 2876 	pop	af
   0F35 C1            [10] 2877 	pop	bc
   0F36 5E            [ 7] 2878 	ld	e,(hl)
   0F37 3E 02         [ 7] 2879 	ld	a,#0x02
   0F39 93            [ 4] 2880 	sub	a, e
   0F3A 38 07         [12] 2881 	jr	C,00155$
                           2882 ;src/main.c:545: moverEnemigoDerecha(enemy);
   0F3C C5            [11] 2883 	push	bc
   0F3D C5            [11] 2884 	push	bc
   0F3E CDr54r08      [17] 2885 	call	_moverEnemigoDerecha
   0F41 F1            [10] 2886 	pop	af
   0F42 C1            [10] 2887 	pop	bc
   0F43                    2888 00155$:
                           2889 ;src/main.c:548: if (dy < enemy->y) {
   0F43 DD 6E FD      [19] 2890 	ld	l,-3 (ix)
   0F46 DD 66 FE      [19] 2891 	ld	h,-2 (ix)
   0F49 5E            [ 7] 2892 	ld	e,(hl)
                           2893 ;src/main.c:473: u8 difx = abs(enemy->x - prota.x); // calculo distancia para mantener una dist
   0F4A 0A            [ 7] 2894 	ld	a,(bc)
   0F4B 57            [ 4] 2895 	ld	d,a
                           2896 ;src/main.c:548: if (dy < enemy->y) {
   0F4C DD 7E 07      [19] 2897 	ld	a,7 (ix)
   0F4F 93            [ 4] 2898 	sub	a, e
   0F50 30 53         [12] 2899 	jr	NC,00165$
                           2900 ;src/main.c:549: if(*getTilePtr(enemy->x, enemy->y - 2) <= 2
   0F52 63            [ 4] 2901 	ld	h,e
   0F53 25            [ 4] 2902 	dec	h
   0F54 25            [ 4] 2903 	dec	h
   0F55 C5            [11] 2904 	push	bc
   0F56 E5            [11] 2905 	push	hl
   0F57 33            [ 6] 2906 	inc	sp
   0F58 D5            [11] 2907 	push	de
   0F59 33            [ 6] 2908 	inc	sp
   0F5A CDr0Br01      [17] 2909 	call	_getTilePtr
   0F5D F1            [10] 2910 	pop	af
   0F5E C1            [10] 2911 	pop	bc
   0F5F 5E            [ 7] 2912 	ld	e,(hl)
   0F60 3E 02         [ 7] 2913 	ld	a,#0x02
   0F62 93            [ 4] 2914 	sub	a, e
   0F63 DArF8r0F      [10] 2915 	jp	C,00175$
                           2916 ;src/main.c:550: && *getTilePtr(enemy->x + G_ENEMY_W / 2, enemy->y - 2) <= 2
   0F66 DD 6E FD      [19] 2917 	ld	l,-3 (ix)
   0F69 DD 66 FE      [19] 2918 	ld	h,-2 (ix)
   0F6C 56            [ 7] 2919 	ld	d,(hl)
   0F6D 15            [ 4] 2920 	dec	d
   0F6E 15            [ 4] 2921 	dec	d
   0F6F 0A            [ 7] 2922 	ld	a,(bc)
   0F70 C6 02         [ 7] 2923 	add	a, #0x02
   0F72 C5            [11] 2924 	push	bc
   0F73 D5            [11] 2925 	push	de
   0F74 33            [ 6] 2926 	inc	sp
   0F75 F5            [11] 2927 	push	af
   0F76 33            [ 6] 2928 	inc	sp
   0F77 CDr0Br01      [17] 2929 	call	_getTilePtr
   0F7A F1            [10] 2930 	pop	af
   0F7B C1            [10] 2931 	pop	bc
   0F7C 5E            [ 7] 2932 	ld	e,(hl)
   0F7D 3E 02         [ 7] 2933 	ld	a,#0x02
   0F7F 93            [ 4] 2934 	sub	a, e
   0F80 38 76         [12] 2935 	jr	C,00175$
                           2936 ;src/main.c:551: && *getTilePtr(enemy->x + G_ENEMY_W, enemy->y - 2) <= 2) {
   0F82 DD 6E FD      [19] 2937 	ld	l,-3 (ix)
   0F85 DD 66 FE      [19] 2938 	ld	h,-2 (ix)
   0F88 56            [ 7] 2939 	ld	d,(hl)
   0F89 15            [ 4] 2940 	dec	d
   0F8A 15            [ 4] 2941 	dec	d
   0F8B 0A            [ 7] 2942 	ld	a,(bc)
   0F8C C6 04         [ 7] 2943 	add	a, #0x04
   0F8E C5            [11] 2944 	push	bc
   0F8F D5            [11] 2945 	push	de
   0F90 33            [ 6] 2946 	inc	sp
   0F91 F5            [11] 2947 	push	af
   0F92 33            [ 6] 2948 	inc	sp
   0F93 CDr0Br01      [17] 2949 	call	_getTilePtr
   0F96 F1            [10] 2950 	pop	af
   0F97 C1            [10] 2951 	pop	bc
   0F98 5E            [ 7] 2952 	ld	e,(hl)
   0F99 3E 02         [ 7] 2953 	ld	a,#0x02
   0F9B 93            [ 4] 2954 	sub	a, e
   0F9C 38 5A         [12] 2955 	jr	C,00175$
                           2956 ;src/main.c:552: moverEnemigoArriba(enemy);
   0F9E C5            [11] 2957 	push	bc
   0F9F CDr16r08      [17] 2958 	call	_moverEnemigoArriba
   0FA2 F1            [10] 2959 	pop	af
   0FA3 18 53         [12] 2960 	jr	00175$
   0FA5                    2961 00165$:
                           2962 ;src/main.c:555: if(*getTilePtr(enemy->x, enemy->y + G_ENEMY_H + 2) <= 2
   0FA5 7B            [ 4] 2963 	ld	a,e
   0FA6 C6 18         [ 7] 2964 	add	a, #0x18
   0FA8 67            [ 4] 2965 	ld	h,a
   0FA9 C5            [11] 2966 	push	bc
   0FAA E5            [11] 2967 	push	hl
   0FAB 33            [ 6] 2968 	inc	sp
   0FAC D5            [11] 2969 	push	de
   0FAD 33            [ 6] 2970 	inc	sp
   0FAE CDr0Br01      [17] 2971 	call	_getTilePtr
   0FB1 F1            [10] 2972 	pop	af
   0FB2 C1            [10] 2973 	pop	bc
   0FB3 5E            [ 7] 2974 	ld	e,(hl)
   0FB4 3E 02         [ 7] 2975 	ld	a,#0x02
   0FB6 93            [ 4] 2976 	sub	a, e
   0FB7 38 3F         [12] 2977 	jr	C,00175$
                           2978 ;src/main.c:556: && *getTilePtr(enemy->x + G_ENEMY_W / 2, enemy->y + G_ENEMY_H + 2) <= 2
   0FB9 DD 6E FD      [19] 2979 	ld	l,-3 (ix)
   0FBC DD 66 FE      [19] 2980 	ld	h,-2 (ix)
   0FBF 7E            [ 7] 2981 	ld	a,(hl)
   0FC0 C6 18         [ 7] 2982 	add	a, #0x18
   0FC2 57            [ 4] 2983 	ld	d,a
   0FC3 0A            [ 7] 2984 	ld	a,(bc)
   0FC4 C6 02         [ 7] 2985 	add	a, #0x02
   0FC6 C5            [11] 2986 	push	bc
   0FC7 D5            [11] 2987 	push	de
   0FC8 33            [ 6] 2988 	inc	sp
   0FC9 F5            [11] 2989 	push	af
   0FCA 33            [ 6] 2990 	inc	sp
   0FCB CDr0Br01      [17] 2991 	call	_getTilePtr
   0FCE F1            [10] 2992 	pop	af
   0FCF C1            [10] 2993 	pop	bc
   0FD0 5E            [ 7] 2994 	ld	e,(hl)
   0FD1 3E 02         [ 7] 2995 	ld	a,#0x02
   0FD3 93            [ 4] 2996 	sub	a, e
   0FD4 38 22         [12] 2997 	jr	C,00175$
                           2998 ;src/main.c:557: && *getTilePtr(enemy->x + G_ENEMY_W, enemy->y + G_ENEMY_H + 2) <= 2) {
   0FD6 DD 6E FD      [19] 2999 	ld	l,-3 (ix)
   0FD9 DD 66 FE      [19] 3000 	ld	h,-2 (ix)
   0FDC 7E            [ 7] 3001 	ld	a,(hl)
   0FDD C6 18         [ 7] 3002 	add	a, #0x18
   0FDF 57            [ 4] 3003 	ld	d,a
   0FE0 0A            [ 7] 3004 	ld	a,(bc)
   0FE1 C6 04         [ 7] 3005 	add	a, #0x04
   0FE3 C5            [11] 3006 	push	bc
   0FE4 D5            [11] 3007 	push	de
   0FE5 33            [ 6] 3008 	inc	sp
   0FE6 F5            [11] 3009 	push	af
   0FE7 33            [ 6] 3010 	inc	sp
   0FE8 CDr0Br01      [17] 3011 	call	_getTilePtr
   0FEB F1            [10] 3012 	pop	af
   0FEC C1            [10] 3013 	pop	bc
   0FED 5E            [ 7] 3014 	ld	e,(hl)
   0FEE 3E 02         [ 7] 3015 	ld	a,#0x02
   0FF0 93            [ 4] 3016 	sub	a, e
   0FF1 38 05         [12] 3017 	jr	C,00175$
                           3018 ;src/main.c:558: moverEnemigoAbajo(enemy);
   0FF3 C5            [11] 3019 	push	bc
   0FF4 CDr35r08      [17] 3020 	call	_moverEnemigoAbajo
   0FF7 F1            [10] 3021 	pop	af
   0FF8                    3022 00175$:
   0FF8 DD F9         [10] 3023 	ld	sp, ix
   0FFA DD E1         [14] 3024 	pop	ix
   0FFC C9            [10] 3025 	ret
                           3026 ;src/main.c:565: void updateEnemies() {
                           3027 ;	---------------------------------
                           3028 ; Function updateEnemies
                           3029 ; ---------------------------------
   0FFD                    3030 _updateEnemies::
   0FFD DD E5         [15] 3031 	push	ix
   0FFF DD 21 00 00   [14] 3032 	ld	ix,#0
   1003 DD 39         [15] 3033 	add	ix,sp
   1005 21 FA FF      [10] 3034 	ld	hl,#-6
   1008 39            [11] 3035 	add	hl,sp
   1009 F9            [ 6] 3036 	ld	sp,hl
                           3037 ;src/main.c:567: u8 i = 1 + 1;
   100A DD 36 FA 02   [19] 3038 	ld	-6 (ix),#0x02
                           3039 ;src/main.c:570: actual = enemy;
                           3040 ;src/main.c:572: while (--i) {
   100E DD 36 FCr02   [19] 3041 	ld	-4 (ix),#<(_enemy)
   1012 DD 36 FDs00   [19] 3042 	ld	-3 (ix),#>(_enemy)
   1016 DD 36 FEr02   [19] 3043 	ld	-2 (ix),#<(_enemy)
   101A DD 36 FFs00   [19] 3044 	ld	-1 (ix),#>(_enemy)
   101E                    3045 00121$:
   101E DD 7E FA      [19] 3046 	ld	a,-6 (ix)
   1021 C6 FF         [ 7] 3047 	add	a,#0xFF
   1023 DD 77 FB      [19] 3048 	ld	-5 (ix), a
   1026 DD 77 FA      [19] 3049 	ld	-6 (ix),a
   1029 DD 7E FB      [19] 3050 	ld	a,-5 (ix)
   102C B7            [ 4] 3051 	or	a, a
   102D CArBAr10      [10] 3052 	jp	Z,00124$
                           3053 ;src/main.c:574: actual->inRange = 1;
   1030 21r13r00      [10] 3054 	ld	hl,#(_enemy + 0x0011)
   1033 36 01         [10] 3055 	ld	(hl),#0x01
                           3056 ;src/main.c:575: actual->seen = 1;
   1035 21r14r00      [10] 3057 	ld	hl,#(_enemy + 0x0012)
   1038 36 01         [10] 3058 	ld	(hl),#0x01
                           3059 ;src/main.c:576: if (actual->patrolling) { // esta patrullando
   103A 3Ar0Dr00      [13] 3060 	ld	a, (#(_enemy + 0x000b) + 0)
   103D B7            [ 4] 3061 	or	a, a
   103E 28 51         [12] 3062 	jr	Z,00119$
                           3063 ;src/main.c:577: if (!actual->seen && !actual->inRange) {
   1040 21r14r00      [10] 3064 	ld	hl, #(_enemy + 0x0012) + 0
   1043 4E            [ 7] 3065 	ld	c,(hl)
   1044 21r13r00      [10] 3066 	ld	hl, #(_enemy + 0x0011) + 0
   1047 46            [ 7] 3067 	ld	b,(hl)
   1048 79            [ 4] 3068 	ld	a,c
   1049 B7            [ 4] 3069 	or	a,a
   104A 20 0D         [12] 3070 	jr	NZ,00107$
   104C B0            [ 4] 3071 	or	a,b
   104D 20 0A         [12] 3072 	jr	NZ,00107$
                           3073 ;src/main.c:578: patrol(actual);
   104F 21r02r00      [10] 3074 	ld	hl,#_enemy
   1052 E5            [11] 3075 	push	hl
   1053 CDrA4r0B      [17] 3076 	call	_patrol
   1056 F1            [10] 3077 	pop	af
   1057 18 C5         [12] 3078 	jr	00121$
   1059                    3079 00107$:
                           3080 ;src/main.c:582: actual->onPathPatrol = 0;
   1059 11r0Er00      [10] 3081 	ld	de,#_enemy + 12
                           3082 ;src/main.c:579: }else if (actual->inRange) {
   105C 78            [ 4] 3083 	ld	a,b
   105D B7            [ 4] 3084 	or	a, a
   105E 28 1A         [12] 3085 	jr	Z,00104$
                           3086 ;src/main.c:580: engage(actual, prota.x, prota.y);
   1060 3Ar13r05      [13] 3087 	ld	a, (#_prota + 1)
   1063 21r12r05      [10] 3088 	ld	hl, #_prota + 0
   1066 46            [ 7] 3089 	ld	b,(hl)
   1067 D5            [11] 3090 	push	de
   1068 F5            [11] 3091 	push	af
   1069 33            [ 6] 3092 	inc	sp
   106A C5            [11] 3093 	push	bc
   106B 33            [ 6] 3094 	inc	sp
   106C 21r02r00      [10] 3095 	ld	hl,#_enemy
   106F E5            [11] 3096 	push	hl
   1070 CDrC0r0B      [17] 3097 	call	_engage
   1073 F1            [10] 3098 	pop	af
   1074 F1            [10] 3099 	pop	af
   1075 D1            [10] 3100 	pop	de
                           3101 ;src/main.c:582: actual->onPathPatrol = 0;
   1076 AF            [ 4] 3102 	xor	a, a
   1077 12            [ 7] 3103 	ld	(de),a
   1078 18 A4         [12] 3104 	jr	00121$
   107A                    3105 00104$:
                           3106 ;src/main.c:583: } else if (actual->seen) {
   107A 79            [ 4] 3107 	ld	a,c
   107B B7            [ 4] 3108 	or	a, a
   107C 28 A0         [12] 3109 	jr	Z,00121$
                           3110 ;src/main.c:586: actual->iter=0;
   107E 21r11r00      [10] 3111 	ld	hl,#(_enemy + 0x000f)
   1081 36 00         [10] 3112 	ld	(hl),#0x00
                           3113 ;src/main.c:587: actual->reversePatrol = NO;
   1083 21r0Fr00      [10] 3114 	ld	hl,#(_enemy + 0x000d)
   1086 36 00         [10] 3115 	ld	(hl),#0x00
                           3116 ;src/main.c:588: actual->patrolling = 0;
   1088 21r0Dr00      [10] 3117 	ld	hl,#(_enemy + 0x000b)
   108B 36 00         [10] 3118 	ld	(hl),#0x00
                           3119 ;src/main.c:589: actual->onPathPatrol = 0;
   108D AF            [ 4] 3120 	xor	a, a
   108E 12            [ 7] 3121 	ld	(de),a
   108F 18 8D         [12] 3122 	jr	00121$
   1091                    3123 00119$:
                           3124 ;src/main.c:591: } else if (actual->seek) { // esta buscando
   1091 DD 6E FC      [19] 3125 	ld	l,-4 (ix)
   1094 DD 66 FD      [19] 3126 	ld	h,-3 (ix)
   1097 11 14 00      [10] 3127 	ld	de, #0x0014
   109A 19            [11] 3128 	add	hl, de
   109B 7E            [ 7] 3129 	ld	a,(hl)
   109C B7            [ 4] 3130 	or	a, a
   109D CAr1Er10      [10] 3131 	jp	Z,00121$
                           3132 ;src/main.c:592: if (!actual->found /*&& actual->seekTimer <= 5*/) {
   10A0 DD 6E FE      [19] 3133 	ld	l,-2 (ix)
   10A3 DD 66 FF      [19] 3134 	ld	h,-1 (ix)
   10A6 11 13 00      [10] 3135 	ld	de, #0x0013
   10A9 19            [11] 3136 	add	hl, de
   10AA 7E            [ 7] 3137 	ld	a,(hl)
   10AB B7            [ 4] 3138 	or	a, a
   10AC C2r1Er10      [10] 3139 	jp	NZ,00121$
                           3140 ;src/main.c:593: seek(actual); // buscar en posiciones cercanas a la actual
   10AF 21r02r00      [10] 3141 	ld	hl,#_enemy
   10B2 E5            [11] 3142 	push	hl
   10B3 CDrB6r0B      [17] 3143 	call	_seek
   10B6 F1            [10] 3144 	pop	af
   10B7 C3r1Er10      [10] 3145 	jp	00121$
                           3146 ;src/main.c:596: } else if (actual->engage) {
   10BA                    3147 00124$:
   10BA DD F9         [10] 3148 	ld	sp, ix
   10BC DD E1         [14] 3149 	pop	ix
   10BE C9            [10] 3150 	ret
                           3151 ;src/main.c:605: void avanzarMapa() {
                           3152 ;	---------------------------------
                           3153 ; Function avanzarMapa
                           3154 ; ---------------------------------
   10BF                    3155 _avanzarMapa::
                           3156 ;src/main.c:606: if(num_mapa < NUM_MAPAS -1) {
   10BF 3Ar27r05      [13] 3157 	ld	a,(#_num_mapa + 0)
   10C2 D6 02         [ 7] 3158 	sub	a, #0x02
   10C4 D2rC0r00      [10] 3159 	jp	NC,_menuFin
                           3160 ;src/main.c:607: mapa = mapas[++num_mapa];
   10C7 21r27r05      [10] 3161 	ld	hl, #_num_mapa+0
   10CA 34            [11] 3162 	inc	(hl)
   10CB FD 21r27r05   [14] 3163 	ld	iy,#_num_mapa
   10CF FD 6E 00      [19] 3164 	ld	l,0 (iy)
   10D2 26 00         [ 7] 3165 	ld	h,#0x00
   10D4 29            [11] 3166 	add	hl, hl
   10D5 11r16r00      [10] 3167 	ld	de,#_mapas
   10D8 19            [11] 3168 	add	hl,de
   10D9 7E            [ 7] 3169 	ld	a,(hl)
   10DA FD 21r25r05   [14] 3170 	ld	iy,#_mapa
   10DE FD 77 00      [19] 3171 	ld	0 (iy),a
   10E1 23            [ 6] 3172 	inc	hl
   10E2 7E            [ 7] 3173 	ld	a,(hl)
   10E3 32r26r05      [13] 3174 	ld	(#_mapa + 1),a
                           3175 ;src/main.c:608: prota.x = prota.px = 2;
   10E6 21r14r05      [10] 3176 	ld	hl,#(_prota + 0x0002)
   10E9 36 02         [10] 3177 	ld	(hl),#0x02
   10EB 21r12r05      [10] 3178 	ld	hl,#_prota
   10EE 36 02         [10] 3179 	ld	(hl),#0x02
                           3180 ;src/main.c:609: prota.mover = SI;
   10F0 21r18r05      [10] 3181 	ld	hl,#(_prota + 0x0006)
   10F3 36 01         [10] 3182 	ld	(hl),#0x01
                           3183 ;src/main.c:610: dibujarMapa();
   10F5 CDr00r00      [17] 3184 	call	_dibujarMapa
                           3185 ;src/main.c:611: inicializarEnemy();
   10F8 C3rDFr16      [10] 3186 	jp  _inicializarEnemy
                           3187 ;src/main.c:615: menuFin();
   10FB C3rC0r00      [10] 3188 	jp  _menuFin
                           3189 ;src/main.c:619: void moverIzquierda() {
                           3190 ;	---------------------------------
                           3191 ; Function moverIzquierda
                           3192 ; ---------------------------------
   10FE                    3193 _moverIzquierda::
                           3194 ;src/main.c:620: prota.mira = M_izquierda;
   10FE 01r12r05      [10] 3195 	ld	bc,#_prota+0
   1101 21r19r05      [10] 3196 	ld	hl,#(_prota + 0x0007)
   1104 36 01         [10] 3197 	ld	(hl),#0x01
                           3198 ;src/main.c:621: if (!checkCollision(M_izquierda)) {
   1106 C5            [11] 3199 	push	bc
   1107 21 01 00      [10] 3200 	ld	hl,#0x0001
   110A E5            [11] 3201 	push	hl
   110B CDr4Cr01      [17] 3202 	call	_checkCollision
   110E F1            [10] 3203 	pop	af
   110F C1            [10] 3204 	pop	bc
   1110 7D            [ 4] 3205 	ld	a,l
   1111 B7            [ 4] 3206 	or	a, a
   1112 C0            [11] 3207 	ret	NZ
                           3208 ;src/main.c:622: prota.x--;
   1113 0A            [ 7] 3209 	ld	a,(bc)
   1114 C6 FF         [ 7] 3210 	add	a,#0xFF
   1116 02            [ 7] 3211 	ld	(bc),a
                           3212 ;src/main.c:623: prota.mover = SI;
   1117 21r18r05      [10] 3213 	ld	hl,#(_prota + 0x0006)
   111A 36 01         [10] 3214 	ld	(hl),#0x01
                           3215 ;src/main.c:624: prota.sprite = g_hero_left;
   111C 21r00r00      [10] 3216 	ld	hl,#_g_hero_left
   111F 22r16r05      [16] 3217 	ld	((_prota + 0x0004)), hl
   1122 C9            [10] 3218 	ret
                           3219 ;src/main.c:628: void moverDerecha() {
                           3220 ;	---------------------------------
                           3221 ; Function moverDerecha
                           3222 ; ---------------------------------
   1123                    3223 _moverDerecha::
                           3224 ;src/main.c:629: prota.mira = M_derecha;
   1123 21r19r05      [10] 3225 	ld	hl,#(_prota + 0x0007)
   1126 36 00         [10] 3226 	ld	(hl),#0x00
                           3227 ;src/main.c:630: if (!checkCollision(M_derecha) && (prota.x + G_HERO_W < 80)) {
   1128 21 00 00      [10] 3228 	ld	hl,#0x0000
   112B E5            [11] 3229 	push	hl
   112C CDr4Cr01      [17] 3230 	call	_checkCollision
   112F F1            [10] 3231 	pop	af
   1130 45            [ 4] 3232 	ld	b,l
   1131 21r12r05      [10] 3233 	ld	hl, #_prota + 0
   1134 4E            [ 7] 3234 	ld	c,(hl)
   1135 59            [ 4] 3235 	ld	e,c
   1136 16 00         [ 7] 3236 	ld	d,#0x00
   1138 21 07 00      [10] 3237 	ld	hl,#0x0007
   113B 19            [11] 3238 	add	hl,de
   113C 11 50 80      [10] 3239 	ld	de, #0x8050
   113F 29            [11] 3240 	add	hl, hl
   1140 3F            [ 4] 3241 	ccf
   1141 CB 1C         [ 8] 3242 	rr	h
   1143 CB 1D         [ 8] 3243 	rr	l
   1145 ED 52         [15] 3244 	sbc	hl, de
   1147 3E 00         [ 7] 3245 	ld	a,#0x00
   1149 17            [ 4] 3246 	rla
   114A 5F            [ 4] 3247 	ld	e,a
   114B 78            [ 4] 3248 	ld	a,b
   114C B7            [ 4] 3249 	or	a,a
   114D 20 14         [12] 3250 	jr	NZ,00104$
   114F B3            [ 4] 3251 	or	a,e
   1150 28 11         [12] 3252 	jr	Z,00104$
                           3253 ;src/main.c:631: prota.x++;
   1152 0C            [ 4] 3254 	inc	c
   1153 21r12r05      [10] 3255 	ld	hl,#_prota
   1156 71            [ 7] 3256 	ld	(hl),c
                           3257 ;src/main.c:632: prota.mover = SI;
   1157 21r18r05      [10] 3258 	ld	hl,#(_prota + 0x0006)
   115A 36 01         [10] 3259 	ld	(hl),#0x01
                           3260 ;src/main.c:633: prota.sprite = g_hero;
   115C 21r00r00      [10] 3261 	ld	hl,#_g_hero
   115F 22r16r05      [16] 3262 	ld	((_prota + 0x0004)), hl
   1162 C9            [10] 3263 	ret
   1163                    3264 00104$:
                           3265 ;src/main.c:635: }else if( prota.x + G_HERO_W >= 80){
   1163 7B            [ 4] 3266 	ld	a,e
   1164 B7            [ 4] 3267 	or	a, a
   1165 C0            [11] 3268 	ret	NZ
                           3269 ;src/main.c:636: avanzarMapa();
   1166 C3rBFr10      [10] 3270 	jp  _avanzarMapa
                           3271 ;src/main.c:640: void moverArriba() {
                           3272 ;	---------------------------------
                           3273 ; Function moverArriba
                           3274 ; ---------------------------------
   1169                    3275 _moverArriba::
                           3276 ;src/main.c:641: prota.mira = M_arriba;
   1169 21r19r05      [10] 3277 	ld	hl,#(_prota + 0x0007)
   116C 36 02         [10] 3278 	ld	(hl),#0x02
                           3279 ;src/main.c:642: if (!checkCollision(M_arriba)) { // TODO: COMPROBAR
   116E 21 02 00      [10] 3280 	ld	hl,#0x0002
   1171 E5            [11] 3281 	push	hl
   1172 CDr4Cr01      [17] 3282 	call	_checkCollision
   1175 F1            [10] 3283 	pop	af
   1176 7D            [ 4] 3284 	ld	a,l
   1177 B7            [ 4] 3285 	or	a, a
   1178 C0            [11] 3286 	ret	NZ
                           3287 ;src/main.c:643: prota.y--;
   1179 21r13r05      [10] 3288 	ld	hl,#_prota + 1
   117C 4E            [ 7] 3289 	ld	c,(hl)
   117D 0D            [ 4] 3290 	dec	c
   117E 71            [ 7] 3291 	ld	(hl),c
                           3292 ;src/main.c:644: prota.y--;
   117F 0D            [ 4] 3293 	dec	c
   1180 71            [ 7] 3294 	ld	(hl),c
                           3295 ;src/main.c:645: prota.mover  = SI;
   1181 21r18r05      [10] 3296 	ld	hl,#(_prota + 0x0006)
   1184 36 01         [10] 3297 	ld	(hl),#0x01
                           3298 ;src/main.c:646: prota.sprite = g_hero_up;
   1186 21r00r00      [10] 3299 	ld	hl,#_g_hero_up
   1189 22r16r05      [16] 3300 	ld	((_prota + 0x0004)), hl
   118C C9            [10] 3301 	ret
                           3302 ;src/main.c:650: void moverAbajo() {
                           3303 ;	---------------------------------
                           3304 ; Function moverAbajo
                           3305 ; ---------------------------------
   118D                    3306 _moverAbajo::
                           3307 ;src/main.c:651: prota.mira = M_abajo;
   118D 21r19r05      [10] 3308 	ld	hl,#(_prota + 0x0007)
   1190 36 03         [10] 3309 	ld	(hl),#0x03
                           3310 ;src/main.c:652: if (!checkCollision(M_abajo) ) { // TODO: COMPROBAR
   1192 21 03 00      [10] 3311 	ld	hl,#0x0003
   1195 E5            [11] 3312 	push	hl
   1196 CDr4Cr01      [17] 3313 	call	_checkCollision
   1199 F1            [10] 3314 	pop	af
   119A 7D            [ 4] 3315 	ld	a,l
   119B B7            [ 4] 3316 	or	a, a
   119C C0            [11] 3317 	ret	NZ
                           3318 ;src/main.c:653: prota.y++;
   119D 01r13r05      [10] 3319 	ld	bc,#_prota + 1
   11A0 0A            [ 7] 3320 	ld	a,(bc)
   11A1 3C            [ 4] 3321 	inc	a
   11A2 02            [ 7] 3322 	ld	(bc),a
                           3323 ;src/main.c:654: prota.y++;
   11A3 3C            [ 4] 3324 	inc	a
   11A4 02            [ 7] 3325 	ld	(bc),a
                           3326 ;src/main.c:655: prota.mover  = SI;
   11A5 21r18r05      [10] 3327 	ld	hl,#(_prota + 0x0006)
   11A8 36 01         [10] 3328 	ld	(hl),#0x01
                           3329 ;src/main.c:656: prota.sprite = g_hero_down;
   11AA 21r00r00      [10] 3330 	ld	hl,#_g_hero_down
   11AD 22r16r05      [16] 3331 	ld	((_prota + 0x0004)), hl
   11B0 C9            [10] 3332 	ret
                           3333 ;src/main.c:660: void dibujarCuchillo() {
                           3334 ;	---------------------------------
                           3335 ; Function dibujarCuchillo
                           3336 ; ---------------------------------
   11B1                    3337 _dibujarCuchillo::
   11B1 DD E5         [15] 3338 	push	ix
   11B3 DD 21 00 00   [14] 3339 	ld	ix,#0
   11B7 DD 39         [15] 3340 	add	ix,sp
   11B9 F5            [11] 3341 	push	af
                           3342 ;src/main.c:661: u8* pvmem = cpct_getScreenPtr(CPCT_VMEM_START, cu.x, cu.y);
   11BA 21r1Br05      [10] 3343 	ld	hl, #_cu + 1
   11BD 56            [ 7] 3344 	ld	d,(hl)
   11BE 21r1Ar05      [10] 3345 	ld	hl, #_cu + 0
   11C1 46            [ 7] 3346 	ld	b,(hl)
   11C2 D5            [11] 3347 	push	de
   11C3 33            [ 6] 3348 	inc	sp
   11C4 C5            [11] 3349 	push	bc
   11C5 33            [ 6] 3350 	inc	sp
   11C6 21 00 C0      [10] 3351 	ld	hl,#0xC000
   11C9 E5            [11] 3352 	push	hl
   11CA CDr00r00      [17] 3353 	call	_cpct_getScreenPtr
   11CD 45            [ 4] 3354 	ld	b,l
   11CE 5C            [ 4] 3355 	ld	e,h
                           3356 ;src/main.c:662: if(cu.eje == E_X){
   11CF 21r22r05      [10] 3357 	ld	hl, #_cu + 8
   11D2 4E            [ 7] 3358 	ld	c,(hl)
                           3359 ;src/main.c:663: cpct_drawSpriteMaskedAlignedTable (cu.sprite, pvmem, G_KNIFEX_0_W, G_KNIFEX_0_H, g_tablatrans);
   11D3 DD 70 FE      [19] 3360 	ld	-2 (ix),b
   11D6 DD 73 FF      [19] 3361 	ld	-1 (ix),e
                           3362 ;src/main.c:662: if(cu.eje == E_X){
   11D9 79            [ 4] 3363 	ld	a,c
   11DA B7            [ 4] 3364 	or	a, a
   11DB 20 19         [12] 3365 	jr	NZ,00104$
                           3366 ;src/main.c:663: cpct_drawSpriteMaskedAlignedTable (cu.sprite, pvmem, G_KNIFEX_0_W, G_KNIFEX_0_H, g_tablatrans);
   11DD 11r00r0E      [10] 3367 	ld	de,#_g_tablatrans+0
   11E0 ED 4Br1Er05   [20] 3368 	ld	bc, (#(_cu + 0x0004) + 0)
   11E4 D5            [11] 3369 	push	de
   11E5 21 04 04      [10] 3370 	ld	hl,#0x0404
   11E8 E5            [11] 3371 	push	hl
   11E9 DD 6E FE      [19] 3372 	ld	l,-2 (ix)
   11EC DD 66 FF      [19] 3373 	ld	h,-1 (ix)
   11EF E5            [11] 3374 	push	hl
   11F0 C5            [11] 3375 	push	bc
   11F1 CDr00r00      [17] 3376 	call	_cpct_drawSpriteMaskedAlignedTable
   11F4 18 1A         [12] 3377 	jr	00106$
   11F6                    3378 00104$:
                           3379 ;src/main.c:666: else if(cu.eje == E_Y){
   11F6 0D            [ 4] 3380 	dec	c
   11F7 20 17         [12] 3381 	jr	NZ,00106$
                           3382 ;src/main.c:667: cpct_drawSpriteMaskedAlignedTable (cu.sprite, pvmem, G_KNIFEY_0_W, G_KNIFEY_0_H, g_tablatrans);
   11F9 11r00r0E      [10] 3383 	ld	de,#_g_tablatrans+0
   11FC ED 4Br1Er05   [20] 3384 	ld	bc, (#(_cu + 0x0004) + 0)
   1200 D5            [11] 3385 	push	de
   1201 21 02 08      [10] 3386 	ld	hl,#0x0802
   1204 E5            [11] 3387 	push	hl
   1205 DD 6E FE      [19] 3388 	ld	l,-2 (ix)
   1208 DD 66 FF      [19] 3389 	ld	h,-1 (ix)
   120B E5            [11] 3390 	push	hl
   120C C5            [11] 3391 	push	bc
   120D CDr00r00      [17] 3392 	call	_cpct_drawSpriteMaskedAlignedTable
   1210                    3393 00106$:
   1210 DD F9         [10] 3394 	ld	sp, ix
   1212 DD E1         [14] 3395 	pop	ix
   1214 C9            [10] 3396 	ret
                           3397 ;src/main.c:671: void borrarCuchillo() {
                           3398 ;	---------------------------------
                           3399 ; Function borrarCuchillo
                           3400 ; ---------------------------------
   1215                    3401 _borrarCuchillo::
   1215 DD E5         [15] 3402 	push	ix
   1217 DD 21 00 00   [14] 3403 	ld	ix,#0
   121B DD 39         [15] 3404 	add	ix,sp
   121D F5            [11] 3405 	push	af
   121E 3B            [ 6] 3406 	dec	sp
                           3407 ;src/main.c:673: u8 w = 2 + (cu.px & 1);
   121F 21r1Cr05      [10] 3408 	ld	hl, #_cu + 2
   1222 4E            [ 7] 3409 	ld	c,(hl)
   1223 79            [ 4] 3410 	ld	a,c
   1224 E6 01         [ 7] 3411 	and	a, #0x01
   1226 47            [ 4] 3412 	ld	b,a
   1227 04            [ 4] 3413 	inc	b
   1228 04            [ 4] 3414 	inc	b
                           3415 ;src/main.c:674: u8 h = 2 + (cu.py & 3 ? 1 : 0);
   1229 21r1Dr05      [10] 3416 	ld	hl, #_cu + 3
   122C 5E            [ 7] 3417 	ld	e,(hl)
   122D 7B            [ 4] 3418 	ld	a,e
   122E E6 03         [ 7] 3419 	and	a, #0x03
   1230 28 04         [12] 3420 	jr	Z,00105$
   1232 3E 01         [ 7] 3421 	ld	a,#0x01
   1234 18 02         [12] 3422 	jr	00106$
   1236                    3423 00105$:
   1236 3E 00         [ 7] 3424 	ld	a,#0x00
   1238                    3425 00106$:
   1238 C6 02         [ 7] 3426 	add	a, #0x02
   123A DD 77 FD      [19] 3427 	ld	-3 (ix),a
                           3428 ;src/main.c:675: cpct_etm_drawTileBox2x4 (cu.px / 2, (cu.py - ORIGEN_MAPA_Y)/4, w, h, g_map1_W, ORIGEN_MAPA, mapa);
   123D FD 2Ar25r05   [20] 3429 	ld	iy,(_mapa)
   1241 16 00         [ 7] 3430 	ld	d,#0x00
   1243 7B            [ 4] 3431 	ld	a,e
   1244 C6 E8         [ 7] 3432 	add	a,#0xE8
   1246 DD 77 FE      [19] 3433 	ld	-2 (ix),a
   1249 7A            [ 4] 3434 	ld	a,d
   124A CE FF         [ 7] 3435 	adc	a,#0xFF
   124C DD 77 FF      [19] 3436 	ld	-1 (ix),a
   124F DD 6E FE      [19] 3437 	ld	l,-2 (ix)
   1252 DD 66 FF      [19] 3438 	ld	h,-1 (ix)
   1255 DD CB FF 7E   [20] 3439 	bit	7, -1 (ix)
   1259 28 04         [12] 3440 	jr	Z,00107$
   125B 21 EB FF      [10] 3441 	ld	hl,#0xFFEB
   125E 19            [11] 3442 	add	hl,de
   125F                    3443 00107$:
   125F CB 2C         [ 8] 3444 	sra	h
   1261 CB 1D         [ 8] 3445 	rr	l
   1263 CB 2C         [ 8] 3446 	sra	h
   1265 CB 1D         [ 8] 3447 	rr	l
   1267 55            [ 4] 3448 	ld	d,l
   1268 CB 39         [ 8] 3449 	srl	c
   126A FD E5         [15] 3450 	push	iy
   126C 21 F0 C0      [10] 3451 	ld	hl,#0xC0F0
   126F E5            [11] 3452 	push	hl
   1270 3E 28         [ 7] 3453 	ld	a,#0x28
   1272 F5            [11] 3454 	push	af
   1273 33            [ 6] 3455 	inc	sp
   1274 DD 7E FD      [19] 3456 	ld	a,-3 (ix)
   1277 F5            [11] 3457 	push	af
   1278 33            [ 6] 3458 	inc	sp
   1279 C5            [11] 3459 	push	bc
   127A 33            [ 6] 3460 	inc	sp
   127B D5            [11] 3461 	push	de
   127C 33            [ 6] 3462 	inc	sp
   127D 79            [ 4] 3463 	ld	a,c
   127E F5            [11] 3464 	push	af
   127F 33            [ 6] 3465 	inc	sp
   1280 CDr00r00      [17] 3466 	call	_cpct_etm_drawTileBox2x4
                           3467 ;src/main.c:676: if(!cu.mover){
   1283 3Ar23r05      [13] 3468 	ld	a, (#_cu + 9)
   1286 B7            [ 4] 3469 	or	a, a
   1287 20 05         [12] 3470 	jr	NZ,00103$
                           3471 ;src/main.c:677: cu.lanzado = NO;
   1289 21r20r05      [10] 3472 	ld	hl,#(_cu + 0x0006)
   128C 36 00         [10] 3473 	ld	(hl),#0x00
   128E                    3474 00103$:
   128E DD F9         [10] 3475 	ld	sp, ix
   1290 DD E1         [14] 3476 	pop	ix
   1292 C9            [10] 3477 	ret
                           3478 ;src/main.c:681: void redibujarCuchillo( ) {
                           3479 ;	---------------------------------
                           3480 ; Function redibujarCuchillo
                           3481 ; ---------------------------------
   1293                    3482 _redibujarCuchillo::
                           3483 ;src/main.c:682: borrarCuchillo();
   1293 CDr15r12      [17] 3484 	call	_borrarCuchillo
                           3485 ;src/main.c:683: cu.px = cu.x;
   1296 01r1Cr05      [10] 3486 	ld	bc,#_cu + 2
   1299 3Ar1Ar05      [13] 3487 	ld	a, (#_cu + 0)
   129C 02            [ 7] 3488 	ld	(bc),a
                           3489 ;src/main.c:684: cu.py = cu.y;
   129D 01r1Dr05      [10] 3490 	ld	bc,#_cu + 3
   12A0 3Ar1Br05      [13] 3491 	ld	a, (#_cu + 1)
   12A3 02            [ 7] 3492 	ld	(bc),a
                           3493 ;src/main.c:685: dibujarCuchillo();
   12A4 C3rB1r11      [10] 3494 	jp  _dibujarCuchillo
                           3495 ;src/main.c:688: void lanzarCuchillo(){
                           3496 ;	---------------------------------
                           3497 ; Function lanzarCuchillo
                           3498 ; ---------------------------------
   12A7                    3499 _lanzarCuchillo::
                           3500 ;src/main.c:690: if(!cu.lanzado){
   12A7 3Ar20r05      [13] 3501 	ld	a, (#(_cu + 0x0006) + 0)
   12AA B7            [ 4] 3502 	or	a, a
   12AB C0            [11] 3503 	ret	NZ
                           3504 ;src/main.c:692: if(prota.mira == M_derecha){
   12AC 21r19r05      [10] 3505 	ld	hl, #_prota + 7
   12AF 5E            [ 7] 3506 	ld	e,(hl)
                           3507 ;src/main.c:693: if( *getTilePtr(prota.x + G_HERO_W + G_KNIFEX_0_W + 1, prota.y + G_HERO_H /2) <= 2){
   12B0 01r13r05      [10] 3508 	ld	bc,#_prota + 1
                           3509 ;src/main.c:695: cu.direccion = M_derecha;
                           3510 ;src/main.c:697: cu.y=prota.y + G_HERO_H /2;
                           3511 ;src/main.c:698: cu.sprite=g_knifeX_0;
                           3512 ;src/main.c:699: cu.eje = E_X;
                           3513 ;src/main.c:692: if(prota.mira == M_derecha){
   12B3 7B            [ 4] 3514 	ld	a,e
   12B4 B7            [ 4] 3515 	or	a, a
   12B5 20 41         [12] 3516 	jr	NZ,00118$
                           3517 ;src/main.c:693: if( *getTilePtr(prota.x + G_HERO_W + G_KNIFEX_0_W + 1, prota.y + G_HERO_H /2) <= 2){
   12B7 0A            [ 7] 3518 	ld	a,(bc)
   12B8 C6 0B         [ 7] 3519 	add	a, #0x0B
   12BA 5F            [ 4] 3520 	ld	e,a
   12BB 3Ar12r05      [13] 3521 	ld	a, (#_prota + 0)
   12BE C6 0C         [ 7] 3522 	add	a, #0x0C
   12C0 6F            [ 4] 3523 	ld	l,a
   12C1 C5            [11] 3524 	push	bc
   12C2 7B            [ 4] 3525 	ld	a,e
   12C3 F5            [11] 3526 	push	af
   12C4 33            [ 6] 3527 	inc	sp
   12C5 7D            [ 4] 3528 	ld	a,l
   12C6 F5            [11] 3529 	push	af
   12C7 33            [ 6] 3530 	inc	sp
   12C8 CDr0Br01      [17] 3531 	call	_getTilePtr
   12CB F1            [10] 3532 	pop	af
   12CC C1            [10] 3533 	pop	bc
   12CD 5E            [ 7] 3534 	ld	e,(hl)
   12CE 3E 02         [ 7] 3535 	ld	a,#0x02
   12D0 93            [ 4] 3536 	sub	a, e
   12D1 D8            [11] 3537 	ret	C
                           3538 ;src/main.c:694: cu.lanzado = SI;
   12D2 21r20r05      [10] 3539 	ld	hl,#(_cu + 0x0006)
   12D5 36 01         [10] 3540 	ld	(hl),#0x01
                           3541 ;src/main.c:695: cu.direccion = M_derecha;
   12D7 21r21r05      [10] 3542 	ld	hl,#(_cu + 0x0007)
   12DA 36 00         [10] 3543 	ld	(hl),#0x00
                           3544 ;src/main.c:696: cu.x=prota.x + G_HERO_W;
   12DC 3Ar12r05      [13] 3545 	ld	a, (#_prota + 0)
   12DF C6 07         [ 7] 3546 	add	a, #0x07
   12E1 32r1Ar05      [13] 3547 	ld	(#_cu),a
                           3548 ;src/main.c:697: cu.y=prota.y + G_HERO_H /2;
   12E4 0A            [ 7] 3549 	ld	a,(bc)
   12E5 C6 0B         [ 7] 3550 	add	a, #0x0B
   12E7 32r1Br05      [13] 3551 	ld	(#(_cu + 0x0001)),a
                           3552 ;src/main.c:698: cu.sprite=g_knifeX_0;
   12EA 21r00r00      [10] 3553 	ld	hl,#_g_knifeX_0
   12ED 22r1Er05      [16] 3554 	ld	((_cu + 0x0004)), hl
                           3555 ;src/main.c:699: cu.eje = E_X;
   12F0 21r22r05      [10] 3556 	ld	hl,#(_cu + 0x0008)
   12F3 36 00         [10] 3557 	ld	(hl),#0x00
                           3558 ;src/main.c:700: dibujarCuchillo();
   12F5 C3rB1r11      [10] 3559 	jp  _dibujarCuchillo
   12F8                    3560 00118$:
                           3561 ;src/main.c:703: else if(prota.mira == M_izquierda){
   12F8 7B            [ 4] 3562 	ld	a,e
   12F9 3D            [ 4] 3563 	dec	a
   12FA 20 41         [12] 3564 	jr	NZ,00115$
                           3565 ;src/main.c:704: if( *getTilePtr(prota.x - G_KNIFEX_0_W - 1 - G_KNIFEX_0_W - 1, prota.y + G_HERO_H /2) <= 2){
   12FC 0A            [ 7] 3566 	ld	a,(bc)
   12FD C6 0B         [ 7] 3567 	add	a, #0x0B
   12FF 5F            [ 4] 3568 	ld	e,a
   1300 3Ar12r05      [13] 3569 	ld	a, (#_prota + 0)
   1303 C6 F6         [ 7] 3570 	add	a,#0xF6
   1305 6F            [ 4] 3571 	ld	l,a
   1306 C5            [11] 3572 	push	bc
   1307 7B            [ 4] 3573 	ld	a,e
   1308 F5            [11] 3574 	push	af
   1309 33            [ 6] 3575 	inc	sp
   130A 7D            [ 4] 3576 	ld	a,l
   130B F5            [11] 3577 	push	af
   130C 33            [ 6] 3578 	inc	sp
   130D CDr0Br01      [17] 3579 	call	_getTilePtr
   1310 F1            [10] 3580 	pop	af
   1311 C1            [10] 3581 	pop	bc
   1312 5E            [ 7] 3582 	ld	e,(hl)
   1313 3E 02         [ 7] 3583 	ld	a,#0x02
   1315 93            [ 4] 3584 	sub	a, e
   1316 D8            [11] 3585 	ret	C
                           3586 ;src/main.c:705: cu.lanzado = SI;
   1317 21r20r05      [10] 3587 	ld	hl,#(_cu + 0x0006)
   131A 36 01         [10] 3588 	ld	(hl),#0x01
                           3589 ;src/main.c:706: cu.direccion = M_izquierda;
   131C 21r21r05      [10] 3590 	ld	hl,#(_cu + 0x0007)
   131F 36 01         [10] 3591 	ld	(hl),#0x01
                           3592 ;src/main.c:707: cu.x = prota.x - G_KNIFEX_0_W;
   1321 3Ar12r05      [13] 3593 	ld	a, (#_prota + 0)
   1324 C6 FC         [ 7] 3594 	add	a,#0xFC
   1326 32r1Ar05      [13] 3595 	ld	(#_cu),a
                           3596 ;src/main.c:708: cu.y = prota.y + G_HERO_H /2;
   1329 0A            [ 7] 3597 	ld	a,(bc)
   132A C6 0B         [ 7] 3598 	add	a, #0x0B
   132C 32r1Br05      [13] 3599 	ld	(#(_cu + 0x0001)),a
                           3600 ;src/main.c:709: cu.sprite = g_knifeX_1;
   132F 21r00r00      [10] 3601 	ld	hl,#_g_knifeX_1
   1332 22r1Er05      [16] 3602 	ld	((_cu + 0x0004)), hl
                           3603 ;src/main.c:710: cu.eje = E_X;
   1335 21r22r05      [10] 3604 	ld	hl,#(_cu + 0x0008)
   1338 36 00         [10] 3605 	ld	(hl),#0x00
                           3606 ;src/main.c:711: dibujarCuchillo();
   133A C3rB1r11      [10] 3607 	jp  _dibujarCuchillo
   133D                    3608 00115$:
                           3609 ;src/main.c:714: else if(prota.mira == M_abajo){
   133D 7B            [ 4] 3610 	ld	a,e
   133E D6 03         [ 7] 3611 	sub	a, #0x03
   1340 20 41         [12] 3612 	jr	NZ,00112$
                           3613 ;src/main.c:716: if( *getTilePtr(prota.x + G_HERO_W / 2, prota.y + G_HERO_H + G_KNIFEY_0_H + 1) <= 2){
   1342 0A            [ 7] 3614 	ld	a,(bc)
   1343 C6 1F         [ 7] 3615 	add	a, #0x1F
   1345 5F            [ 4] 3616 	ld	e,a
   1346 3Ar12r05      [13] 3617 	ld	a, (#_prota + 0)
   1349 57            [ 4] 3618 	ld	d,a
   134A 14            [ 4] 3619 	inc	d
   134B 14            [ 4] 3620 	inc	d
   134C 14            [ 4] 3621 	inc	d
   134D C5            [11] 3622 	push	bc
   134E 7B            [ 4] 3623 	ld	a,e
   134F F5            [11] 3624 	push	af
   1350 33            [ 6] 3625 	inc	sp
   1351 D5            [11] 3626 	push	de
   1352 33            [ 6] 3627 	inc	sp
   1353 CDr0Br01      [17] 3628 	call	_getTilePtr
   1356 F1            [10] 3629 	pop	af
   1357 C1            [10] 3630 	pop	bc
   1358 5E            [ 7] 3631 	ld	e,(hl)
   1359 3E 02         [ 7] 3632 	ld	a,#0x02
   135B 93            [ 4] 3633 	sub	a, e
   135C D8            [11] 3634 	ret	C
                           3635 ;src/main.c:717: cu.lanzado = SI;
   135D 21r20r05      [10] 3636 	ld	hl,#(_cu + 0x0006)
   1360 36 01         [10] 3637 	ld	(hl),#0x01
                           3638 ;src/main.c:718: cu.direccion = M_abajo;
   1362 21r21r05      [10] 3639 	ld	hl,#(_cu + 0x0007)
   1365 36 03         [10] 3640 	ld	(hl),#0x03
                           3641 ;src/main.c:719: cu.x = prota.x + G_HERO_W / 2;
   1367 3Ar12r05      [13] 3642 	ld	a, (#_prota + 0)
   136A C6 03         [ 7] 3643 	add	a, #0x03
   136C 32r1Ar05      [13] 3644 	ld	(#_cu),a
                           3645 ;src/main.c:720: cu.y = prota.y + G_HERO_H;
   136F 0A            [ 7] 3646 	ld	a,(bc)
   1370 C6 16         [ 7] 3647 	add	a, #0x16
   1372 32r1Br05      [13] 3648 	ld	(#(_cu + 0x0001)),a
                           3649 ;src/main.c:721: cu.sprite = g_knifeY_0;
   1375 21r00r00      [10] 3650 	ld	hl,#_g_knifeY_0
   1378 22r1Er05      [16] 3651 	ld	((_cu + 0x0004)), hl
                           3652 ;src/main.c:722: cu.eje = E_Y;
   137B 21r22r05      [10] 3653 	ld	hl,#(_cu + 0x0008)
   137E 36 01         [10] 3654 	ld	(hl),#0x01
                           3655 ;src/main.c:723: dibujarCuchillo();
   1380 C3rB1r11      [10] 3656 	jp  _dibujarCuchillo
   1383                    3657 00112$:
                           3658 ;src/main.c:726: else if(prota.mira == M_arriba){
   1383 7B            [ 4] 3659 	ld	a,e
   1384 D6 02         [ 7] 3660 	sub	a, #0x02
   1386 C0            [11] 3661 	ret	NZ
                           3662 ;src/main.c:727: if( *getTilePtr(prota.x + G_HERO_W / 2, prota.y - G_KNIFEY_0_H - 1) <= 2){
   1387 0A            [ 7] 3663 	ld	a,(bc)
   1388 C6 F7         [ 7] 3664 	add	a,#0xF7
   138A 57            [ 4] 3665 	ld	d,a
   138B 3Ar12r05      [13] 3666 	ld	a, (#_prota + 0)
   138E C6 03         [ 7] 3667 	add	a, #0x03
   1390 C5            [11] 3668 	push	bc
   1391 D5            [11] 3669 	push	de
   1392 33            [ 6] 3670 	inc	sp
   1393 F5            [11] 3671 	push	af
   1394 33            [ 6] 3672 	inc	sp
   1395 CDr0Br01      [17] 3673 	call	_getTilePtr
   1398 F1            [10] 3674 	pop	af
   1399 C1            [10] 3675 	pop	bc
   139A 5E            [ 7] 3676 	ld	e,(hl)
   139B 3E 02         [ 7] 3677 	ld	a,#0x02
   139D 93            [ 4] 3678 	sub	a, e
   139E D8            [11] 3679 	ret	C
                           3680 ;src/main.c:728: cu.lanzado = SI;
   139F 21r20r05      [10] 3681 	ld	hl,#(_cu + 0x0006)
   13A2 36 01         [10] 3682 	ld	(hl),#0x01
                           3683 ;src/main.c:729: cu.direccion = M_arriba;
   13A4 21r21r05      [10] 3684 	ld	hl,#(_cu + 0x0007)
   13A7 36 02         [10] 3685 	ld	(hl),#0x02
                           3686 ;src/main.c:730: cu.x = prota.x + G_HERO_W / 2;
   13A9 3Ar12r05      [13] 3687 	ld	a, (#_prota + 0)
   13AC C6 03         [ 7] 3688 	add	a, #0x03
   13AE 32r1Ar05      [13] 3689 	ld	(#_cu),a
                           3690 ;src/main.c:731: cu.y = prota.y;
   13B1 0A            [ 7] 3691 	ld	a,(bc)
   13B2 32r1Br05      [13] 3692 	ld	(#(_cu + 0x0001)),a
                           3693 ;src/main.c:732: cu.sprite = g_knifeY_1;
   13B5 21r00r00      [10] 3694 	ld	hl,#_g_knifeY_1
   13B8 22r1Er05      [16] 3695 	ld	((_cu + 0x0004)), hl
                           3696 ;src/main.c:733: cu.eje = E_Y;
   13BB 21r22r05      [10] 3697 	ld	hl,#(_cu + 0x0008)
   13BE 36 01         [10] 3698 	ld	(hl),#0x01
                           3699 ;src/main.c:734: dibujarCuchillo();
   13C0 C3rB1r11      [10] 3700 	jp  _dibujarCuchillo
                           3701 ;src/main.c:740: void comprobarTeclado() {
                           3702 ;	---------------------------------
                           3703 ; Function comprobarTeclado
                           3704 ; ---------------------------------
   13C3                    3705 _comprobarTeclado::
                           3706 ;src/main.c:741: cpct_scanKeyboard_if();
   13C3 CDr00r00      [17] 3707 	call	_cpct_scanKeyboard_if
                           3708 ;src/main.c:743: if (cpct_isAnyKeyPressed()) {
   13C6 CDr00r00      [17] 3709 	call	_cpct_isAnyKeyPressed
   13C9 7D            [ 4] 3710 	ld	a,l
   13CA B7            [ 4] 3711 	or	a, a
   13CB C8            [11] 3712 	ret	Z
                           3713 ;src/main.c:744: if (cpct_isKeyPressed(Key_CursorLeft))
   13CC 21 01 01      [10] 3714 	ld	hl,#0x0101
   13CF CDr00r00      [17] 3715 	call	_cpct_isKeyPressed
   13D2 7D            [ 4] 3716 	ld	a,l
   13D3 B7            [ 4] 3717 	or	a, a
                           3718 ;src/main.c:745: moverIzquierda();
   13D4 C2rFEr10      [10] 3719 	jp	NZ,_moverIzquierda
                           3720 ;src/main.c:746: else if (cpct_isKeyPressed(Key_CursorRight))
   13D7 21 00 02      [10] 3721 	ld	hl,#0x0200
   13DA CDr00r00      [17] 3722 	call	_cpct_isKeyPressed
   13DD 7D            [ 4] 3723 	ld	a,l
   13DE B7            [ 4] 3724 	or	a, a
                           3725 ;src/main.c:747: moverDerecha();
   13DF C2r23r11      [10] 3726 	jp	NZ,_moverDerecha
                           3727 ;src/main.c:748: else if (cpct_isKeyPressed(Key_CursorUp))
   13E2 21 00 01      [10] 3728 	ld	hl,#0x0100
   13E5 CDr00r00      [17] 3729 	call	_cpct_isKeyPressed
   13E8 7D            [ 4] 3730 	ld	a,l
   13E9 B7            [ 4] 3731 	or	a, a
                           3732 ;src/main.c:749: moverArriba();
   13EA C2r69r11      [10] 3733 	jp	NZ,_moverArriba
                           3734 ;src/main.c:750: else if (cpct_isKeyPressed(Key_CursorDown))
   13ED 21 00 04      [10] 3735 	ld	hl,#0x0400
   13F0 CDr00r00      [17] 3736 	call	_cpct_isKeyPressed
   13F3 7D            [ 4] 3737 	ld	a,l
   13F4 B7            [ 4] 3738 	or	a, a
                           3739 ;src/main.c:751: moverAbajo();
   13F5 C2r8Dr11      [10] 3740 	jp	NZ,_moverAbajo
                           3741 ;src/main.c:752: else if (cpct_isKeyPressed(Key_Space))
   13F8 21 05 80      [10] 3742 	ld	hl,#0x8005
   13FB CDr00r00      [17] 3743 	call	_cpct_isKeyPressed
   13FE 7D            [ 4] 3744 	ld	a,l
   13FF B7            [ 4] 3745 	or	a, a
   1400 C8            [11] 3746 	ret	Z
                           3747 ;src/main.c:753: lanzarCuchillo();
   1401 C3rA7r12      [10] 3748 	jp  _lanzarCuchillo
                           3749 ;src/main.c:757: u8 checkKnifeCollision(int direction, u8 xoff, u8 yoff){
                           3750 ;	---------------------------------
                           3751 ; Function checkKnifeCollision
                           3752 ; ---------------------------------
   1404                    3753 _checkKnifeCollision::
                           3754 ;src/main.c:759: return *getTilePtr(cu.x + xoff, cu.y + yoff) <= 2;
   1404 3Ar1Br05      [13] 3755 	ld	a,(#_cu + 1)
   1407 21 05 00      [10] 3756 	ld	hl,#5
   140A 39            [11] 3757 	add	hl,sp
   140B 86            [ 7] 3758 	add	a, (hl)
   140C 47            [ 4] 3759 	ld	b,a
   140D 3Ar1Ar05      [13] 3760 	ld	a,(#_cu + 0)
   1410 21 04 00      [10] 3761 	ld	hl,#4
   1413 39            [11] 3762 	add	hl,sp
   1414 86            [ 7] 3763 	add	a, (hl)
   1415 4F            [ 4] 3764 	ld	c,a
   1416 C5            [11] 3765 	push	bc
   1417 CDr0Br01      [17] 3766 	call	_getTilePtr
   141A F1            [10] 3767 	pop	af
   141B 4E            [ 7] 3768 	ld	c,(hl)
   141C 3E 02         [ 7] 3769 	ld	a,#0x02
   141E 91            [ 4] 3770 	sub	a, c
   141F 3E 00         [ 7] 3771 	ld	a,#0x00
   1421 17            [ 4] 3772 	rla
   1422 EE 01         [ 7] 3773 	xor	a, #0x01
   1424 6F            [ 4] 3774 	ld	l, a
   1425 C9            [10] 3775 	ret
                           3776 ;src/main.c:762: void moverCuchillo(){
                           3777 ;	---------------------------------
                           3778 ; Function moverCuchillo
                           3779 ; ---------------------------------
   1426                    3780 _moverCuchillo::
                           3781 ;src/main.c:763: if(cu.lanzado){
   1426 01r1Ar05      [10] 3782 	ld	bc,#_cu+0
   1429 3Ar20r05      [13] 3783 	ld	a, (#_cu + 6)
   142C B7            [ 4] 3784 	or	a, a
   142D C8            [11] 3785 	ret	Z
                           3786 ;src/main.c:764: cu.mover = SI;
   142E 21 09 00      [10] 3787 	ld	hl,#0x0009
   1431 09            [11] 3788 	add	hl,bc
   1432 EB            [ 4] 3789 	ex	de,hl
   1433 3E 01         [ 7] 3790 	ld	a,#0x01
   1435 12            [ 7] 3791 	ld	(de),a
                           3792 ;src/main.c:765: if(cu.direccion == M_derecha){
   1436 21r21r05      [10] 3793 	ld	hl, #_cu + 7
   1439 6E            [ 7] 3794 	ld	l,(hl)
   143A 7D            [ 4] 3795 	ld	a,l
   143B B7            [ 4] 3796 	or	a, a
   143C 20 1E         [12] 3797 	jr	NZ,00122$
                           3798 ;src/main.c:767: if(checkKnifeCollision(M_derecha, G_KNIFEX_0_W + 1, 0)){
   143E C5            [11] 3799 	push	bc
   143F D5            [11] 3800 	push	de
   1440 21 05 00      [10] 3801 	ld	hl,#0x0005
   1443 E5            [11] 3802 	push	hl
   1444 2E 00         [ 7] 3803 	ld	l, #0x00
   1446 E5            [11] 3804 	push	hl
   1447 CDr04r14      [17] 3805 	call	_checkKnifeCollision
   144A F1            [10] 3806 	pop	af
   144B F1            [10] 3807 	pop	af
   144C D1            [10] 3808 	pop	de
   144D C1            [10] 3809 	pop	bc
   144E 7D            [ 4] 3810 	ld	a,l
   144F B7            [ 4] 3811 	or	a, a
   1450 28 07         [12] 3812 	jr	Z,00102$
                           3813 ;src/main.c:768: cu.mover = SI;
   1452 3E 01         [ 7] 3814 	ld	a,#0x01
   1454 12            [ 7] 3815 	ld	(de),a
                           3816 ;src/main.c:769: cu.x++;
   1455 0A            [ 7] 3817 	ld	a,(bc)
   1456 3C            [ 4] 3818 	inc	a
   1457 02            [ 7] 3819 	ld	(bc),a
   1458 C9            [10] 3820 	ret
   1459                    3821 00102$:
                           3822 ;src/main.c:772: cu.mover=NO;
   1459 AF            [ 4] 3823 	xor	a, a
   145A 12            [ 7] 3824 	ld	(de),a
   145B C9            [10] 3825 	ret
   145C                    3826 00122$:
                           3827 ;src/main.c:775: else if(cu.direccion == M_izquierda){
   145C 7D            [ 4] 3828 	ld	a,l
   145D 3D            [ 4] 3829 	dec	a
   145E 20 1F         [12] 3830 	jr	NZ,00119$
                           3831 ;src/main.c:776: if(checkKnifeCollision(M_derecha, -1, 0)){
   1460 C5            [11] 3832 	push	bc
   1461 D5            [11] 3833 	push	de
   1462 21 FF 00      [10] 3834 	ld	hl,#0x00FF
   1465 E5            [11] 3835 	push	hl
   1466 2E 00         [ 7] 3836 	ld	l, #0x00
   1468 E5            [11] 3837 	push	hl
   1469 CDr04r14      [17] 3838 	call	_checkKnifeCollision
   146C F1            [10] 3839 	pop	af
   146D F1            [10] 3840 	pop	af
   146E D1            [10] 3841 	pop	de
   146F C1            [10] 3842 	pop	bc
   1470 7D            [ 4] 3843 	ld	a,l
   1471 B7            [ 4] 3844 	or	a, a
   1472 28 08         [12] 3845 	jr	Z,00105$
                           3846 ;src/main.c:777: cu.mover = SI;
   1474 3E 01         [ 7] 3847 	ld	a,#0x01
   1476 12            [ 7] 3848 	ld	(de),a
                           3849 ;src/main.c:778: cu.x--;
   1477 0A            [ 7] 3850 	ld	a,(bc)
   1478 C6 FF         [ 7] 3851 	add	a,#0xFF
   147A 02            [ 7] 3852 	ld	(bc),a
   147B C9            [10] 3853 	ret
   147C                    3854 00105$:
                           3855 ;src/main.c:780: cu.mover=NO;
   147C AF            [ 4] 3856 	xor	a, a
   147D 12            [ 7] 3857 	ld	(de),a
   147E C9            [10] 3858 	ret
   147F                    3859 00119$:
                           3860 ;src/main.c:786: cu.y--;
   147F 03            [ 6] 3861 	inc	bc
                           3862 ;src/main.c:783: else if(cu.direccion == M_arriba){
   1480 7D            [ 4] 3863 	ld	a,l
   1481 D6 02         [ 7] 3864 	sub	a, #0x02
   1483 20 22         [12] 3865 	jr	NZ,00116$
                           3866 ;src/main.c:784: if(checkKnifeCollision(M_derecha, 0, -2)){
   1485 C5            [11] 3867 	push	bc
   1486 D5            [11] 3868 	push	de
   1487 21 00 FE      [10] 3869 	ld	hl,#0xFE00
   148A E5            [11] 3870 	push	hl
   148B 26 00         [ 7] 3871 	ld	h, #0x00
   148D E5            [11] 3872 	push	hl
   148E CDr04r14      [17] 3873 	call	_checkKnifeCollision
   1491 F1            [10] 3874 	pop	af
   1492 F1            [10] 3875 	pop	af
   1493 D1            [10] 3876 	pop	de
   1494 C1            [10] 3877 	pop	bc
   1495 7D            [ 4] 3878 	ld	a,l
   1496 B7            [ 4] 3879 	or	a, a
   1497 28 0B         [12] 3880 	jr	Z,00108$
                           3881 ;src/main.c:785: cu.mover = SI;
   1499 3E 01         [ 7] 3882 	ld	a,#0x01
   149B 12            [ 7] 3883 	ld	(de),a
                           3884 ;src/main.c:786: cu.y--;
   149C 0A            [ 7] 3885 	ld	a,(bc)
   149D C6 FF         [ 7] 3886 	add	a,#0xFF
   149F 02            [ 7] 3887 	ld	(bc),a
                           3888 ;src/main.c:787: cu.y--;
   14A0 C6 FF         [ 7] 3889 	add	a,#0xFF
   14A2 02            [ 7] 3890 	ld	(bc),a
   14A3 C9            [10] 3891 	ret
   14A4                    3892 00108$:
                           3893 ;src/main.c:790: cu.mover=NO;
   14A4 AF            [ 4] 3894 	xor	a, a
   14A5 12            [ 7] 3895 	ld	(de),a
   14A6 C9            [10] 3896 	ret
   14A7                    3897 00116$:
                           3898 ;src/main.c:793: else if(cu.direccion == M_abajo){
   14A7 7D            [ 4] 3899 	ld	a,l
   14A8 D6 03         [ 7] 3900 	sub	a, #0x03
   14AA C0            [11] 3901 	ret	NZ
                           3902 ;src/main.c:794: if(checkKnifeCollision(M_derecha, 0, G_KNIFEY_0_H + 2)){
   14AB C5            [11] 3903 	push	bc
   14AC D5            [11] 3904 	push	de
   14AD 21 00 0A      [10] 3905 	ld	hl,#0x0A00
   14B0 E5            [11] 3906 	push	hl
   14B1 26 00         [ 7] 3907 	ld	h, #0x00
   14B3 E5            [11] 3908 	push	hl
   14B4 CDr04r14      [17] 3909 	call	_checkKnifeCollision
   14B7 F1            [10] 3910 	pop	af
   14B8 F1            [10] 3911 	pop	af
   14B9 D1            [10] 3912 	pop	de
   14BA C1            [10] 3913 	pop	bc
   14BB 7D            [ 4] 3914 	ld	a,l
   14BC B7            [ 4] 3915 	or	a, a
   14BD 28 09         [12] 3916 	jr	Z,00111$
                           3917 ;src/main.c:795: cu.mover = SI;
   14BF 3E 01         [ 7] 3918 	ld	a,#0x01
   14C1 12            [ 7] 3919 	ld	(de),a
                           3920 ;src/main.c:796: cu.y++;
   14C2 0A            [ 7] 3921 	ld	a,(bc)
   14C3 3C            [ 4] 3922 	inc	a
   14C4 02            [ 7] 3923 	ld	(bc),a
                           3924 ;src/main.c:797: cu.y++;
   14C5 3C            [ 4] 3925 	inc	a
   14C6 02            [ 7] 3926 	ld	(bc),a
   14C7 C9            [10] 3927 	ret
   14C8                    3928 00111$:
                           3929 ;src/main.c:800: cu.mover=NO;
   14C8 AF            [ 4] 3930 	xor	a, a
   14C9 12            [ 7] 3931 	ld	(de),a
   14CA C9            [10] 3932 	ret
                           3933 ;src/main.c:806: void barraPuntuacionInicial(){
                           3934 ;	---------------------------------
                           3935 ; Function barraPuntuacionInicial
                           3936 ; ---------------------------------
   14CB                    3937 _barraPuntuacionInicial::
                           3938 ;src/main.c:811: memptr = cpct_getScreenPtr(CPCT_VMEM_START, 0, 2); //
   14CB 21 00 02      [10] 3939 	ld	hl,#0x0200
   14CE E5            [11] 3940 	push	hl
   14CF 26 C0         [ 7] 3941 	ld	h, #0xC0
   14D1 E5            [11] 3942 	push	hl
   14D2 CDr00r00      [17] 3943 	call	_cpct_getScreenPtr
   14D5 4D            [ 4] 3944 	ld	c,l
   14D6 44            [ 4] 3945 	ld	b,h
                           3946 ;src/main.c:812: cpct_drawStringM0("SCORE", memptr, 1, 0);
   14D7 21 01 00      [10] 3947 	ld	hl,#0x0001
   14DA E5            [11] 3948 	push	hl
   14DB C5            [11] 3949 	push	bc
   14DC 21r73r15      [10] 3950 	ld	hl,#___str_1
   14DF E5            [11] 3951 	push	hl
   14E0 CDr00r00      [17] 3952 	call	_cpct_drawStringM0
   14E3 21 06 00      [10] 3953 	ld	hl,#6
   14E6 39            [11] 3954 	add	hl,sp
   14E7 F9            [ 6] 3955 	ld	sp,hl
                           3956 ;src/main.c:813: memptr = cpct_getScreenPtr(CPCT_VMEM_START, 0, 14); // puntuación inicial
   14E8 21 00 0E      [10] 3957 	ld	hl,#0x0E00
   14EB E5            [11] 3958 	push	hl
   14EC 26 C0         [ 7] 3959 	ld	h, #0xC0
   14EE E5            [11] 3960 	push	hl
   14EF CDr00r00      [17] 3961 	call	_cpct_getScreenPtr
   14F2 4D            [ 4] 3962 	ld	c,l
   14F3 44            [ 4] 3963 	ld	b,h
                           3964 ;src/main.c:814: cpct_drawStringM0("00000", memptr, 15, 0);
   14F4 21 0F 00      [10] 3965 	ld	hl,#0x000F
   14F7 E5            [11] 3966 	push	hl
   14F8 C5            [11] 3967 	push	bc
   14F9 21r79r15      [10] 3968 	ld	hl,#___str_2
   14FC E5            [11] 3969 	push	hl
   14FD CDr00r00      [17] 3970 	call	_cpct_drawStringM0
   1500 21 06 00      [10] 3971 	ld	hl,#6
   1503 39            [11] 3972 	add	hl,sp
   1504 F9            [ 6] 3973 	ld	sp,hl
                           3974 ;src/main.c:817: memptr = cpct_getScreenPtr(CPCT_VMEM_START, 26, 14);
   1505 21 1A 0E      [10] 3975 	ld	hl,#0x0E1A
   1508 E5            [11] 3976 	push	hl
   1509 21 00 C0      [10] 3977 	ld	hl,#0xC000
   150C E5            [11] 3978 	push	hl
   150D CDr00r00      [17] 3979 	call	_cpct_getScreenPtr
   1510 4D            [ 4] 3980 	ld	c,l
   1511 44            [ 4] 3981 	ld	b,h
                           3982 ;src/main.c:818: cpct_drawStringM0("ROBOBIT", memptr, 3, 0);
   1512 21 03 00      [10] 3983 	ld	hl,#0x0003
   1515 E5            [11] 3984 	push	hl
   1516 C5            [11] 3985 	push	bc
   1517 21r7Fr15      [10] 3986 	ld	hl,#___str_3
   151A E5            [11] 3987 	push	hl
   151B CDr00r00      [17] 3988 	call	_cpct_drawStringM0
   151E 21 06 00      [10] 3989 	ld	hl,#6
   1521 39            [11] 3990 	add	hl,sp
   1522 F9            [ 6] 3991 	ld	sp,hl
                           3992 ;src/main.c:820: memptr = cpct_getScreenPtr(CPCT_VMEM_START, 60, 2); //
   1523 21 3C 02      [10] 3993 	ld	hl,#0x023C
   1526 E5            [11] 3994 	push	hl
   1527 21 00 C0      [10] 3995 	ld	hl,#0xC000
   152A E5            [11] 3996 	push	hl
   152B CDr00r00      [17] 3997 	call	_cpct_getScreenPtr
   152E 4D            [ 4] 3998 	ld	c,l
   152F 44            [ 4] 3999 	ld	b,h
                           4000 ;src/main.c:821: cpct_drawStringM0("LIVES", memptr, 1, 0);
   1530 21 01 00      [10] 4001 	ld	hl,#0x0001
   1533 E5            [11] 4002 	push	hl
   1534 C5            [11] 4003 	push	bc
   1535 21r87r15      [10] 4004 	ld	hl,#___str_4
   1538 E5            [11] 4005 	push	hl
   1539 CDr00r00      [17] 4006 	call	_cpct_drawStringM0
   153C 21 06 00      [10] 4007 	ld	hl,#6
   153F 39            [11] 4008 	add	hl,sp
   1540 F9            [ 6] 4009 	ld	sp,hl
                           4010 ;src/main.c:823: for(i=0; i<5; i++){
   1541 01 00 00      [10] 4011 	ld	bc,#0x0000
   1544                    4012 00102$:
                           4013 ;src/main.c:824: memptr = cpct_getScreenPtr(CPCT_VMEM_START, 60 + i*4, 14); // dibuja 5 corazones
   1544 79            [ 4] 4014 	ld	a,c
   1545 87            [ 4] 4015 	add	a, a
   1546 87            [ 4] 4016 	add	a, a
   1547 C6 3C         [ 7] 4017 	add	a, #0x3C
   1549 57            [ 4] 4018 	ld	d,a
   154A C5            [11] 4019 	push	bc
   154B 3E 0E         [ 7] 4020 	ld	a,#0x0E
   154D F5            [11] 4021 	push	af
   154E 33            [ 6] 4022 	inc	sp
   154F D5            [11] 4023 	push	de
   1550 33            [ 6] 4024 	inc	sp
   1551 21 00 C0      [10] 4025 	ld	hl,#0xC000
   1554 E5            [11] 4026 	push	hl
   1555 CDr00r00      [17] 4027 	call	_cpct_getScreenPtr
   1558 EB            [ 4] 4028 	ex	de,hl
   1559 21 03 06      [10] 4029 	ld	hl,#0x0603
   155C E5            [11] 4030 	push	hl
   155D D5            [11] 4031 	push	de
   155E 21r00r00      [10] 4032 	ld	hl,#_g_heart
   1561 E5            [11] 4033 	push	hl
   1562 CDr00r00      [17] 4034 	call	_cpct_drawSprite
   1565 C1            [10] 4035 	pop	bc
                           4036 ;src/main.c:823: for(i=0; i<5; i++){
   1566 03            [ 6] 4037 	inc	bc
   1567 79            [ 4] 4038 	ld	a,c
   1568 D6 05         [ 7] 4039 	sub	a, #0x05
   156A 78            [ 4] 4040 	ld	a,b
   156B 17            [ 4] 4041 	rla
   156C 3F            [ 4] 4042 	ccf
   156D 1F            [ 4] 4043 	rra
   156E DE 80         [ 7] 4044 	sbc	a, #0x80
   1570 38 D2         [12] 4045 	jr	C,00102$
   1572 C9            [10] 4046 	ret
   1573                    4047 ___str_1:
   1573 53 43 4F 52 45     4048 	.ascii "SCORE"
   1578 00                 4049 	.db 0x00
   1579                    4050 ___str_2:
   1579 30 30 30 30 30     4051 	.ascii "00000"
   157E 00                 4052 	.db 0x00
   157F                    4053 ___str_3:
   157F 52 4F 42 4F 42 49  4054 	.ascii "ROBOBIT"
        54
   1586 00                 4055 	.db 0x00
   1587                    4056 ___str_4:
   1587 4C 49 56 45 53     4057 	.ascii "LIVES"
   158C 00                 4058 	.db 0x00
                           4059 ;src/main.c:829: void borrarPantallaArriba(u8 x, u8 y, u8 ancho, u8 alto){
                           4060 ;	---------------------------------
                           4061 ; Function borrarPantallaArriba
                           4062 ; ---------------------------------
   158D                    4063 _borrarPantallaArriba::
   158D DD E5         [15] 4064 	push	ix
   158F DD 21 00 00   [14] 4065 	ld	ix,#0
   1593 DD 39         [15] 4066 	add	ix,sp
                           4067 ;src/main.c:832: memptr = cpct_getScreenPtr(CPCT_VMEM_START, x, y); // posición para borrar la mitad derecha
   1595 DD 66 05      [19] 4068 	ld	h,5 (ix)
   1598 DD 6E 04      [19] 4069 	ld	l,4 (ix)
   159B E5            [11] 4070 	push	hl
   159C 21 00 C0      [10] 4071 	ld	hl,#0xC000
   159F E5            [11] 4072 	push	hl
   15A0 CDr00r00      [17] 4073 	call	_cpct_getScreenPtr
   15A3 4D            [ 4] 4074 	ld	c,l
   15A4 44            [ 4] 4075 	ld	b,h
                           4076 ;src/main.c:833: cpct_drawSolidBox(memptr, 0, ancho, alto);  //borra la mitad derecha
   15A5 DD 66 07      [19] 4077 	ld	h,7 (ix)
   15A8 DD 6E 06      [19] 4078 	ld	l,6 (ix)
   15AB E5            [11] 4079 	push	hl
   15AC AF            [ 4] 4080 	xor	a, a
   15AD F5            [11] 4081 	push	af
   15AE 33            [ 6] 4082 	inc	sp
   15AF C5            [11] 4083 	push	bc
   15B0 CDr00r00      [17] 4084 	call	_cpct_drawSolidBox
   15B3 F1            [10] 4085 	pop	af
   15B4 F1            [10] 4086 	pop	af
   15B5 33            [ 6] 4087 	inc	sp
                           4088 ;src/main.c:834: memptr = cpct_getScreenPtr(CPCT_VMEM_START, x + 40, y); // posición para borrar la mitad izquierda
   15B6 DD 7E 04      [19] 4089 	ld	a,4 (ix)
   15B9 C6 28         [ 7] 4090 	add	a, #0x28
   15BB 47            [ 4] 4091 	ld	b,a
   15BC DD 7E 05      [19] 4092 	ld	a,5 (ix)
   15BF F5            [11] 4093 	push	af
   15C0 33            [ 6] 4094 	inc	sp
   15C1 C5            [11] 4095 	push	bc
   15C2 33            [ 6] 4096 	inc	sp
   15C3 21 00 C0      [10] 4097 	ld	hl,#0xC000
   15C6 E5            [11] 4098 	push	hl
   15C7 CDr00r00      [17] 4099 	call	_cpct_getScreenPtr
   15CA 4D            [ 4] 4100 	ld	c,l
   15CB 44            [ 4] 4101 	ld	b,h
                           4102 ;src/main.c:835: cpct_drawSolidBox(memptr, 0, ancho, alto);  //borra la mitad izquierda
   15CC DD 66 07      [19] 4103 	ld	h,7 (ix)
   15CF DD 6E 06      [19] 4104 	ld	l,6 (ix)
   15D2 E5            [11] 4105 	push	hl
   15D3 AF            [ 4] 4106 	xor	a, a
   15D4 F5            [11] 4107 	push	af
   15D5 33            [ 6] 4108 	inc	sp
   15D6 C5            [11] 4109 	push	bc
   15D7 CDr00r00      [17] 4110 	call	_cpct_drawSolidBox
   15DA F1            [10] 4111 	pop	af
   15DB F1            [10] 4112 	pop	af
   15DC 33            [ 6] 4113 	inc	sp
   15DD DD E1         [14] 4114 	pop	ix
   15DF C9            [10] 4115 	ret
                           4116 ;src/main.c:838: void menuInicio(){
                           4117 ;	---------------------------------
                           4118 ; Function menuInicio
                           4119 ; ---------------------------------
   15E0                    4120 _menuInicio::
                           4121 ;src/main.c:842: cpct_clearScreen(0);
   15E0 21 00 40      [10] 4122 	ld	hl,#0x4000
   15E3 E5            [11] 4123 	push	hl
   15E4 AF            [ 4] 4124 	xor	a, a
   15E5 F5            [11] 4125 	push	af
   15E6 33            [ 6] 4126 	inc	sp
   15E7 26 C0         [ 7] 4127 	ld	h, #0xC0
   15E9 E5            [11] 4128 	push	hl
   15EA CDr00r00      [17] 4129 	call	_cpct_memset
                           4130 ;src/main.c:844: memptr = cpct_getScreenPtr(CPCT_VMEM_START, 26, 15); // centrado en horizontal y arriba en vertical
   15ED 21 1A 0F      [10] 4131 	ld	hl,#0x0F1A
   15F0 E5            [11] 4132 	push	hl
   15F1 21 00 C0      [10] 4133 	ld	hl,#0xC000
   15F4 E5            [11] 4134 	push	hl
   15F5 CDr00r00      [17] 4135 	call	_cpct_getScreenPtr
   15F8 4D            [ 4] 4136 	ld	c,l
   15F9 44            [ 4] 4137 	ld	b,h
                           4138 ;src/main.c:845: cpct_drawStringM0("ROBOBIT", memptr, 4, 0);
   15FA 21 04 00      [10] 4139 	ld	hl,#0x0004
   15FD E5            [11] 4140 	push	hl
   15FE C5            [11] 4141 	push	bc
   15FF 21r93r16      [10] 4142 	ld	hl,#___str_5
   1602 E5            [11] 4143 	push	hl
   1603 CDr00r00      [17] 4144 	call	_cpct_drawStringM0
   1606 21 06 00      [10] 4145 	ld	hl,#6
   1609 39            [11] 4146 	add	hl,sp
   160A F9            [ 6] 4147 	ld	sp,hl
                           4148 ;src/main.c:847: cpct_drawSprite(g_text_0, cpctm_screenPtr(CPCT_VMEM_START,  0, 30), G_TEXT_0_W, G_TEXT_0_H); // imagen
   160B 21 28 6E      [10] 4149 	ld	hl,#0x6E28
   160E E5            [11] 4150 	push	hl
   160F 21 F0 F0      [10] 4151 	ld	hl,#0xF0F0
   1612 E5            [11] 4152 	push	hl
   1613 21r00r00      [10] 4153 	ld	hl,#_g_text_0
   1616 E5            [11] 4154 	push	hl
   1617 CDr00r00      [17] 4155 	call	_cpct_drawSprite
                           4156 ;src/main.c:848: cpct_drawSprite(g_text_1, cpctm_screenPtr(CPCT_VMEM_START, 40, 30), G_TEXT_0_W, G_TEXT_0_H);
   161A 21 28 6E      [10] 4157 	ld	hl,#0x6E28
   161D E5            [11] 4158 	push	hl
   161E 21 18 F1      [10] 4159 	ld	hl,#0xF118
   1621 E5            [11] 4160 	push	hl
   1622 21r00r00      [10] 4161 	ld	hl,#_g_text_1
   1625 E5            [11] 4162 	push	hl
   1626 CDr00r00      [17] 4163 	call	_cpct_drawSprite
                           4164 ;src/main.c:871: memptr = cpct_getScreenPtr(CPCT_VMEM_START, 8, 160); // centrado en horizontal y abajo en vertical
   1629 21 08 A0      [10] 4165 	ld	hl,#0xA008
   162C E5            [11] 4166 	push	hl
   162D 21 00 C0      [10] 4167 	ld	hl,#0xC000
   1630 E5            [11] 4168 	push	hl
   1631 CDr00r00      [17] 4169 	call	_cpct_getScreenPtr
   1634 4D            [ 4] 4170 	ld	c,l
   1635 44            [ 4] 4171 	ld	b,h
                           4172 ;src/main.c:872: cpct_drawStringM0("TO START PRESS S", memptr, 4, 0);
   1636 21 04 00      [10] 4173 	ld	hl,#0x0004
   1639 E5            [11] 4174 	push	hl
   163A C5            [11] 4175 	push	bc
   163B 21r9Br16      [10] 4176 	ld	hl,#___str_6
   163E E5            [11] 4177 	push	hl
   163F CDr00r00      [17] 4178 	call	_cpct_drawStringM0
   1642 21 06 00      [10] 4179 	ld	hl,#6
   1645 39            [11] 4180 	add	hl,sp
   1646 F9            [ 6] 4181 	ld	sp,hl
                           4182 ;src/main.c:874: memptr = cpct_getScreenPtr(CPCT_VMEM_START, 10, 170); // centrado en horizontal y abajo en vertical
   1647 21 0A AA      [10] 4183 	ld	hl,#0xAA0A
   164A E5            [11] 4184 	push	hl
   164B 21 00 C0      [10] 4185 	ld	hl,#0xC000
   164E E5            [11] 4186 	push	hl
   164F CDr00r00      [17] 4187 	call	_cpct_getScreenPtr
   1652 4D            [ 4] 4188 	ld	c,l
   1653 44            [ 4] 4189 	ld	b,h
                           4190 ;src/main.c:875: cpct_drawStringM0("TO MENU PRESS M", memptr, 4, 0);
   1654 21 04 00      [10] 4191 	ld	hl,#0x0004
   1657 E5            [11] 4192 	push	hl
   1658 C5            [11] 4193 	push	bc
   1659 21rACr16      [10] 4194 	ld	hl,#___str_7
   165C E5            [11] 4195 	push	hl
   165D CDr00r00      [17] 4196 	call	_cpct_drawStringM0
   1660 21 06 00      [10] 4197 	ld	hl,#6
   1663 39            [11] 4198 	add	hl,sp
   1664 F9            [ 6] 4199 	ld	sp,hl
                           4200 ;src/main.c:878: do{
   1665                    4201 00106$:
                           4202 ;src/main.c:879: cpct_scanKeyboard_f();
   1665 CDr00r00      [17] 4203 	call	_cpct_scanKeyboard_f
                           4204 ;src/main.c:883: if(cpct_isKeyPressed(Key_M)){
   1668 21 04 40      [10] 4205 	ld	hl,#0x4004
   166B CDr00r00      [17] 4206 	call	_cpct_isKeyPressed
   166E 7D            [ 4] 4207 	ld	a,l
   166F B7            [ 4] 4208 	or	a, a
   1670 28 0D         [12] 4209 	jr	Z,00107$
                           4210 ;src/main.c:884: cpct_scanKeyboard_f();
   1672 CDr00r00      [17] 4211 	call	_cpct_scanKeyboard_f
                           4212 ;src/main.c:885: do{
   1675                    4213 00101$:
                           4214 ;src/main.c:887: } while(!cpct_isKeyPressed(Key_S));
   1675 21 07 10      [10] 4215 	ld	hl,#0x1007
   1678 CDr00r00      [17] 4216 	call	_cpct_isKeyPressed
   167B 7D            [ 4] 4217 	ld	a,l
   167C B7            [ 4] 4218 	or	a, a
   167D 28 F6         [12] 4219 	jr	Z,00101$
   167F                    4220 00107$:
                           4221 ;src/main.c:889: } while(!cpct_isKeyPressed(Key_S) && !cpct_isKeyPressed(Key_M));
   167F 21 07 10      [10] 4222 	ld	hl,#0x1007
   1682 CDr00r00      [17] 4223 	call	_cpct_isKeyPressed
   1685 7D            [ 4] 4224 	ld	a,l
   1686 B7            [ 4] 4225 	or	a, a
   1687 C0            [11] 4226 	ret	NZ
   1688 21 04 40      [10] 4227 	ld	hl,#0x4004
   168B CDr00r00      [17] 4228 	call	_cpct_isKeyPressed
   168E 7D            [ 4] 4229 	ld	a,l
   168F B7            [ 4] 4230 	or	a, a
   1690 28 D3         [12] 4231 	jr	Z,00106$
   1692 C9            [10] 4232 	ret
   1693                    4233 ___str_5:
   1693 52 4F 42 4F 42 49  4234 	.ascii "ROBOBIT"
        54
   169A 00                 4235 	.db 0x00
   169B                    4236 ___str_6:
   169B 54 4F 20 53 54 41  4237 	.ascii "TO START PRESS S"
        52 54 20 50 52 45
        53 53 20 53
   16AB 00                 4238 	.db 0x00
   16AC                    4239 ___str_7:
   16AC 54 4F 20 4D 45 4E  4240 	.ascii "TO MENU PRESS M"
        55 20 50 52 45 53
        53 20 4D
   16BB 00                 4241 	.db 0x00
                           4242 ;src/main.c:892: void inicializarCPC() {
                           4243 ;	---------------------------------
                           4244 ; Function inicializarCPC
                           4245 ; ---------------------------------
   16BC                    4246 _inicializarCPC::
                           4247 ;src/main.c:893: cpct_disableFirmware();
   16BC CDr00r00      [17] 4248 	call	_cpct_disableFirmware
                           4249 ;src/main.c:894: cpct_setVideoMode(0);
   16BF 2E 00         [ 7] 4250 	ld	l,#0x00
   16C1 CDr00r00      [17] 4251 	call	_cpct_setVideoMode
                           4252 ;src/main.c:895: cpct_setBorder(HW_BLACK);
   16C4 21 10 14      [10] 4253 	ld	hl,#0x1410
   16C7 E5            [11] 4254 	push	hl
   16C8 CDr00r00      [17] 4255 	call	_cpct_setPALColour
                           4256 ;src/main.c:896: cpct_setPalette(g_palette, 16);
   16CB 21 10 00      [10] 4257 	ld	hl,#0x0010
   16CE E5            [11] 4258 	push	hl
   16CF 21r00r00      [10] 4259 	ld	hl,#_g_palette
   16D2 E5            [11] 4260 	push	hl
   16D3 CDr00r00      [17] 4261 	call	_cpct_setPalette
                           4262 ;src/main.c:897: cpct_akp_musicInit(G_song);
   16D6 21r00r0F      [10] 4263 	ld	hl,#_G_song
   16D9 E5            [11] 4264 	push	hl
   16DA CDr00r00      [17] 4265 	call	_cpct_akp_musicInit
   16DD F1            [10] 4266 	pop	af
   16DE C9            [10] 4267 	ret
                           4268 ;src/main.c:900: void inicializarEnemy() {
                           4269 ;	---------------------------------
                           4270 ; Function inicializarEnemy
                           4271 ; ---------------------------------
   16DF                    4272 _inicializarEnemy::
   16DF DD E5         [15] 4273 	push	ix
   16E1 DD 21 00 00   [14] 4274 	ld	ix,#0
   16E5 DD 39         [15] 4275 	add	ix,sp
   16E7 21 F9 FF      [10] 4276 	ld	hl,#-7
   16EA 39            [11] 4277 	add	hl,sp
   16EB F9            [ 6] 4278 	ld	sp,hl
                           4279 ;src/main.c:911: actual = enemy;
   16EC 01r02r00      [10] 4280 	ld	bc,#_enemy+0
                           4281 ;src/main.c:912: while(--i){
   16EF DD 36 F9 02   [19] 4282 	ld	-7 (ix),#0x02
   16F3                    4283 00101$:
   16F3 DD 35 F9      [23] 4284 	dec	-7 (ix)
   16F6 DD 7E F9      [19] 4285 	ld	a,-7 (ix)
   16F9 B7            [ 4] 4286 	or	a, a
   16FA CArD0r17      [10] 4287 	jp	Z,00104$
                           4288 ;src/main.c:913: actual->x = actual->px = spawnX[i];
   16FD 59            [ 4] 4289 	ld	e, c
   16FE 50            [ 4] 4290 	ld	d, b
   16FF 13            [ 6] 4291 	inc	de
   1700 13            [ 6] 4292 	inc	de
   1701 3Er1C         [ 7] 4293 	ld	a,#<(_spawnX)
   1703 DD 86 F9      [19] 4294 	add	a, -7 (ix)
   1706 DD 77 FE      [19] 4295 	ld	-2 (ix),a
   1709 3Es00         [ 7] 4296 	ld	a,#>(_spawnX)
   170B CE 00         [ 7] 4297 	adc	a, #0x00
   170D DD 77 FF      [19] 4298 	ld	-1 (ix),a
   1710 DD 6E FE      [19] 4299 	ld	l,-2 (ix)
   1713 DD 66 FF      [19] 4300 	ld	h,-1 (ix)
   1716 7E            [ 7] 4301 	ld	a,(hl)
   1717 DD 77 FD      [19] 4302 	ld	-3 (ix), a
   171A 12            [ 7] 4303 	ld	(de),a
   171B DD 7E FD      [19] 4304 	ld	a,-3 (ix)
   171E 02            [ 7] 4305 	ld	(bc),a
                           4306 ;src/main.c:914: actual->y = actual->py = spawnY[i];
   171F 59            [ 4] 4307 	ld	e, c
   1720 50            [ 4] 4308 	ld	d, b
   1721 13            [ 6] 4309 	inc	de
   1722 21 03 00      [10] 4310 	ld	hl,#0x0003
   1725 09            [11] 4311 	add	hl,bc
   1726 DD 75 FB      [19] 4312 	ld	-5 (ix),l
   1729 DD 74 FC      [19] 4313 	ld	-4 (ix),h
   172C FD 21r21r00   [14] 4314 	ld	iy,#_spawnY
   1730 C5            [11] 4315 	push	bc
   1731 DD 4E F9      [19] 4316 	ld	c,-7 (ix)
   1734 06 00         [ 7] 4317 	ld	b,#0x00
   1736 FD 09         [15] 4318 	add	iy, bc
   1738 C1            [10] 4319 	pop	bc
   1739 FD 7E 00      [19] 4320 	ld	a, 0 (iy)
   173C DD 77 FA      [19] 4321 	ld	-6 (ix),a
   173F DD 6E FB      [19] 4322 	ld	l,-5 (ix)
   1742 DD 66 FC      [19] 4323 	ld	h,-4 (ix)
   1745 DD 7E FA      [19] 4324 	ld	a,-6 (ix)
   1748 77            [ 7] 4325 	ld	(hl),a
   1749 DD 7E FA      [19] 4326 	ld	a,-6 (ix)
   174C 12            [ 7] 4327 	ld	(de),a
                           4328 ;src/main.c:915: actual->mover  = NO;
   174D 21 06 00      [10] 4329 	ld	hl,#0x0006
   1750 09            [11] 4330 	add	hl,bc
   1751 36 00         [10] 4331 	ld	(hl),#0x00
                           4332 ;src/main.c:916: actual->mira   = M_abajo;
   1753 21 07 00      [10] 4333 	ld	hl,#0x0007
   1756 09            [11] 4334 	add	hl,bc
   1757 36 03         [10] 4335 	ld	(hl),#0x03
                           4336 ;src/main.c:917: actual->sprite = g_enemy;
   1759 21 04 00      [10] 4337 	ld	hl,#0x0004
   175C 09            [11] 4338 	add	hl,bc
   175D 36r00         [10] 4339 	ld	(hl),#<(_g_enemy)
   175F 23            [ 6] 4340 	inc	hl
   1760 36s00         [10] 4341 	ld	(hl),#>(_g_enemy)
                           4342 ;src/main.c:918: actual->muerto = NO;
   1762 21 08 00      [10] 4343 	ld	hl,#0x0008
   1765 09            [11] 4344 	add	hl,bc
   1766 36 00         [10] 4345 	ld	(hl),#0x00
                           4346 ;src/main.c:919: actual->muertes = 0;
   1768 21 0A 00      [10] 4347 	ld	hl,#0x000A
   176B 09            [11] 4348 	add	hl,bc
   176C 36 00         [10] 4349 	ld	(hl),#0x00
                           4350 ;src/main.c:920: actual->patrolling = SI;
   176E 21 0B 00      [10] 4351 	ld	hl,#0x000B
   1771 09            [11] 4352 	add	hl,bc
   1772 36 01         [10] 4353 	ld	(hl),#0x01
                           4354 ;src/main.c:921: actual->onPathPatrol = SI;
   1774 21 0C 00      [10] 4355 	ld	hl,#0x000C
   1777 09            [11] 4356 	add	hl,bc
   1778 36 01         [10] 4357 	ld	(hl),#0x01
                           4358 ;src/main.c:922: actual->reversePatrol = NO;
   177A 21 0D 00      [10] 4359 	ld	hl,#0x000D
   177D 09            [11] 4360 	add	hl,bc
   177E 36 00         [10] 4361 	ld	(hl),#0x00
                           4362 ;src/main.c:923: actual->iter = 0;
   1780 21 0F 00      [10] 4363 	ld	hl,#0x000F
   1783 09            [11] 4364 	add	hl,bc
   1784 36 00         [10] 4365 	ld	(hl),#0x00
                           4366 ;src/main.c:924: actual->lastIter = 0;
   1786 21 10 00      [10] 4367 	ld	hl,#0x0010
   1789 09            [11] 4368 	add	hl,bc
   178A 36 00         [10] 4369 	ld	(hl),#0x00
                           4370 ;src/main.c:925: actual->seen = 0;
   178C 21 12 00      [10] 4371 	ld	hl,#0x0012
   178F 09            [11] 4372 	add	hl,bc
   1790 36 00         [10] 4373 	ld	(hl),#0x00
                           4374 ;src/main.c:926: actual->found = 0;
   1792 21 13 00      [10] 4375 	ld	hl,#0x0013
   1795 09            [11] 4376 	add	hl,bc
   1796 36 00         [10] 4377 	ld	(hl),#0x00
                           4378 ;src/main.c:927: pathFinding(actual->x, actual->y, spawnX[i] - 20, spawnY[i], actual, mapa); // calculo rutas de patrulla
   1798 FD 5E 00      [19] 4379 	ld	e, 0 (iy)
   179B DD 6E FE      [19] 4380 	ld	l,-2 (ix)
   179E DD 66 FF      [19] 4381 	ld	h,-1 (ix)
   17A1 7E            [ 7] 4382 	ld	a,(hl)
   17A2 C6 EC         [ 7] 4383 	add	a,#0xEC
   17A4 57            [ 4] 4384 	ld	d,a
   17A5 C5            [11] 4385 	push	bc
   17A6 2Ar25r05      [16] 4386 	ld	hl,(_mapa)
   17A9 E5            [11] 4387 	push	hl
   17AA C5            [11] 4388 	push	bc
   17AB 7B            [ 4] 4389 	ld	a,e
   17AC F5            [11] 4390 	push	af
   17AD 33            [ 6] 4391 	inc	sp
   17AE D5            [11] 4392 	push	de
   17AF 33            [ 6] 4393 	inc	sp
   17B0 DD 66 FA      [19] 4394 	ld	h,-6 (ix)
   17B3 DD 6E FD      [19] 4395 	ld	l,-3 (ix)
   17B6 E5            [11] 4396 	push	hl
   17B7 CDr00r00      [17] 4397 	call	_pathFinding
   17BA 21 08 00      [10] 4398 	ld	hl,#8
   17BD 39            [11] 4399 	add	hl,sp
   17BE F9            [ 6] 4400 	ld	sp,hl
   17BF C1            [10] 4401 	pop	bc
                           4402 ;src/main.c:950: dibujarEnemigo(actual);
   17C0 C5            [11] 4403 	push	bc
   17C1 C5            [11] 4404 	push	bc
   17C2 CDrA1r02      [17] 4405 	call	_dibujarEnemigo
   17C5 F1            [10] 4406 	pop	af
   17C6 C1            [10] 4407 	pop	bc
                           4408 ;src/main.c:952: ++actual;
   17C7 21 44 01      [10] 4409 	ld	hl,#0x0144
   17CA 09            [11] 4410 	add	hl,bc
   17CB 4D            [ 4] 4411 	ld	c,l
   17CC 44            [ 4] 4412 	ld	b,h
   17CD C3rF3r16      [10] 4413 	jp	00101$
   17D0                    4414 00104$:
   17D0 DD F9         [10] 4415 	ld	sp, ix
   17D2 DD E1         [14] 4416 	pop	ix
   17D4 C9            [10] 4417 	ret
                           4418 ;src/main.c:956: void inicializarJuego() {
                           4419 ;	---------------------------------
                           4420 ; Function inicializarJuego
                           4421 ; ---------------------------------
   17D5                    4422 _inicializarJuego::
                           4423 ;src/main.c:958: iter = 0;
   17D5 21r24r05      [10] 4424 	ld	hl,#_iter + 0
   17D8 36 00         [10] 4425 	ld	(hl), #0x00
                           4426 ;src/main.c:959: num_mapa = 0;
   17DA 21r27r05      [10] 4427 	ld	hl,#_num_mapa + 0
   17DD 36 00         [10] 4428 	ld	(hl), #0x00
                           4429 ;src/main.c:960: mapa = mapas[num_mapa];
   17DF 21r16r00      [10] 4430 	ld	hl, #_mapas + 0
   17E2 7E            [ 7] 4431 	ld	a,(hl)
   17E3 FD 21r25r05   [14] 4432 	ld	iy,#_mapa
   17E7 FD 77 00      [19] 4433 	ld	0 (iy),a
   17EA 23            [ 6] 4434 	inc	hl
   17EB 7E            [ 7] 4435 	ld	a,(hl)
   17EC 32r26r05      [13] 4436 	ld	(#_mapa + 1),a
                           4437 ;src/main.c:961: cpct_etm_setTileset2x4(g_tileset);
   17EF 21r00r00      [10] 4438 	ld	hl,#_g_tileset
   17F2 CDr00r00      [17] 4439 	call	_cpct_etm_setTileset2x4
                           4440 ;src/main.c:963: dibujarMapa();
   17F5 CDr00r00      [17] 4441 	call	_dibujarMapa
                           4442 ;src/main.c:965: borrarPantallaArriba(0, 0, 40, 1);
   17F8 21 28 01      [10] 4443 	ld	hl,#0x0128
   17FB E5            [11] 4444 	push	hl
   17FC 21 00 00      [10] 4445 	ld	hl,#0x0000
   17FF E5            [11] 4446 	push	hl
   1800 CDr8Dr15      [17] 4447 	call	_borrarPantallaArriba
   1803 F1            [10] 4448 	pop	af
   1804 F1            [10] 4449 	pop	af
                           4450 ;src/main.c:966: barraPuntuacionInicial();
   1805 CDrCBr14      [17] 4451 	call	_barraPuntuacionInicial
                           4452 ;src/main.c:969: prota.x = prota.px = 5;
   1808 21r14r05      [10] 4453 	ld	hl,#(_prota + 0x0002)
   180B 36 05         [10] 4454 	ld	(hl),#0x05
   180D 21r12r05      [10] 4455 	ld	hl,#_prota
   1810 36 05         [10] 4456 	ld	(hl),#0x05
                           4457 ;src/main.c:970: prota.y = prota.py = 76 + ORIGEN_MAPA_Y;
   1812 21r15r05      [10] 4458 	ld	hl,#(_prota + 0x0003)
   1815 36 64         [10] 4459 	ld	(hl),#0x64
   1817 21r13r05      [10] 4460 	ld	hl,#(_prota + 0x0001)
   181A 36 64         [10] 4461 	ld	(hl),#0x64
                           4462 ;src/main.c:971: prota.mover  = NO;
   181C 21r18r05      [10] 4463 	ld	hl,#(_prota + 0x0006)
   181F 36 00         [10] 4464 	ld	(hl),#0x00
                           4465 ;src/main.c:972: prota.mira=M_derecha;
   1821 21r19r05      [10] 4466 	ld	hl,#(_prota + 0x0007)
   1824 36 00         [10] 4467 	ld	(hl),#0x00
                           4468 ;src/main.c:973: prota.sprite = g_hero;
   1826 21r00r00      [10] 4469 	ld	hl,#_g_hero
   1829 22r16r05      [16] 4470 	ld	((_prota + 0x0004)), hl
                           4471 ;src/main.c:977: cu.x = cu.px = 0;
   182C 21r1Cr05      [10] 4472 	ld	hl,#(_cu + 0x0002)
   182F 36 00         [10] 4473 	ld	(hl),#0x00
   1831 21r1Ar05      [10] 4474 	ld	hl,#_cu
   1834 36 00         [10] 4475 	ld	(hl),#0x00
                           4476 ;src/main.c:978: cu.y = cu.py = 0;
   1836 21r1Dr05      [10] 4477 	ld	hl,#(_cu + 0x0003)
   1839 36 00         [10] 4478 	ld	(hl),#0x00
   183B 21r1Br05      [10] 4479 	ld	hl,#(_cu + 0x0001)
   183E 36 00         [10] 4480 	ld	(hl),#0x00
                           4481 ;src/main.c:979: cu.lanzado = NO;
   1840 21r20r05      [10] 4482 	ld	hl,#(_cu + 0x0006)
   1843 36 00         [10] 4483 	ld	(hl),#0x00
                           4484 ;src/main.c:980: cu.mover = NO;
   1845 21r23r05      [10] 4485 	ld	hl,#(_cu + 0x0009)
   1848 36 00         [10] 4486 	ld	(hl),#0x00
                           4487 ;src/main.c:982: inicializarEnemy();
   184A CDrDFr16      [17] 4488 	call	_inicializarEnemy
                           4489 ;src/main.c:984: dibujarProta();
   184D C3r26r00      [10] 4490 	jp  _dibujarProta
                           4491 ;src/main.c:987: void main(void) {
                           4492 ;	---------------------------------
                           4493 ; Function main
                           4494 ; ---------------------------------
   1850                    4495 _main::
   1850 DD E5         [15] 4496 	push	ix
   1852 DD 21 00 00   [14] 4497 	ld	ix,#0
   1856 DD 39         [15] 4498 	add	ix,sp
   1858 3B            [ 6] 4499 	dec	sp
                           4500 ;src/main.c:992: inicializarCPC();
   1859 CDrBCr16      [17] 4501 	call	_inicializarCPC
                           4502 ;src/main.c:993: menuInicio();
   185C CDrE0r15      [17] 4503 	call	_menuInicio
                           4504 ;src/main.c:995: inicializarJuego();
   185F CDrD5r17      [17] 4505 	call	_inicializarJuego
                           4506 ;src/main.c:996: cpct_akp_musicPlay();
   1862 CDr00r00      [17] 4507 	call	_cpct_akp_musicPlay
                           4508 ;src/main.c:998: while (1) {
   1865                    4509 00119$:
                           4510 ;src/main.c:1001: i = 1 + 1;
   1865 DD 36 FF 02   [19] 4511 	ld	-1 (ix),#0x02
                           4512 ;src/main.c:1004: comprobarTeclado();
   1869 CDrC3r13      [17] 4513 	call	_comprobarTeclado
                           4514 ;src/main.c:1005: moverCuchillo();
   186C CDr26r14      [17] 4515 	call	_moverCuchillo
                           4516 ;src/main.c:1006: updateEnemies();
   186F CDrFDr0F      [17] 4517 	call	_updateEnemies
                           4518 ;src/main.c:1021: actual = enemy;
                           4519 ;src/main.c:1023: cpct_waitVSYNC();
   1872 CDr00r00      [17] 4520 	call	_cpct_waitVSYNC
                           4521 ;src/main.c:1025: if (prota.mover) {
   1875 01r18r05      [10] 4522 	ld	bc,#_prota+6
   1878 0A            [ 7] 4523 	ld	a,(bc)
   1879 B7            [ 4] 4524 	or	a, a
   187A 28 07         [12] 4525 	jr	Z,00102$
                           4526 ;src/main.c:1026: redibujarProta();
   187C C5            [11] 4527 	push	bc
   187D CDrF7r00      [17] 4528 	call	_redibujarProta
   1880 C1            [10] 4529 	pop	bc
                           4530 ;src/main.c:1027: prota.mover = NO;
   1881 AF            [ 4] 4531 	xor	a, a
   1882 02            [ 7] 4532 	ld	(bc),a
   1883                    4533 00102$:
                           4534 ;src/main.c:1029: if(cu.lanzado && cu.mover){
   1883 21r20r05      [10] 4535 	ld	hl,#_cu + 6
   1886 4E            [ 7] 4536 	ld	c,(hl)
   1887 11r23r05      [10] 4537 	ld	de,#_cu + 9
   188A 79            [ 4] 4538 	ld	a,c
   188B B7            [ 4] 4539 	or	a, a
   188C 28 09         [12] 4540 	jr	Z,00107$
   188E 1A            [ 7] 4541 	ld	a,(de)
   188F B7            [ 4] 4542 	or	a, a
   1890 28 05         [12] 4543 	jr	Z,00107$
                           4544 ;src/main.c:1030: redibujarCuchillo();
   1892 CDr93r12      [17] 4545 	call	_redibujarCuchillo
   1895 18 0B         [12] 4546 	jr	00132$
   1897                    4547 00107$:
                           4548 ;src/main.c:1031: }else if (cu.lanzado && !cu.mover){
   1897 79            [ 4] 4549 	ld	a,c
   1898 B7            [ 4] 4550 	or	a, a
   1899 28 07         [12] 4551 	jr	Z,00132$
   189B 1A            [ 7] 4552 	ld	a,(de)
   189C B7            [ 4] 4553 	or	a, a
   189D 20 03         [12] 4554 	jr	NZ,00132$
                           4555 ;src/main.c:1032: borrarCuchillo();
   189F CDr15r12      [17] 4556 	call	_borrarCuchillo
                           4557 ;src/main.c:1035: while(--i){
   18A2                    4558 00132$:
   18A2 01r02r00      [10] 4559 	ld	bc,#_enemy
   18A5                    4560 00115$:
   18A5 DD 35 FF      [23] 4561 	dec	-1 (ix)
   18A8 DD 7E FF      [19] 4562 	ld	a, -1 (ix)
   18AB B7            [ 4] 4563 	or	a, a
   18AC 28 43         [12] 4564 	jr	Z,00117$
                           4565 ;src/main.c:1036: if(actual->mover){
   18AE C5            [11] 4566 	push	bc
   18AF FD E1         [14] 4567 	pop	iy
   18B1 FD 7E 06      [19] 4568 	ld	a,6 (iy)
   18B4 B7            [ 4] 4569 	or	a, a
   18B5 28 07         [12] 4570 	jr	Z,00111$
                           4571 ;src/main.c:1037: redibujarEnemigo(actual);
   18B7 C5            [11] 4572 	push	bc
   18B8 C5            [11] 4573 	push	bc
   18B9 CDr15r04      [17] 4574 	call	_redibujarEnemigo
   18BC F1            [10] 4575 	pop	af
   18BD C1            [10] 4576 	pop	bc
   18BE                    4577 00111$:
                           4578 ;src/main.c:1039: if (actual->muerto && actual->muertes == 0){
   18BE C5            [11] 4579 	push	bc
   18BF FD E1         [14] 4580 	pop	iy
   18C1 FD 7E 08      [19] 4581 	ld	a,8 (iy)
   18C4 B7            [ 4] 4582 	or	a, a
   18C5 28 22         [12] 4583 	jr	Z,00113$
   18C7 21 0A 00      [10] 4584 	ld	hl,#0x000A
   18CA 09            [11] 4585 	add	hl,bc
   18CB 7E            [ 7] 4586 	ld	a,(hl)
   18CC B7            [ 4] 4587 	or	a, a
   18CD 20 1A         [12] 4588 	jr	NZ,00113$
                           4589 ;src/main.c:1040: borrarEnemigo(actual);
   18CF E5            [11] 4590 	push	hl
   18D0 C5            [11] 4591 	push	bc
   18D1 C5            [11] 4592 	push	bc
   18D2 CDr81r03      [17] 4593 	call	_borrarEnemigo
   18D5 F1            [10] 4594 	pop	af
   18D6 C1            [10] 4595 	pop	bc
   18D7 C5            [11] 4596 	push	bc
   18D8 C5            [11] 4597 	push	bc
   18D9 CDrD9r02      [17] 4598 	call	_dibujarExplosion
   18DC F1            [10] 4599 	pop	af
   18DD C1            [10] 4600 	pop	bc
   18DE E1            [10] 4601 	pop	hl
                           4602 ;src/main.c:1043: actual->muertes++;
   18DF 5E            [ 7] 4603 	ld	e,(hl)
   18E0 1C            [ 4] 4604 	inc	e
   18E1 73            [ 7] 4605 	ld	(hl),e
                           4606 ;src/main.c:1044: actual->x = 0;
   18E2 AF            [ 4] 4607 	xor	a, a
   18E3 02            [ 7] 4608 	ld	(bc),a
                           4609 ;src/main.c:1045: actual->y = 0;
   18E4 59            [ 4] 4610 	ld	e, c
   18E5 50            [ 4] 4611 	ld	d, b
   18E6 13            [ 6] 4612 	inc	de
   18E7 AF            [ 4] 4613 	xor	a, a
   18E8 12            [ 7] 4614 	ld	(de),a
   18E9                    4615 00113$:
                           4616 ;src/main.c:1047: ++actual;
   18E9 21 44 01      [10] 4617 	ld	hl,#0x0144
   18EC 09            [11] 4618 	add	hl,bc
   18ED 4D            [ 4] 4619 	ld	c,l
   18EE 44            [ 4] 4620 	ld	b,h
   18EF 18 B4         [12] 4621 	jr	00115$
   18F1                    4622 00117$:
                           4623 ;src/main.c:1050: cpct_waitVSYNC();
   18F1 CDr00r00      [17] 4624 	call	_cpct_waitVSYNC
   18F4 C3r65r18      [10] 4625 	jp	00119$
   18F7 33            [ 6] 4626 	inc	sp
   18F8 DD E1         [14] 4627 	pop	ix
   18FA C9            [10] 4628 	ret
                           4629 	.area _CODE
                           4630 	.area _INITIALIZER
                           4631 	.area _CABS (ABS)
   0F00                    4632 	.org 0x0F00
   0F00                    4633 _G_song:
   0F00 41                 4634 	.db #0x41	; 65	'A'
   0F01 54                 4635 	.db #0x54	; 84	'T'
   0F02 31                 4636 	.db #0x31	; 49	'1'
   0F03 30                 4637 	.db #0x30	; 48	'0'
   0F04 01                 4638 	.db #0x01	; 1
   0F05 40                 4639 	.db #0x40	; 64
   0F06 42                 4640 	.db #0x42	; 66	'B'
   0F07 0F                 4641 	.db #0x0F	; 15
   0F08 02                 4642 	.db #0x02	; 2
   0F09 06                 4643 	.db #0x06	; 6
   0F0A 1D                 4644 	.db #0x1D	; 29
   0F0B 00                 4645 	.db #0x00	; 0
   0F0C 10                 4646 	.db #0x10	; 16
   0F0D 40                 4647 	.db #0x40	; 64
   0F0E 19                 4648 	.db #0x19	; 25
   0F0F 40                 4649 	.db #0x40	; 64
   0F10 00                 4650 	.db #0x00	; 0
   0F11 00                 4651 	.db #0x00	; 0
   0F12 00                 4652 	.db #0x00	; 0
   0F13 00                 4653 	.db #0x00	; 0
   0F14 00                 4654 	.db #0x00	; 0
   0F15 00                 4655 	.db #0x00	; 0
   0F16 0D                 4656 	.db #0x0D	; 13
   0F17 12                 4657 	.db #0x12	; 18
   0F18 40                 4658 	.db #0x40	; 64
   0F19 01                 4659 	.db #0x01	; 1
   0F1A 00                 4660 	.db #0x00	; 0
   0F1B 7C                 4661 	.db #0x7C	; 124
   0F1C 18                 4662 	.db #0x18	; 24
   0F1D 78                 4663 	.db #0x78	; 120	'x'
   0F1E 0C                 4664 	.db #0x0C	; 12
   0F1F 34                 4665 	.db #0x34	; 52	'4'
   0F20 30                 4666 	.db #0x30	; 48	'0'
   0F21 2C                 4667 	.db #0x2C	; 44
   0F22 28                 4668 	.db #0x28	; 40
   0F23 24                 4669 	.db #0x24	; 36
   0F24 20                 4670 	.db #0x20	; 32
   0F25 1C                 4671 	.db #0x1C	; 28
   0F26 0D                 4672 	.db #0x0D	; 13
   0F27 25                 4673 	.db #0x25	; 37
   0F28 40                 4674 	.db #0x40	; 64
   0F29 20                 4675 	.db #0x20	; 32
   0F2A 00                 4676 	.db #0x00	; 0
   0F2B 00                 4677 	.db #0x00	; 0
   0F2C 00                 4678 	.db #0x00	; 0
   0F2D 39                 4679 	.db #0x39	; 57	'9'
   0F2E 40                 4680 	.db #0x40	; 64
   0F2F 00                 4681 	.db #0x00	; 0
   0F30 57                 4682 	.db #0x57	; 87	'W'
   0F31 40                 4683 	.db #0x40	; 64
   0F32 3B                 4684 	.db #0x3B	; 59
   0F33 40                 4685 	.db #0x40	; 64
   0F34 57                 4686 	.db #0x57	; 87	'W'
   0F35 40                 4687 	.db #0x40	; 64
   0F36 01                 4688 	.db #0x01	; 1
   0F37 2F                 4689 	.db #0x2F	; 47
   0F38 40                 4690 	.db #0x40	; 64
   0F39 19                 4691 	.db #0x19	; 25
   0F3A 00                 4692 	.db #0x00	; 0
   0F3B 76                 4693 	.db #0x76	; 118	'v'
   0F3C E1                 4694 	.db #0xE1	; 225
   0F3D 00                 4695 	.db #0x00	; 0
   0F3E 00                 4696 	.db #0x00	; 0
   0F3F 01                 4697 	.db #0x01	; 1
   0F40 04                 4698 	.db #0x04	; 4
   0F41 51                 4699 	.db #0x51	; 81	'Q'
   0F42 04                 4700 	.db #0x04	; 4
   0F43 37                 4701 	.db #0x37	; 55	'7'
   0F44 04                 4702 	.db #0x04	; 4
   0F45 4F                 4703 	.db #0x4F	; 79	'O'
   0F46 04                 4704 	.db #0x04	; 4
   0F47 37                 4705 	.db #0x37	; 55	'7'
   0F48 02                 4706 	.db #0x02	; 2
   0F49 4B                 4707 	.db #0x4B	; 75	'K'
   0F4A 02                 4708 	.db #0x02	; 2
   0F4B 37                 4709 	.db #0x37	; 55	'7'
   0F4C 04                 4710 	.db #0x04	; 4
   0F4D 4F                 4711 	.db #0x4F	; 79	'O'
   0F4E 04                 4712 	.db #0x04	; 4
   0F4F 37                 4713 	.db #0x37	; 55	'7'
   0F50 04                 4714 	.db #0x04	; 4
   0F51 4F                 4715 	.db #0x4F	; 79	'O'
   0F52 04                 4716 	.db #0x04	; 4
   0F53 37                 4717 	.db #0x37	; 55	'7'
   0F54 02                 4718 	.db #0x02	; 2
   0F55 4B                 4719 	.db #0x4B	; 75	'K'
   0F56 00                 4720 	.db #0x00	; 0
   0F57 42                 4721 	.db #0x42	; 66	'B'
   0F58 60                 4722 	.db #0x60	; 96
   0F59 00                 4723 	.db #0x00	; 0
   0F5A 42                 4724 	.db #0x42	; 66	'B'
   0F5B 80                 4725 	.db #0x80	; 128
   0F5C 00                 4726 	.db #0x00	; 0
   0F5D 00                 4727 	.db #0x00	; 0
   0F5E 42                 4728 	.db #0x42	; 66	'B'
   0F5F 00                 4729 	.db #0x00	; 0
   0F60 00                 4730 	.db #0x00	; 0
