                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.5 #9498 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module main
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _inicializarJuego
                             13 	.globl _inicializarCPC
                             14 	.globl _intHandler
                             15 	.globl _moverAbajo
                             16 	.globl _moverArriba
                             17 	.globl _moverDerecha
                             18 	.globl _moverIzquierda
                             19 	.globl _avanzarMapa
                             20 	.globl _inicializarEnemy
                             21 	.globl _moverEnemigo
                             22 	.globl _moverEnemigoIzquierda
                             23 	.globl _moverEnemigoDerecha
                             24 	.globl _moverEnemigoAbajo
                             25 	.globl _moverEnemigoArriba
                             26 	.globl _checkEnemyCollision
                             27 	.globl _redibujarEnemigo
                             28 	.globl _borrarEnemigo
                             29 	.globl _borrarExplosion
                             30 	.globl _dibujarExplosion
                             31 	.globl _dibujarEnemigo
                             32 	.globl _checkCollision
                             33 	.globl _comprobarTeclado
                             34 	.globl _redibujarProta
                             35 	.globl _borrarProta
                             36 	.globl _dibujarProta
                             37 	.globl _dibujarMapa
                             38 	.globl _play
                             39 	.globl _moverCuchillo
                             40 	.globl _lanzarCuchillo
                             41 	.globl _redibujarCuchillo
                             42 	.globl _borrarCuchillo
                             43 	.globl _getTilePtr
                             44 	.globl _aumentarPuntuacion
                             45 	.globl _modificarPuntuacion
                             46 	.globl _barraPuntuacionInicial
                             47 	.globl _menuInicio
                             48 	.globl _menuFin
                             49 	.globl _cpct_etm_setTileset2x4
                             50 	.globl _cpct_etm_drawTileBox2x4
                             51 	.globl _cpct_getScreenPtr
                             52 	.globl _cpct_setPALColour
                             53 	.globl _cpct_setPalette
                             54 	.globl _cpct_waitVSYNC
                             55 	.globl _cpct_setVideoMode
                             56 	.globl _cpct_drawSpriteMaskedAlignedTable
                             57 	.globl _cpct_isAnyKeyPressed
                             58 	.globl _cpct_isKeyPressed
                             59 	.globl _cpct_scanKeyboard_if
                             60 	.globl _cpct_disableFirmware
                             61 	.globl _vidas
                             62 	.globl _puntuacion
                             63 	.globl _num_mapa
                             64 	.globl _mapa
                             65 	.globl _i
                             66 	.globl _cu
                             67 	.globl _prota
                             68 	.globl _enemy
                             69 	.globl _spawnY
                             70 	.globl _spawnX
                             71 	.globl _mapas
                             72 ;--------------------------------------------------------
                             73 ; special function registers
                             74 ;--------------------------------------------------------
                             75 ;--------------------------------------------------------
                             76 ; ram data
                             77 ;--------------------------------------------------------
                             78 	.area _DATA
   0000                      79 _enemy::
   0000                      80 	.ds 52
   0034                      81 _prota::
   0034                      82 	.ds 8
   003C                      83 _cu::
   003C                      84 	.ds 10
   0046                      85 _i::
   0046                      86 	.ds 1
                             87 ;--------------------------------------------------------
                             88 ; ram data
                             89 ;--------------------------------------------------------
                             90 	.area _INITIALIZED
   0000                      91 _mapa::
   0000                      92 	.ds 2
   0002                      93 _num_mapa::
   0002                      94 	.ds 1
   0003                      95 _puntuacion::
   0003                      96 	.ds 1
   0004                      97 _vidas::
   0004                      98 	.ds 1
                             99 ;--------------------------------------------------------
                            100 ; absolute external ram data
                            101 ;--------------------------------------------------------
                            102 	.area _DABS (ABS)
                            103 ;--------------------------------------------------------
                            104 ; global & static initialisations
                            105 ;--------------------------------------------------------
                            106 	.area _HOME
                            107 	.area _GSINIT
                            108 	.area _GSFINAL
                            109 	.area _GSINIT
                            110 ;--------------------------------------------------------
                            111 ; Home
                            112 ;--------------------------------------------------------
                            113 	.area _HOME
                            114 	.area _HOME
                            115 ;--------------------------------------------------------
                            116 ; code
                            117 ;--------------------------------------------------------
                            118 	.area _CODE
                            119 ;src/main.c:92: cpctm_createTransparentMaskTable(g_tablatrans, 0x2E00, M0, 0); 
                            120 ;	---------------------------------
                            121 ; Function dummy_cpct_transparentMaskTable0M0_container
                            122 ; ---------------------------------
   0000                     123 _dummy_cpct_transparentMaskTable0M0_container::
                            124 	.area _g_tablatrans_ (ABS) 
   2E00                     125 	.org 0x2E00 
   2E00                     126 	 _g_tablatrans::
   2E00 FF AA 55 00 AA AA   127 	.db 0xFF, 0xAA, 0x55, 0x00, 0xAA, 0xAA, 0x00, 0x00 
        00 00
   2E08 55 00 55 00 00 00   128 	.db 0x55, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E10 AA AA 00 00 AA AA   129 	.db 0xAA, 0xAA, 0x00, 0x00, 0xAA, 0xAA, 0x00, 0x00 
        00 00
   2E18 00 00 00 00 00 00   130 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E20 55 00 55 00 00 00   131 	.db 0x55, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E28 55 00 55 00 00 00   132 	.db 0x55, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E30 00 00 00 00 00 00   133 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E38 00 00 00 00 00 00   134 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E40 AA AA 00 00 AA AA   135 	.db 0xAA, 0xAA, 0x00, 0x00, 0xAA, 0xAA, 0x00, 0x00 
        00 00
   2E48 00 00 00 00 00 00   136 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E50 AA AA 00 00 AA AA   137 	.db 0xAA, 0xAA, 0x00, 0x00, 0xAA, 0xAA, 0x00, 0x00 
        00 00
   2E58 00 00 00 00 00 00   138 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E60 00 00 00 00 00 00   139 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E68 00 00 00 00 00 00   140 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E70 00 00 00 00 00 00   141 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E78 00 00 00 00 00 00   142 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E80 55 00 55 00 00 00   143 	.db 0x55, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E88 55 00 55 00 00 00   144 	.db 0x55, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E90 00 00 00 00 00 00   145 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E98 00 00 00 00 00 00   146 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2EA0 55 00 55 00 00 00   147 	.db 0x55, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2EA8 55 00 55 00 00 00   148 	.db 0x55, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2EB0 00 00 00 00 00 00   149 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2EB8 00 00 00 00 00 00   150 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2EC0 00 00 00 00 00 00   151 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2EC8 00 00 00 00 00 00   152 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2ED0 00 00 00 00 00 00   153 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2ED8 00 00 00 00 00 00   154 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2EE0 00 00 00 00 00 00   155 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2EE8 00 00 00 00 00 00   156 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2EF0 00 00 00 00 00 00   157 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2EF8 00 00 00 00 00 00   158 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
                            159 	.area _CSEG (REL, CON) 
                            160 ;src/main.c:95: void dibujarMapa() {
                            161 ;	---------------------------------
                            162 ; Function dibujarMapa
                            163 ; ---------------------------------
   0000                     164 _dibujarMapa::
                            165 ;src/main.c:98: cpct_etm_drawTilemap2x4 (g_map1_W, g_map1_H, p, mapa);
   0000 2Ar00r00      [16]  166 	ld	hl,(_mapa)
   0003 E5            [11]  167 	push	hl
   0004 21 F0 C0      [10]  168 	ld	hl,#0xC0F0
   0007 E5            [11]  169 	push	hl
   0008 21 2C 28      [10]  170 	ld	hl,#0x282C
   000B E5            [11]  171 	push	hl
   000C 2E 00         [ 7]  172 	ld	l, #0x00
   000E E5            [11]  173 	push	hl
   000F AF            [ 4]  174 	xor	a, a
   0010 F5            [11]  175 	push	af
   0011 33            [ 6]  176 	inc	sp
   0012 CDr00r00      [17]  177 	call	_cpct_etm_drawTileBox2x4
   0015 C9            [10]  178 	ret
   0016                     179 _mapas:
   0016r00r00               180 	.dw _g_map1
   0018r00r00               181 	.dw _g_map2
   001Ar00r00               182 	.dw _g_map3
   001C                     183 _spawnX:
   001C 00                  184 	.db #0x00	; 0
   001D 28                  185 	.db #0x28	; 40
   001E 47                  186 	.db #0x47	; 71	'G'
   001F 14                  187 	.db #0x14	; 20
   0020 3C                  188 	.db #0x3C	; 60
   0021                     189 _spawnY:
   0021 00                  190 	.db #0x00	; 0
   0022 2C                  191 	.db #0x2C	; 44
   0023 72                  192 	.db #0x72	; 114	'r'
   0024 8A                  193 	.db #0x8A	; 138
   0025 8A                  194 	.db #0x8A	; 138
                            195 ;src/main.c:101: void dibujarProta() {
                            196 ;	---------------------------------
                            197 ; Function dibujarProta
                            198 ; ---------------------------------
   0026                     199 _dibujarProta::
                            200 ;src/main.c:102: u8* pvmem = cpct_getScreenPtr(CPCT_VMEM_START, prota.x, prota.y);
   0026 21r35r00      [10]  201 	ld	hl, #_prota + 1
   0029 56            [ 7]  202 	ld	d,(hl)
   002A 21r34r00      [10]  203 	ld	hl, #_prota + 0
   002D 46            [ 7]  204 	ld	b,(hl)
   002E D5            [11]  205 	push	de
   002F 33            [ 6]  206 	inc	sp
   0030 C5            [11]  207 	push	bc
   0031 33            [ 6]  208 	inc	sp
   0032 21 00 C0      [10]  209 	ld	hl,#0xC000
   0035 E5            [11]  210 	push	hl
   0036 CDr00r00      [17]  211 	call	_cpct_getScreenPtr
   0039 EB            [ 4]  212 	ex	de,hl
                            213 ;src/main.c:103: cpct_drawSpriteMaskedAlignedTable (prota.sprite, pvmem, G_HERO_W, G_HERO_H, g_tablatrans);
   003A ED 4Br38r00   [20]  214 	ld	bc, (#_prota + 4)
   003E 21r00r2E      [10]  215 	ld	hl,#_g_tablatrans
   0041 E5            [11]  216 	push	hl
   0042 21 07 16      [10]  217 	ld	hl,#0x1607
   0045 E5            [11]  218 	push	hl
   0046 D5            [11]  219 	push	de
   0047 C5            [11]  220 	push	bc
   0048 CDr00r00      [17]  221 	call	_cpct_drawSpriteMaskedAlignedTable
   004B C9            [10]  222 	ret
                            223 ;src/main.c:106: void borrarProta() {
                            224 ;	---------------------------------
                            225 ; Function borrarProta
                            226 ; ---------------------------------
   004C                     227 _borrarProta::
   004C DD E5         [15]  228 	push	ix
   004E DD 21 00 00   [14]  229 	ld	ix,#0
   0052 DD 39         [15]  230 	add	ix,sp
   0054 F5            [11]  231 	push	af
   0055 3B            [ 6]  232 	dec	sp
                            233 ;src/main.c:110: u8 w = 4 + (prota.px & 1);
   0056 21r36r00      [10]  234 	ld	hl, #_prota + 2
   0059 4E            [ 7]  235 	ld	c,(hl)
   005A 79            [ 4]  236 	ld	a,c
   005B E6 01         [ 7]  237 	and	a, #0x01
   005D 47            [ 4]  238 	ld	b,a
   005E 04            [ 4]  239 	inc	b
   005F 04            [ 4]  240 	inc	b
   0060 04            [ 4]  241 	inc	b
   0061 04            [ 4]  242 	inc	b
                            243 ;src/main.c:113: u8 h = 6 + (prota.py & 2 ? 1 : 0);
   0062 21r37r00      [10]  244 	ld	hl, #_prota + 3
   0065 5E            [ 7]  245 	ld	e,(hl)
   0066 CB 4B         [ 8]  246 	bit	1, e
   0068 28 04         [12]  247 	jr	Z,00103$
   006A 3E 01         [ 7]  248 	ld	a,#0x01
   006C 18 02         [12]  249 	jr	00104$
   006E                     250 00103$:
   006E 3E 00         [ 7]  251 	ld	a,#0x00
   0070                     252 00104$:
   0070 C6 06         [ 7]  253 	add	a, #0x06
   0072 DD 77 FD      [19]  254 	ld	-3 (ix),a
                            255 ;src/main.c:115: cpct_etm_drawTileBox2x4 (prota.px / 2, (prota.py - ORIGEN_MAPA_Y)/4, w, h, g_map1_W, p, mapa);
   0075 FD 2Ar00r00   [20]  256 	ld	iy,(_mapa)
   0079 16 00         [ 7]  257 	ld	d,#0x00
   007B 7B            [ 4]  258 	ld	a,e
   007C C6 E8         [ 7]  259 	add	a,#0xE8
   007E DD 77 FE      [19]  260 	ld	-2 (ix),a
   0081 7A            [ 4]  261 	ld	a,d
   0082 CE FF         [ 7]  262 	adc	a,#0xFF
   0084 DD 77 FF      [19]  263 	ld	-1 (ix),a
   0087 DD 6E FE      [19]  264 	ld	l,-2 (ix)
   008A DD 66 FF      [19]  265 	ld	h,-1 (ix)
   008D DD CB FF 7E   [20]  266 	bit	7, -1 (ix)
   0091 28 04         [12]  267 	jr	Z,00105$
   0093 21 EB FF      [10]  268 	ld	hl,#0xFFEB
   0096 19            [11]  269 	add	hl,de
   0097                     270 00105$:
   0097 CB 2C         [ 8]  271 	sra	h
   0099 CB 1D         [ 8]  272 	rr	l
   009B CB 2C         [ 8]  273 	sra	h
   009D CB 1D         [ 8]  274 	rr	l
   009F 55            [ 4]  275 	ld	d,l
   00A0 CB 39         [ 8]  276 	srl	c
   00A2 FD E5         [15]  277 	push	iy
   00A4 21 F0 C0      [10]  278 	ld	hl,#0xC0F0
   00A7 E5            [11]  279 	push	hl
   00A8 3E 28         [ 7]  280 	ld	a,#0x28
   00AA F5            [11]  281 	push	af
   00AB 33            [ 6]  282 	inc	sp
   00AC DD 7E FD      [19]  283 	ld	a,-3 (ix)
   00AF F5            [11]  284 	push	af
   00B0 33            [ 6]  285 	inc	sp
   00B1 C5            [11]  286 	push	bc
   00B2 33            [ 6]  287 	inc	sp
   00B3 D5            [11]  288 	push	de
   00B4 33            [ 6]  289 	inc	sp
   00B5 79            [ 4]  290 	ld	a,c
   00B6 F5            [11]  291 	push	af
   00B7 33            [ 6]  292 	inc	sp
   00B8 CDr00r00      [17]  293 	call	_cpct_etm_drawTileBox2x4
   00BB DD F9         [10]  294 	ld	sp, ix
   00BD DD E1         [14]  295 	pop	ix
   00BF C9            [10]  296 	ret
                            297 ;src/main.c:118: void redibujarProta() {
                            298 ;	---------------------------------
                            299 ; Function redibujarProta
                            300 ; ---------------------------------
   00C0                     301 _redibujarProta::
                            302 ;src/main.c:119: borrarProta();
   00C0 CDr4Cr00      [17]  303 	call	_borrarProta
                            304 ;src/main.c:120: prota.px = prota.x;
   00C3 01r36r00      [10]  305 	ld	bc,#_prota + 2
   00C6 3Ar34r00      [13]  306 	ld	a, (#_prota + 0)
   00C9 02            [ 7]  307 	ld	(bc),a
                            308 ;src/main.c:121: prota.py = prota.y;
   00CA 01r37r00      [10]  309 	ld	bc,#_prota + 3
   00CD 3Ar35r00      [13]  310 	ld	a, (#_prota + 1)
   00D0 02            [ 7]  311 	ld	(bc),a
                            312 ;src/main.c:122: dibujarProta();
   00D1 C3r26r00      [10]  313 	jp  _dibujarProta
                            314 ;src/main.c:125: void comprobarTeclado(TKnife* cu, TProta* prota, u8* mapa, u8* g_tablatrans) {
                            315 ;	---------------------------------
                            316 ; Function comprobarTeclado
                            317 ; ---------------------------------
   00D4                     318 _comprobarTeclado::
                            319 ;src/main.c:126: cpct_scanKeyboard_if();
   00D4 CDr00r00      [17]  320 	call	_cpct_scanKeyboard_if
                            321 ;src/main.c:128: if (cpct_isAnyKeyPressed()) {
   00D7 CDr00r00      [17]  322 	call	_cpct_isAnyKeyPressed
   00DA 7D            [ 4]  323 	ld	a,l
   00DB B7            [ 4]  324 	or	a, a
   00DC C8            [11]  325 	ret	Z
                            326 ;src/main.c:129: if (cpct_isKeyPressed(Key_CursorLeft))
   00DD 21 01 01      [10]  327 	ld	hl,#0x0101
   00E0 CDr00r00      [17]  328 	call	_cpct_isKeyPressed
   00E3 7D            [ 4]  329 	ld	a,l
   00E4 B7            [ 4]  330 	or	a, a
                            331 ;src/main.c:130: moverIzquierda();
   00E5 C2rC6r09      [10]  332 	jp	NZ,_moverIzquierda
                            333 ;src/main.c:131: else if (cpct_isKeyPressed(Key_CursorRight))
   00E8 21 00 02      [10]  334 	ld	hl,#0x0200
   00EB CDr00r00      [17]  335 	call	_cpct_isKeyPressed
   00EE 7D            [ 4]  336 	ld	a,l
   00EF B7            [ 4]  337 	or	a, a
                            338 ;src/main.c:132: moverDerecha();
   00F0 C2rEBr09      [10]  339 	jp	NZ,_moverDerecha
                            340 ;src/main.c:133: else if (cpct_isKeyPressed(Key_CursorUp))
   00F3 21 00 01      [10]  341 	ld	hl,#0x0100
   00F6 CDr00r00      [17]  342 	call	_cpct_isKeyPressed
   00F9 7D            [ 4]  343 	ld	a,l
   00FA B7            [ 4]  344 	or	a, a
                            345 ;src/main.c:134: moverArriba();
   00FB C2r30r0A      [10]  346 	jp	NZ,_moverArriba
                            347 ;src/main.c:135: else if (cpct_isKeyPressed(Key_CursorDown))
   00FE 21 00 04      [10]  348 	ld	hl,#0x0400
   0101 CDr00r00      [17]  349 	call	_cpct_isKeyPressed
   0104 7D            [ 4]  350 	ld	a,l
   0105 B7            [ 4]  351 	or	a, a
                            352 ;src/main.c:136: moverAbajo();
   0106 C2r54r0A      [10]  353 	jp	NZ,_moverAbajo
                            354 ;src/main.c:137: else if (cpct_isKeyPressed(Key_Space))
   0109 21 05 80      [10]  355 	ld	hl,#0x8005
   010C CDr00r00      [17]  356 	call	_cpct_isKeyPressed
   010F 7D            [ 4]  357 	ld	a,l
   0110 B7            [ 4]  358 	or	a, a
   0111 C8            [11]  359 	ret	Z
                            360 ;src/main.c:138: lanzarCuchillo(cu, prota, mapa, g_tablatrans);
   0112 21 08 00      [10]  361 	ld	hl, #8
   0115 39            [11]  362 	add	hl, sp
   0116 4E            [ 7]  363 	ld	c, (hl)
   0117 23            [ 6]  364 	inc	hl
   0118 46            [ 7]  365 	ld	b, (hl)
   0119 C5            [11]  366 	push	bc
   011A 21 08 00      [10]  367 	ld	hl, #8
   011D 39            [11]  368 	add	hl, sp
   011E 4E            [ 7]  369 	ld	c, (hl)
   011F 23            [ 6]  370 	inc	hl
   0120 46            [ 7]  371 	ld	b, (hl)
   0121 C5            [11]  372 	push	bc
   0122 21 08 00      [10]  373 	ld	hl, #8
   0125 39            [11]  374 	add	hl, sp
   0126 4E            [ 7]  375 	ld	c, (hl)
   0127 23            [ 6]  376 	inc	hl
   0128 46            [ 7]  377 	ld	b, (hl)
   0129 C5            [11]  378 	push	bc
   012A 21 08 00      [10]  379 	ld	hl, #8
   012D 39            [11]  380 	add	hl, sp
   012E 4E            [ 7]  381 	ld	c, (hl)
   012F 23            [ 6]  382 	inc	hl
   0130 46            [ 7]  383 	ld	b, (hl)
   0131 C5            [11]  384 	push	bc
   0132 CDr00r00      [17]  385 	call	_lanzarCuchillo
   0135 21 08 00      [10]  386 	ld	hl,#8
   0138 39            [11]  387 	add	hl,sp
   0139 F9            [ 6]  388 	ld	sp,hl
   013A C9            [10]  389 	ret
                            390 ;src/main.c:142: u8 checkCollision(u8 direction) { // check optimization
                            391 ;	---------------------------------
                            392 ; Function checkCollision
                            393 ; ---------------------------------
   013B                     394 _checkCollision::
   013B DD E5         [15]  395 	push	ix
   013D DD 21 00 00   [14]  396 	ld	ix,#0
   0141 DD 39         [15]  397 	add	ix,sp
   0143 F5            [11]  398 	push	af
                            399 ;src/main.c:143: u8 *headTile=0, *feetTile=0, *waistTile=0;
   0144 21 00 00      [10]  400 	ld	hl,#0x0000
   0147 E3            [19]  401 	ex	(sp), hl
   0148 11 00 00      [10]  402 	ld	de,#0x0000
   014B 01 00 00      [10]  403 	ld	bc,#0x0000
                            404 ;src/main.c:145: switch (direction) {
   014E 3E 03         [ 7]  405 	ld	a,#0x03
   0150 DD 96 04      [19]  406 	sub	a, 4 (ix)
   0153 DAr8Fr02      [10]  407 	jp	C,00105$
   0156 DD 5E 04      [19]  408 	ld	e,4 (ix)
   0159 16 00         [ 7]  409 	ld	d,#0x00
   015B 21r62r01      [10]  410 	ld	hl,#00124$
   015E 19            [11]  411 	add	hl,de
   015F 19            [11]  412 	add	hl,de
   0160 19            [11]  413 	add	hl,de
   0161 E9            [ 4]  414 	jp	(hl)
   0162                     415 00124$:
   0162 C3r6Er01      [10]  416 	jp	00101$
   0165 C3rC7r01      [10]  417 	jp	00102$
   0168 C3r17r02      [10]  418 	jp	00103$
   016B C3r54r02      [10]  419 	jp	00104$
                            420 ;src/main.c:146: case 0:
   016E                     421 00101$:
                            422 ;src/main.c:147: headTile  = getTilePtr(mapa, prota.x + G_HERO_W - 3, prota.y);
   016E 21r35r00      [10]  423 	ld	hl, #(_prota + 0x0001) + 0
   0171 4E            [ 7]  424 	ld	c,(hl)
   0172 3Ar34r00      [13]  425 	ld	a, (#_prota + 0)
   0175 47            [ 4]  426 	ld	b,a
   0176 04            [ 4]  427 	inc	b
   0177 04            [ 4]  428 	inc	b
   0178 04            [ 4]  429 	inc	b
   0179 04            [ 4]  430 	inc	b
   017A 79            [ 4]  431 	ld	a,c
   017B F5            [11]  432 	push	af
   017C 33            [ 6]  433 	inc	sp
   017D C5            [11]  434 	push	bc
   017E 33            [ 6]  435 	inc	sp
   017F 2Ar00r00      [16]  436 	ld	hl,(_mapa)
   0182 E5            [11]  437 	push	hl
   0183 CDr00r00      [17]  438 	call	_getTilePtr
   0186 F1            [10]  439 	pop	af
   0187 F1            [10]  440 	pop	af
   0188 33            [ 6]  441 	inc	sp
   0189 33            [ 6]  442 	inc	sp
   018A E5            [11]  443 	push	hl
                            444 ;src/main.c:148: feetTile  = getTilePtr(mapa, prota.x + G_HERO_W - 3, prota.y + ALTO_PROTA - 2);
   018B 3Ar35r00      [13]  445 	ld	a, (#(_prota + 0x0001) + 0)
   018E C6 14         [ 7]  446 	add	a, #0x14
   0190 4F            [ 4]  447 	ld	c,a
   0191 21r34r00      [10]  448 	ld	hl, #_prota + 0
   0194 46            [ 7]  449 	ld	b,(hl)
   0195 04            [ 4]  450 	inc	b
   0196 04            [ 4]  451 	inc	b
   0197 04            [ 4]  452 	inc	b
   0198 04            [ 4]  453 	inc	b
   0199 79            [ 4]  454 	ld	a,c
   019A F5            [11]  455 	push	af
   019B 33            [ 6]  456 	inc	sp
   019C C5            [11]  457 	push	bc
   019D 33            [ 6]  458 	inc	sp
   019E 2Ar00r00      [16]  459 	ld	hl,(_mapa)
   01A1 E5            [11]  460 	push	hl
   01A2 CDr00r00      [17]  461 	call	_getTilePtr
   01A5 F1            [10]  462 	pop	af
   01A6 F1            [10]  463 	pop	af
   01A7 EB            [ 4]  464 	ex	de,hl
                            465 ;src/main.c:149: waistTile = getTilePtr(mapa, prota.x + G_HERO_W - 3, prota.y + ALTO_PROTA/2);
   01A8 3Ar35r00      [13]  466 	ld	a, (#(_prota + 0x0001) + 0)
   01AB C6 0B         [ 7]  467 	add	a, #0x0B
   01AD 47            [ 4]  468 	ld	b,a
   01AE 3Ar34r00      [13]  469 	ld	a, (#_prota + 0)
   01B1 C6 04         [ 7]  470 	add	a, #0x04
   01B3 D5            [11]  471 	push	de
   01B4 C5            [11]  472 	push	bc
   01B5 33            [ 6]  473 	inc	sp
   01B6 F5            [11]  474 	push	af
   01B7 33            [ 6]  475 	inc	sp
   01B8 2Ar00r00      [16]  476 	ld	hl,(_mapa)
   01BB E5            [11]  477 	push	hl
   01BC CDr00r00      [17]  478 	call	_getTilePtr
   01BF F1            [10]  479 	pop	af
   01C0 F1            [10]  480 	pop	af
   01C1 4D            [ 4]  481 	ld	c,l
   01C2 44            [ 4]  482 	ld	b,h
   01C3 D1            [10]  483 	pop	de
                            484 ;src/main.c:150: break;
   01C4 C3r8Fr02      [10]  485 	jp	00105$
                            486 ;src/main.c:151: case 1:
   01C7                     487 00102$:
                            488 ;src/main.c:152: headTile  = getTilePtr(mapa, prota.x - 1, prota.y);
   01C7 21r35r00      [10]  489 	ld	hl, #(_prota + 0x0001) + 0
   01CA 56            [ 7]  490 	ld	d,(hl)
   01CB 21r34r00      [10]  491 	ld	hl, #_prota + 0
   01CE 46            [ 7]  492 	ld	b,(hl)
   01CF 05            [ 4]  493 	dec	b
   01D0 D5            [11]  494 	push	de
   01D1 33            [ 6]  495 	inc	sp
   01D2 C5            [11]  496 	push	bc
   01D3 33            [ 6]  497 	inc	sp
   01D4 2Ar00r00      [16]  498 	ld	hl,(_mapa)
   01D7 E5            [11]  499 	push	hl
   01D8 CDr00r00      [17]  500 	call	_getTilePtr
   01DB F1            [10]  501 	pop	af
   01DC F1            [10]  502 	pop	af
   01DD 33            [ 6]  503 	inc	sp
   01DE 33            [ 6]  504 	inc	sp
   01DF E5            [11]  505 	push	hl
                            506 ;src/main.c:153: feetTile  = getTilePtr(mapa, prota.x - 1, prota.y + ALTO_PROTA - 2);
   01E0 3Ar35r00      [13]  507 	ld	a, (#(_prota + 0x0001) + 0)
   01E3 C6 14         [ 7]  508 	add	a, #0x14
   01E5 57            [ 4]  509 	ld	d,a
   01E6 21r34r00      [10]  510 	ld	hl, #_prota + 0
   01E9 46            [ 7]  511 	ld	b,(hl)
   01EA 05            [ 4]  512 	dec	b
   01EB D5            [11]  513 	push	de
   01EC 33            [ 6]  514 	inc	sp
   01ED C5            [11]  515 	push	bc
   01EE 33            [ 6]  516 	inc	sp
   01EF 2Ar00r00      [16]  517 	ld	hl,(_mapa)
   01F2 E5            [11]  518 	push	hl
   01F3 CDr00r00      [17]  519 	call	_getTilePtr
   01F6 F1            [10]  520 	pop	af
   01F7 F1            [10]  521 	pop	af
   01F8 EB            [ 4]  522 	ex	de,hl
                            523 ;src/main.c:154: waistTile = getTilePtr(mapa, prota.x - 1, prota.y + ALTO_PROTA/2);
   01F9 3Ar35r00      [13]  524 	ld	a, (#(_prota + 0x0001) + 0)
   01FC C6 0B         [ 7]  525 	add	a, #0x0B
   01FE 47            [ 4]  526 	ld	b,a
   01FF 3Ar34r00      [13]  527 	ld	a, (#_prota + 0)
   0202 C6 FF         [ 7]  528 	add	a,#0xFF
   0204 D5            [11]  529 	push	de
   0205 C5            [11]  530 	push	bc
   0206 33            [ 6]  531 	inc	sp
   0207 F5            [11]  532 	push	af
   0208 33            [ 6]  533 	inc	sp
   0209 2Ar00r00      [16]  534 	ld	hl,(_mapa)
   020C E5            [11]  535 	push	hl
   020D CDr00r00      [17]  536 	call	_getTilePtr
   0210 F1            [10]  537 	pop	af
   0211 F1            [10]  538 	pop	af
   0212 4D            [ 4]  539 	ld	c,l
   0213 44            [ 4]  540 	ld	b,h
   0214 D1            [10]  541 	pop	de
                            542 ;src/main.c:155: break;
   0215 18 78         [12]  543 	jr	00105$
                            544 ;src/main.c:156: case 2:
   0217                     545 00103$:
                            546 ;src/main.c:157: headTile   = getTilePtr(mapa, prota.x, prota.y - 2);
   0217 3Ar35r00      [13]  547 	ld	a, (#(_prota + 0x0001) + 0)
   021A C6 FE         [ 7]  548 	add	a,#0xFE
   021C 21r34r00      [10]  549 	ld	hl, #_prota + 0
   021F 56            [ 7]  550 	ld	d,(hl)
   0220 C5            [11]  551 	push	bc
   0221 F5            [11]  552 	push	af
   0222 33            [ 6]  553 	inc	sp
   0223 D5            [11]  554 	push	de
   0224 33            [ 6]  555 	inc	sp
   0225 2Ar00r00      [16]  556 	ld	hl,(_mapa)
   0228 E5            [11]  557 	push	hl
   0229 CDr00r00      [17]  558 	call	_getTilePtr
   022C F1            [10]  559 	pop	af
   022D F1            [10]  560 	pop	af
   022E C1            [10]  561 	pop	bc
   022F 33            [ 6]  562 	inc	sp
   0230 33            [ 6]  563 	inc	sp
   0231 E5            [11]  564 	push	hl
                            565 ;src/main.c:158: feetTile   = getTilePtr(mapa, prota.x + G_HERO_W - 4, prota.y - 2);
   0232 21r35r00      [10]  566 	ld	hl, #(_prota + 0x0001) + 0
   0235 56            [ 7]  567 	ld	d,(hl)
   0236 15            [ 4]  568 	dec	d
   0237 15            [ 4]  569 	dec	d
   0238 3Ar34r00      [13]  570 	ld	a, (#_prota + 0)
   023B C6 03         [ 7]  571 	add	a, #0x03
   023D C5            [11]  572 	push	bc
   023E D5            [11]  573 	push	de
   023F 33            [ 6]  574 	inc	sp
   0240 F5            [11]  575 	push	af
   0241 33            [ 6]  576 	inc	sp
   0242 2Ar00r00      [16]  577 	ld	hl,(_mapa)
   0245 E5            [11]  578 	push	hl
   0246 CDr00r00      [17]  579 	call	_getTilePtr
   0249 F1            [10]  580 	pop	af
   024A F1            [10]  581 	pop	af
   024B EB            [ 4]  582 	ex	de,hl
   024C C1            [10]  583 	pop	bc
                            584 ;src/main.c:159: *waistTile = 0;
   024D 21 00 00      [10]  585 	ld	hl,#0x0000
   0250 36 00         [10]  586 	ld	(hl),#0x00
                            587 ;src/main.c:160: break;
   0252 18 3B         [12]  588 	jr	00105$
                            589 ;src/main.c:161: case 3:
   0254                     590 00104$:
                            591 ;src/main.c:162: headTile  = getTilePtr(mapa, prota.x, prota.y + ALTO_PROTA  );
   0254 3Ar35r00      [13]  592 	ld	a, (#(_prota + 0x0001) + 0)
   0257 C6 16         [ 7]  593 	add	a, #0x16
   0259 21r34r00      [10]  594 	ld	hl, #_prota + 0
   025C 56            [ 7]  595 	ld	d,(hl)
   025D C5            [11]  596 	push	bc
   025E F5            [11]  597 	push	af
   025F 33            [ 6]  598 	inc	sp
   0260 D5            [11]  599 	push	de
   0261 33            [ 6]  600 	inc	sp
   0262 2Ar00r00      [16]  601 	ld	hl,(_mapa)
   0265 E5            [11]  602 	push	hl
   0266 CDr00r00      [17]  603 	call	_getTilePtr
   0269 F1            [10]  604 	pop	af
   026A F1            [10]  605 	pop	af
   026B C1            [10]  606 	pop	bc
   026C 33            [ 6]  607 	inc	sp
   026D 33            [ 6]  608 	inc	sp
   026E E5            [11]  609 	push	hl
                            610 ;src/main.c:163: feetTile  = getTilePtr(mapa, prota.x + G_HERO_W - 4, prota.y + ALTO_PROTA );
   026F 3Ar35r00      [13]  611 	ld	a, (#(_prota + 0x0001) + 0)
   0272 C6 16         [ 7]  612 	add	a, #0x16
   0274 57            [ 4]  613 	ld	d,a
   0275 3Ar34r00      [13]  614 	ld	a, (#_prota + 0)
   0278 C6 03         [ 7]  615 	add	a, #0x03
   027A C5            [11]  616 	push	bc
   027B D5            [11]  617 	push	de
   027C 33            [ 6]  618 	inc	sp
   027D F5            [11]  619 	push	af
   027E 33            [ 6]  620 	inc	sp
   027F 2Ar00r00      [16]  621 	ld	hl,(_mapa)
   0282 E5            [11]  622 	push	hl
   0283 CDr00r00      [17]  623 	call	_getTilePtr
   0286 F1            [10]  624 	pop	af
   0287 F1            [10]  625 	pop	af
   0288 EB            [ 4]  626 	ex	de,hl
   0289 C1            [10]  627 	pop	bc
                            628 ;src/main.c:164: *waistTile = 0;
   028A 21 00 00      [10]  629 	ld	hl,#0x0000
   028D 36 00         [10]  630 	ld	(hl),#0x00
                            631 ;src/main.c:166: }
   028F                     632 00105$:
                            633 ;src/main.c:168: if (*headTile > 2 || *feetTile > 2 || *waistTile > 2)
   028F E1            [10]  634 	pop	hl
   0290 E5            [11]  635 	push	hl
   0291 6E            [ 7]  636 	ld	l,(hl)
   0292 3E 02         [ 7]  637 	ld	a,#0x02
   0294 95            [ 4]  638 	sub	a, l
   0295 38 0E         [12]  639 	jr	C,00106$
   0297 1A            [ 7]  640 	ld	a,(de)
   0298 5F            [ 4]  641 	ld	e,a
   0299 3E 02         [ 7]  642 	ld	a,#0x02
   029B 93            [ 4]  643 	sub	a, e
   029C 38 07         [12]  644 	jr	C,00106$
   029E 0A            [ 7]  645 	ld	a,(bc)
   029F 4F            [ 4]  646 	ld	c,a
   02A0 3E 02         [ 7]  647 	ld	a,#0x02
   02A2 91            [ 4]  648 	sub	a, c
   02A3 30 04         [12]  649 	jr	NC,00107$
   02A5                     650 00106$:
                            651 ;src/main.c:169: return 1;
   02A5 2E 01         [ 7]  652 	ld	l,#0x01
   02A7 18 02         [12]  653 	jr	00110$
   02A9                     654 00107$:
                            655 ;src/main.c:171: return 0;
   02A9 2E 00         [ 7]  656 	ld	l,#0x00
   02AB                     657 00110$:
   02AB DD F9         [10]  658 	ld	sp, ix
   02AD DD E1         [14]  659 	pop	ix
   02AF C9            [10]  660 	ret
                            661 ;src/main.c:174: void dibujarEnemigo(TEnemy *enemy) {
                            662 ;	---------------------------------
                            663 ; Function dibujarEnemigo
                            664 ; ---------------------------------
   02B0                     665 _dibujarEnemigo::
   02B0 DD E5         [15]  666 	push	ix
   02B2 DD 21 00 00   [14]  667 	ld	ix,#0
   02B6 DD 39         [15]  668 	add	ix,sp
                            669 ;src/main.c:175: u8* pvmem = cpct_getScreenPtr(CPCT_VMEM_START, enemy->x, enemy->y);
   02B8 DD 4E 04      [19]  670 	ld	c,4 (ix)
   02BB DD 46 05      [19]  671 	ld	b,5 (ix)
   02BE 69            [ 4]  672 	ld	l, c
   02BF 60            [ 4]  673 	ld	h, b
   02C0 23            [ 6]  674 	inc	hl
   02C1 56            [ 7]  675 	ld	d,(hl)
   02C2 0A            [ 7]  676 	ld	a,(bc)
   02C3 C5            [11]  677 	push	bc
   02C4 D5            [11]  678 	push	de
   02C5 33            [ 6]  679 	inc	sp
   02C6 F5            [11]  680 	push	af
   02C7 33            [ 6]  681 	inc	sp
   02C8 21 00 C0      [10]  682 	ld	hl,#0xC000
   02CB E5            [11]  683 	push	hl
   02CC CDr00r00      [17]  684 	call	_cpct_getScreenPtr
   02CF EB            [ 4]  685 	ex	de,hl
                            686 ;src/main.c:176: cpct_drawSpriteMaskedAlignedTable (enemy->sprite, pvmem, G_ENEMY_W, G_ENEMY_H, g_tablatrans);
   02D0 E1            [10]  687 	pop	hl
   02D1 01 04 00      [10]  688 	ld	bc, #0x0004
   02D4 09            [11]  689 	add	hl, bc
   02D5 4E            [ 7]  690 	ld	c,(hl)
   02D6 23            [ 6]  691 	inc	hl
   02D7 46            [ 7]  692 	ld	b,(hl)
   02D8 21r00r2E      [10]  693 	ld	hl,#_g_tablatrans
   02DB E5            [11]  694 	push	hl
   02DC 21 04 16      [10]  695 	ld	hl,#0x1604
   02DF E5            [11]  696 	push	hl
   02E0 D5            [11]  697 	push	de
   02E1 C5            [11]  698 	push	bc
   02E2 CDr00r00      [17]  699 	call	_cpct_drawSpriteMaskedAlignedTable
   02E5 DD E1         [14]  700 	pop	ix
   02E7 C9            [10]  701 	ret
                            702 ;src/main.c:179: void dibujarExplosion(TEnemy *enemy) {
                            703 ;	---------------------------------
                            704 ; Function dibujarExplosion
                            705 ; ---------------------------------
   02E8                     706 _dibujarExplosion::
   02E8 DD E5         [15]  707 	push	ix
   02EA DD 21 00 00   [14]  708 	ld	ix,#0
   02EE DD 39         [15]  709 	add	ix,sp
                            710 ;src/main.c:180: u8* pvmem = cpct_getScreenPtr(CPCT_VMEM_START, enemy->x, enemy->y);
   02F0 DD 4E 04      [19]  711 	ld	c,4 (ix)
   02F3 DD 46 05      [19]  712 	ld	b,5 (ix)
   02F6 69            [ 4]  713 	ld	l, c
   02F7 60            [ 4]  714 	ld	h, b
   02F8 23            [ 6]  715 	inc	hl
   02F9 56            [ 7]  716 	ld	d,(hl)
   02FA 0A            [ 7]  717 	ld	a,(bc)
   02FB 47            [ 4]  718 	ld	b,a
   02FC D5            [11]  719 	push	de
   02FD 33            [ 6]  720 	inc	sp
   02FE C5            [11]  721 	push	bc
   02FF 33            [ 6]  722 	inc	sp
   0300 21 00 C0      [10]  723 	ld	hl,#0xC000
   0303 E5            [11]  724 	push	hl
   0304 CDr00r00      [17]  725 	call	_cpct_getScreenPtr
   0307 4D            [ 4]  726 	ld	c,l
   0308 44            [ 4]  727 	ld	b,h
                            728 ;src/main.c:181: cpct_drawSpriteMaskedAlignedTable (g_explosion, pvmem, G_EXPLOSION_W, G_EXPLOSION_H, g_tablatrans);
   0309 11r00r2E      [10]  729 	ld	de,#_g_tablatrans+0
   030C D5            [11]  730 	push	de
   030D 21 04 16      [10]  731 	ld	hl,#0x1604
   0310 E5            [11]  732 	push	hl
   0311 C5            [11]  733 	push	bc
   0312 21r00r00      [10]  734 	ld	hl,#_g_explosion
   0315 E5            [11]  735 	push	hl
   0316 CDr00r00      [17]  736 	call	_cpct_drawSpriteMaskedAlignedTable
   0319 DD E1         [14]  737 	pop	ix
   031B C9            [10]  738 	ret
                            739 ;src/main.c:184: void borrarExplosion() {
                            740 ;	---------------------------------
                            741 ; Function borrarExplosion
                            742 ; ---------------------------------
   031C                     743 _borrarExplosion::
   031C DD E5         [15]  744 	push	ix
   031E DD 21 00 00   [14]  745 	ld	ix,#0
   0322 DD 39         [15]  746 	add	ix,sp
   0324 F5            [11]  747 	push	af
   0325 3B            [ 6]  748 	dec	sp
                            749 ;src/main.c:187: u8 w = 4 + (enemy->px & 1);
   0326 21r02r00      [10]  750 	ld	hl, #_enemy + 2
   0329 4E            [ 7]  751 	ld	c,(hl)
   032A 79            [ 4]  752 	ld	a,c
   032B E6 01         [ 7]  753 	and	a, #0x01
   032D 47            [ 4]  754 	ld	b,a
   032E 04            [ 4]  755 	inc	b
   032F 04            [ 4]  756 	inc	b
   0330 04            [ 4]  757 	inc	b
   0331 04            [ 4]  758 	inc	b
                            759 ;src/main.c:190: u8 h = 7 + (enemy->py & 2 ? 1 : 0);
   0332 21r03r00      [10]  760 	ld	hl, #_enemy + 3
   0335 5E            [ 7]  761 	ld	e,(hl)
   0336 CB 4B         [ 8]  762 	bit	1, e
   0338 28 04         [12]  763 	jr	Z,00103$
   033A 3E 01         [ 7]  764 	ld	a,#0x01
   033C 18 02         [12]  765 	jr	00104$
   033E                     766 00103$:
   033E 3E 00         [ 7]  767 	ld	a,#0x00
   0340                     768 00104$:
   0340 C6 07         [ 7]  769 	add	a, #0x07
   0342 DD 77 FD      [19]  770 	ld	-3 (ix),a
                            771 ;src/main.c:192: cpct_etm_drawTileBox2x4 (enemy->px / 2, (enemy->py - ORIGEN_MAPA_Y)/4, w, h, g_map1_W, p, mapa);
   0345 FD 2Ar00r00   [20]  772 	ld	iy,(_mapa)
   0349 16 00         [ 7]  773 	ld	d,#0x00
   034B 7B            [ 4]  774 	ld	a,e
   034C C6 E8         [ 7]  775 	add	a,#0xE8
   034E DD 77 FE      [19]  776 	ld	-2 (ix),a
   0351 7A            [ 4]  777 	ld	a,d
   0352 CE FF         [ 7]  778 	adc	a,#0xFF
   0354 DD 77 FF      [19]  779 	ld	-1 (ix),a
   0357 DD 6E FE      [19]  780 	ld	l,-2 (ix)
   035A DD 66 FF      [19]  781 	ld	h,-1 (ix)
   035D DD CB FF 7E   [20]  782 	bit	7, -1 (ix)
   0361 28 04         [12]  783 	jr	Z,00105$
   0363 21 EB FF      [10]  784 	ld	hl,#0xFFEB
   0366 19            [11]  785 	add	hl,de
   0367                     786 00105$:
   0367 CB 2C         [ 8]  787 	sra	h
   0369 CB 1D         [ 8]  788 	rr	l
   036B CB 2C         [ 8]  789 	sra	h
   036D CB 1D         [ 8]  790 	rr	l
   036F 55            [ 4]  791 	ld	d,l
   0370 CB 39         [ 8]  792 	srl	c
   0372 FD E5         [15]  793 	push	iy
   0374 21 F0 C0      [10]  794 	ld	hl,#0xC0F0
   0377 E5            [11]  795 	push	hl
   0378 3E 28         [ 7]  796 	ld	a,#0x28
   037A F5            [11]  797 	push	af
   037B 33            [ 6]  798 	inc	sp
   037C DD 7E FD      [19]  799 	ld	a,-3 (ix)
   037F F5            [11]  800 	push	af
   0380 33            [ 6]  801 	inc	sp
   0381 C5            [11]  802 	push	bc
   0382 33            [ 6]  803 	inc	sp
   0383 D5            [11]  804 	push	de
   0384 33            [ 6]  805 	inc	sp
   0385 79            [ 4]  806 	ld	a,c
   0386 F5            [11]  807 	push	af
   0387 33            [ 6]  808 	inc	sp
   0388 CDr00r00      [17]  809 	call	_cpct_etm_drawTileBox2x4
   038B DD F9         [10]  810 	ld	sp, ix
   038D DD E1         [14]  811 	pop	ix
   038F C9            [10]  812 	ret
                            813 ;src/main.c:196: void borrarEnemigo(TEnemy *enemy) {
                            814 ;	---------------------------------
                            815 ; Function borrarEnemigo
                            816 ; ---------------------------------
   0390                     817 _borrarEnemigo::
   0390 DD E5         [15]  818 	push	ix
   0392 DD 21 00 00   [14]  819 	ld	ix,#0
   0396 DD 39         [15]  820 	add	ix,sp
   0398 21 FA FF      [10]  821 	ld	hl,#-6
   039B 39            [11]  822 	add	hl,sp
   039C F9            [ 6]  823 	ld	sp,hl
                            824 ;src/main.c:200: u8 w = 4 + (enemy->px & 1);
   039D DD 4E 04      [19]  825 	ld	c,4 (ix)
   03A0 DD 46 05      [19]  826 	ld	b,5 (ix)
   03A3 69            [ 4]  827 	ld	l, c
   03A4 60            [ 4]  828 	ld	h, b
   03A5 23            [ 6]  829 	inc	hl
   03A6 23            [ 6]  830 	inc	hl
   03A7 5E            [ 7]  831 	ld	e,(hl)
   03A8 7B            [ 4]  832 	ld	a,e
   03A9 E6 01         [ 7]  833 	and	a, #0x01
   03AB C6 04         [ 7]  834 	add	a, #0x04
   03AD DD 77 FB      [19]  835 	ld	-5 (ix),a
                            836 ;src/main.c:203: u8 h = 7 + (enemy->py & 2 ? 1 : 0);
   03B0 69            [ 4]  837 	ld	l, c
   03B1 60            [ 4]  838 	ld	h, b
   03B2 23            [ 6]  839 	inc	hl
   03B3 23            [ 6]  840 	inc	hl
   03B4 23            [ 6]  841 	inc	hl
   03B5 56            [ 7]  842 	ld	d,(hl)
   03B6 CB 4A         [ 8]  843 	bit	1, d
   03B8 28 04         [12]  844 	jr	Z,00103$
   03BA 3E 01         [ 7]  845 	ld	a,#0x01
   03BC 18 02         [12]  846 	jr	00104$
   03BE                     847 00103$:
   03BE 3E 00         [ 7]  848 	ld	a,#0x00
   03C0                     849 00104$:
   03C0 C6 07         [ 7]  850 	add	a, #0x07
   03C2 DD 77 FA      [19]  851 	ld	-6 (ix),a
                            852 ;src/main.c:205: cpct_etm_drawTileBox2x4 (enemy->px / 2, (enemy->py - ORIGEN_MAPA_Y)/4, w, h, g_map1_W, p, mapa);
   03C5 FD 2Ar00r00   [20]  853 	ld	iy,(_mapa)
   03C9 DD 72 FE      [19]  854 	ld	-2 (ix),d
   03CC DD 36 FF 00   [19]  855 	ld	-1 (ix),#0x00
   03D0 DD 7E FE      [19]  856 	ld	a,-2 (ix)
   03D3 C6 E8         [ 7]  857 	add	a,#0xE8
   03D5 DD 77 FC      [19]  858 	ld	-4 (ix),a
   03D8 DD 7E FF      [19]  859 	ld	a,-1 (ix)
   03DB CE FF         [ 7]  860 	adc	a,#0xFF
   03DD DD 77 FD      [19]  861 	ld	-3 (ix),a
   03E0 DD 56 FC      [19]  862 	ld	d,-4 (ix)
   03E3 DD 6E FD      [19]  863 	ld	l,-3 (ix)
   03E6 DD CB FD 7E   [20]  864 	bit	7, -3 (ix)
   03EA 28 0C         [12]  865 	jr	Z,00105$
   03EC DD 7E FE      [19]  866 	ld	a,-2 (ix)
   03EF C6 EB         [ 7]  867 	add	a, #0xEB
   03F1 57            [ 4]  868 	ld	d,a
   03F2 DD 7E FF      [19]  869 	ld	a,-1 (ix)
   03F5 CE FF         [ 7]  870 	adc	a, #0xFF
   03F7 6F            [ 4]  871 	ld	l,a
   03F8                     872 00105$:
   03F8 CB 2D         [ 8]  873 	sra	l
   03FA CB 1A         [ 8]  874 	rr	d
   03FC CB 2D         [ 8]  875 	sra	l
   03FE CB 1A         [ 8]  876 	rr	d
   0400 CB 3B         [ 8]  877 	srl	e
   0402 C5            [11]  878 	push	bc
   0403 FD E5         [15]  879 	push	iy
   0405 21 F0 C0      [10]  880 	ld	hl,#0xC0F0
   0408 E5            [11]  881 	push	hl
   0409 3E 28         [ 7]  882 	ld	a,#0x28
   040B F5            [11]  883 	push	af
   040C 33            [ 6]  884 	inc	sp
   040D DD 66 FA      [19]  885 	ld	h,-6 (ix)
   0410 DD 6E FB      [19]  886 	ld	l,-5 (ix)
   0413 E5            [11]  887 	push	hl
   0414 D5            [11]  888 	push	de
   0415 CDr00r00      [17]  889 	call	_cpct_etm_drawTileBox2x4
   0418 C1            [10]  890 	pop	bc
                            891 ;src/main.c:207: enemy->mover = NO;
   0419 21 06 00      [10]  892 	ld	hl,#0x0006
   041C 09            [11]  893 	add	hl,bc
   041D 36 00         [10]  894 	ld	(hl),#0x00
   041F DD F9         [10]  895 	ld	sp, ix
   0421 DD E1         [14]  896 	pop	ix
   0423 C9            [10]  897 	ret
                            898 ;src/main.c:210: void redibujarEnemigo(TEnemy *enemy) {
                            899 ;	---------------------------------
                            900 ; Function redibujarEnemigo
                            901 ; ---------------------------------
   0424                     902 _redibujarEnemigo::
   0424 DD E5         [15]  903 	push	ix
   0426 DD 21 00 00   [14]  904 	ld	ix,#0
   042A DD 39         [15]  905 	add	ix,sp
                            906 ;src/main.c:211: borrarEnemigo(enemy);
   042C DD 6E 04      [19]  907 	ld	l,4 (ix)
   042F DD 66 05      [19]  908 	ld	h,5 (ix)
   0432 E5            [11]  909 	push	hl
   0433 CDr90r03      [17]  910 	call	_borrarEnemigo
   0436 F1            [10]  911 	pop	af
                            912 ;src/main.c:212: enemy->px = enemy->x;
   0437 DD 4E 04      [19]  913 	ld	c,4 (ix)
   043A DD 46 05      [19]  914 	ld	b,5 (ix)
   043D 59            [ 4]  915 	ld	e, c
   043E 50            [ 4]  916 	ld	d, b
   043F 13            [ 6]  917 	inc	de
   0440 13            [ 6]  918 	inc	de
   0441 0A            [ 7]  919 	ld	a,(bc)
   0442 12            [ 7]  920 	ld	(de),a
                            921 ;src/main.c:213: enemy->py = enemy->y;
   0443 59            [ 4]  922 	ld	e, c
   0444 50            [ 4]  923 	ld	d, b
   0445 13            [ 6]  924 	inc	de
   0446 13            [ 6]  925 	inc	de
   0447 13            [ 6]  926 	inc	de
   0448 69            [ 4]  927 	ld	l, c
   0449 60            [ 4]  928 	ld	h, b
   044A 23            [ 6]  929 	inc	hl
   044B 7E            [ 7]  930 	ld	a,(hl)
   044C 12            [ 7]  931 	ld	(de),a
                            932 ;src/main.c:214: dibujarEnemigo(enemy);
   044D C5            [11]  933 	push	bc
   044E CDrB0r02      [17]  934 	call	_dibujarEnemigo
   0451 F1            [10]  935 	pop	af
   0452 DD E1         [14]  936 	pop	ix
   0454 C9            [10]  937 	ret
                            938 ;src/main.c:217: u8 checkEnemyCollision(u8 direction, TEnemy *enemy){
                            939 ;	---------------------------------
                            940 ; Function checkEnemyCollision
                            941 ; ---------------------------------
   0455                     942 _checkEnemyCollision::
   0455 DD E5         [15]  943 	push	ix
   0457 DD 21 00 00   [14]  944 	ld	ix,#0
   045B DD 39         [15]  945 	add	ix,sp
   045D 21 F7 FF      [10]  946 	ld	hl,#-9
   0460 39            [11]  947 	add	hl,sp
   0461 F9            [ 6]  948 	ld	sp,hl
                            949 ;src/main.c:219: u8 colisiona = 1;
   0462 DD 36 F7 01   [19]  950 	ld	-9 (ix),#0x01
                            951 ;src/main.c:221: switch (direction) {
   0466 3E 03         [ 7]  952 	ld	a,#0x03
   0468 DD 96 04      [19]  953 	sub	a, 4 (ix)
   046B DAr48r08      [10]  954 	jp	C,00165$
                            955 ;src/main.c:223: if( *getTilePtr(mapa, enemy->x + G_ENEMY_W + 1, enemy->y) <= 2
   046E DD 4E 05      [19]  956 	ld	c,5 (ix)
   0471 DD 46 06      [19]  957 	ld	b,6 (ix)
   0474 0A            [ 7]  958 	ld	a,(bc)
   0475 5F            [ 4]  959 	ld	e,a
   0476 21 01 00      [10]  960 	ld	hl,#0x0001
   0479 09            [11]  961 	add	hl,bc
   047A DD 75 F8      [19]  962 	ld	-8 (ix),l
   047D DD 74 F9      [19]  963 	ld	-7 (ix),h
   0480 DD 6E F8      [19]  964 	ld	l,-8 (ix)
   0483 DD 66 F9      [19]  965 	ld	h,-7 (ix)
   0486 56            [ 7]  966 	ld	d,(hl)
                            967 ;src/main.c:236: enemy->muerto = SI;
   0487 21 08 00      [10]  968 	ld	hl,#0x0008
   048A 09            [11]  969 	add	hl,bc
   048B DD 75 FA      [19]  970 	ld	-6 (ix),l
   048E DD 74 FB      [19]  971 	ld	-5 (ix),h
                            972 ;src/main.c:243: enemy->mira = M_izquierda;
   0491 21 07 00      [10]  973 	ld	hl,#0x0007
   0494 09            [11]  974 	add	hl,bc
   0495 DD 75 FC      [19]  975 	ld	-4 (ix),l
   0498 DD 74 FD      [19]  976 	ld	-3 (ix),h
                            977 ;src/main.c:221: switch (direction) {
   049B D5            [11]  978 	push	de
   049C DD 5E 04      [19]  979 	ld	e,4 (ix)
   049F 16 00         [ 7]  980 	ld	d,#0x00
   04A1 21rA9r04      [10]  981 	ld	hl,#00268$
   04A4 19            [11]  982 	add	hl,de
   04A5 19            [11]  983 	add	hl,de
   04A6 19            [11]  984 	add	hl,de
   04A7 D1            [10]  985 	pop	de
   04A8 E9            [ 4]  986 	jp	(hl)
   04A9                     987 00268$:
   04A9 C3rB5r04      [10]  988 	jp	00101$
   04AC C3r9Dr05      [10]  989 	jp	00117$
   04AF C3r81r06      [10]  990 	jp	00133$
   04B2 C3r5Fr07      [10]  991 	jp	00149$
                            992 ;src/main.c:222: case 0:
   04B5                     993 00101$:
                            994 ;src/main.c:223: if( *getTilePtr(mapa, enemy->x + G_ENEMY_W + 1, enemy->y) <= 2
   04B5 7B            [ 4]  995 	ld	a,e
   04B6 C6 05         [ 7]  996 	add	a, #0x05
   04B8 C5            [11]  997 	push	bc
   04B9 D5            [11]  998 	push	de
   04BA 33            [ 6]  999 	inc	sp
   04BB F5            [11] 1000 	push	af
   04BC 33            [ 6] 1001 	inc	sp
   04BD 2Ar00r00      [16] 1002 	ld	hl,(_mapa)
   04C0 E5            [11] 1003 	push	hl
   04C1 CDr00r00      [17] 1004 	call	_getTilePtr
   04C4 F1            [10] 1005 	pop	af
   04C5 F1            [10] 1006 	pop	af
   04C6 C1            [10] 1007 	pop	bc
   04C7 5E            [ 7] 1008 	ld	e,(hl)
   04C8 3E 02         [ 7] 1009 	ld	a,#0x02
   04CA 93            [ 4] 1010 	sub	a, e
   04CB DAr92r05      [10] 1011 	jp	C,00113$
                           1012 ;src/main.c:224: && *getTilePtr(mapa, enemy->x + G_ENEMY_W + 1, enemy->y + G_ENEMY_H/2) <= 2
   04CE DD 6E F8      [19] 1013 	ld	l,-8 (ix)
   04D1 DD 66 F9      [19] 1014 	ld	h,-7 (ix)
   04D4 7E            [ 7] 1015 	ld	a,(hl)
   04D5 C6 0B         [ 7] 1016 	add	a, #0x0B
   04D7 57            [ 4] 1017 	ld	d,a
   04D8 0A            [ 7] 1018 	ld	a,(bc)
   04D9 C6 05         [ 7] 1019 	add	a, #0x05
   04DB C5            [11] 1020 	push	bc
   04DC D5            [11] 1021 	push	de
   04DD 33            [ 6] 1022 	inc	sp
   04DE F5            [11] 1023 	push	af
   04DF 33            [ 6] 1024 	inc	sp
   04E0 2Ar00r00      [16] 1025 	ld	hl,(_mapa)
   04E3 E5            [11] 1026 	push	hl
   04E4 CDr00r00      [17] 1027 	call	_getTilePtr
   04E7 F1            [10] 1028 	pop	af
   04E8 F1            [10] 1029 	pop	af
   04E9 C1            [10] 1030 	pop	bc
   04EA 5E            [ 7] 1031 	ld	e,(hl)
   04EB 3E 02         [ 7] 1032 	ld	a,#0x02
   04ED 93            [ 4] 1033 	sub	a, e
   04EE DAr92r05      [10] 1034 	jp	C,00113$
                           1035 ;src/main.c:225: && *getTilePtr(mapa, enemy->x + G_ENEMY_W + 1, enemy->y + G_ENEMY_H) <= 2)
   04F1 DD 6E F8      [19] 1036 	ld	l,-8 (ix)
   04F4 DD 66 F9      [19] 1037 	ld	h,-7 (ix)
   04F7 7E            [ 7] 1038 	ld	a,(hl)
   04F8 C6 16         [ 7] 1039 	add	a, #0x16
   04FA 57            [ 4] 1040 	ld	d,a
   04FB 0A            [ 7] 1041 	ld	a,(bc)
   04FC C6 05         [ 7] 1042 	add	a, #0x05
   04FE C5            [11] 1043 	push	bc
   04FF D5            [11] 1044 	push	de
   0500 33            [ 6] 1045 	inc	sp
   0501 F5            [11] 1046 	push	af
   0502 33            [ 6] 1047 	inc	sp
   0503 2Ar00r00      [16] 1048 	ld	hl,(_mapa)
   0506 E5            [11] 1049 	push	hl
   0507 CDr00r00      [17] 1050 	call	_getTilePtr
   050A F1            [10] 1051 	pop	af
   050B F1            [10] 1052 	pop	af
   050C C1            [10] 1053 	pop	bc
   050D 5E            [ 7] 1054 	ld	e,(hl)
   050E 3E 02         [ 7] 1055 	ld	a,#0x02
   0510 93            [ 4] 1056 	sub	a, e
   0511 DAr92r05      [10] 1057 	jp	C,00113$
                           1058 ;src/main.c:227: if( (cu.y + G_KNIFEX_0_H) < enemy->y || cu.y  > (enemy->y + G_ENEMY_H) ){
   0514 21r3Dr00      [10] 1059 	ld	hl, #_cu + 1
   0517 5E            [ 7] 1060 	ld	e,(hl)
   0518 16 00         [ 7] 1061 	ld	d,#0x00
   051A 21 04 00      [10] 1062 	ld	hl,#0x0004
   051D 19            [11] 1063 	add	hl,de
   051E DD 75 FE      [19] 1064 	ld	-2 (ix),l
   0521 DD 74 FF      [19] 1065 	ld	-1 (ix),h
   0524 DD 6E F8      [19] 1066 	ld	l,-8 (ix)
   0527 DD 66 F9      [19] 1067 	ld	h,-7 (ix)
   052A 6E            [ 7] 1068 	ld	l,(hl)
   052B 26 00         [ 7] 1069 	ld	h,#0x00
   052D DD 7E FE      [19] 1070 	ld	a,-2 (ix)
   0530 95            [ 4] 1071 	sub	a, l
   0531 DD 7E FF      [19] 1072 	ld	a,-1 (ix)
   0534 9C            [ 4] 1073 	sbc	a, h
   0535 E2r3Ar05      [10] 1074 	jp	PO, 00269$
   0538 EE 80         [ 7] 1075 	xor	a, #0x80
   053A                    1076 00269$:
   053A FAr4Fr05      [10] 1077 	jp	M,00108$
   053D D5            [11] 1078 	push	de
   053E 11 16 00      [10] 1079 	ld	de,#0x0016
   0541 19            [11] 1080 	add	hl, de
   0542 D1            [10] 1081 	pop	de
   0543 7D            [ 4] 1082 	ld	a,l
   0544 93            [ 4] 1083 	sub	a, e
   0545 7C            [ 4] 1084 	ld	a,h
   0546 9A            [ 4] 1085 	sbc	a, d
   0547 E2r4Cr05      [10] 1086 	jp	PO, 00270$
   054A EE 80         [ 7] 1087 	xor	a, #0x80
   054C                    1088 00270$:
   054C F2r56r05      [10] 1089 	jp	P,00109$
   054F                    1090 00108$:
                           1091 ;src/main.c:228: colisiona = 0;
   054F DD 36 F7 00   [19] 1092 	ld	-9 (ix),#0x00
   0553 C3r48r08      [10] 1093 	jp	00165$
   0556                    1094 00109$:
                           1095 ;src/main.c:231: if(cu.x > enemy->x){ //si el cu esta abajo
   0556 21r3Cr00      [10] 1096 	ld	hl, #_cu + 0
   0559 5E            [ 7] 1097 	ld	e,(hl)
   055A 0A            [ 7] 1098 	ld	a,(bc)
   055B 4F            [ 4] 1099 	ld	c,a
   055C 93            [ 4] 1100 	sub	a, e
   055D 30 2C         [12] 1101 	jr	NC,00106$
                           1102 ;src/main.c:232: if( cu.x - (enemy->x + G_ENEMY_W) > 1){ // si hay espacio entre el enemigo y el cu
   055F 6B            [ 4] 1103 	ld	l,e
   0560 26 00         [ 7] 1104 	ld	h,#0x00
   0562 06 00         [ 7] 1105 	ld	b,#0x00
   0564 03            [ 6] 1106 	inc	bc
   0565 03            [ 6] 1107 	inc	bc
   0566 03            [ 6] 1108 	inc	bc
   0567 03            [ 6] 1109 	inc	bc
   0568 BF            [ 4] 1110 	cp	a, a
   0569 ED 42         [15] 1111 	sbc	hl, bc
   056B 3E 01         [ 7] 1112 	ld	a,#0x01
   056D BD            [ 4] 1113 	cp	a, l
   056E 3E 00         [ 7] 1114 	ld	a,#0x00
   0570 9C            [ 4] 1115 	sbc	a, h
   0571 E2r76r05      [10] 1116 	jp	PO, 00271$
   0574 EE 80         [ 7] 1117 	xor	a, #0x80
   0576                    1118 00271$:
   0576 F2r80r05      [10] 1119 	jp	P,00103$
                           1120 ;src/main.c:233: colisiona = 0;
   0579 DD 36 F7 00   [19] 1121 	ld	-9 (ix),#0x00
   057D C3r48r08      [10] 1122 	jp	00165$
   0580                    1123 00103$:
                           1124 ;src/main.c:236: enemy->muerto = SI;
   0580 DD 6E FA      [19] 1125 	ld	l,-6 (ix)
   0583 DD 66 FB      [19] 1126 	ld	h,-5 (ix)
   0586 36 01         [10] 1127 	ld	(hl),#0x01
   0588 C3r48r08      [10] 1128 	jp	00165$
   058B                    1129 00106$:
                           1130 ;src/main.c:239: colisiona = 0;
   058B DD 36 F7 00   [19] 1131 	ld	-9 (ix),#0x00
   058F C3r48r08      [10] 1132 	jp	00165$
   0592                    1133 00113$:
                           1134 ;src/main.c:243: enemy->mira = M_izquierda;
   0592 DD 6E FC      [19] 1135 	ld	l,-4 (ix)
   0595 DD 66 FD      [19] 1136 	ld	h,-3 (ix)
   0598 36 01         [10] 1137 	ld	(hl),#0x01
                           1138 ;src/main.c:245: break;
   059A C3r48r08      [10] 1139 	jp	00165$
                           1140 ;src/main.c:246: case 1:
   059D                    1141 00117$:
                           1142 ;src/main.c:247: if( *getTilePtr(mapa, enemy->x - 1, enemy->y) <= 2
   059D 1D            [ 4] 1143 	dec	e
   059E C5            [11] 1144 	push	bc
   059F D5            [11] 1145 	push	de
   05A0 2Ar00r00      [16] 1146 	ld	hl,(_mapa)
   05A3 E5            [11] 1147 	push	hl
   05A4 CDr00r00      [17] 1148 	call	_getTilePtr
   05A7 F1            [10] 1149 	pop	af
   05A8 F1            [10] 1150 	pop	af
   05A9 C1            [10] 1151 	pop	bc
   05AA 5E            [ 7] 1152 	ld	e,(hl)
   05AB 3E 02         [ 7] 1153 	ld	a,#0x02
   05AD 93            [ 4] 1154 	sub	a, e
   05AE DAr76r06      [10] 1155 	jp	C,00129$
                           1156 ;src/main.c:248: && *getTilePtr(mapa, enemy->x - 1, enemy->y + G_ENEMY_H/2) <= 2
   05B1 DD 6E F8      [19] 1157 	ld	l,-8 (ix)
   05B4 DD 66 F9      [19] 1158 	ld	h,-7 (ix)
   05B7 7E            [ 7] 1159 	ld	a,(hl)
   05B8 C6 0B         [ 7] 1160 	add	a, #0x0B
   05BA 57            [ 4] 1161 	ld	d,a
   05BB 0A            [ 7] 1162 	ld	a,(bc)
   05BC C6 FF         [ 7] 1163 	add	a,#0xFF
   05BE C5            [11] 1164 	push	bc
   05BF D5            [11] 1165 	push	de
   05C0 33            [ 6] 1166 	inc	sp
   05C1 F5            [11] 1167 	push	af
   05C2 33            [ 6] 1168 	inc	sp
   05C3 2Ar00r00      [16] 1169 	ld	hl,(_mapa)
   05C6 E5            [11] 1170 	push	hl
   05C7 CDr00r00      [17] 1171 	call	_getTilePtr
   05CA F1            [10] 1172 	pop	af
   05CB F1            [10] 1173 	pop	af
   05CC C1            [10] 1174 	pop	bc
   05CD 5E            [ 7] 1175 	ld	e,(hl)
   05CE 3E 02         [ 7] 1176 	ld	a,#0x02
   05D0 93            [ 4] 1177 	sub	a, e
   05D1 DAr76r06      [10] 1178 	jp	C,00129$
                           1179 ;src/main.c:249: && *getTilePtr(mapa, enemy->x - 1, enemy->y + G_ENEMY_H) <= 2)
   05D4 DD 6E F8      [19] 1180 	ld	l,-8 (ix)
   05D7 DD 66 F9      [19] 1181 	ld	h,-7 (ix)
   05DA 7E            [ 7] 1182 	ld	a,(hl)
   05DB C6 16         [ 7] 1183 	add	a, #0x16
   05DD 57            [ 4] 1184 	ld	d,a
   05DE 0A            [ 7] 1185 	ld	a,(bc)
   05DF C6 FF         [ 7] 1186 	add	a,#0xFF
   05E1 C5            [11] 1187 	push	bc
   05E2 D5            [11] 1188 	push	de
   05E3 33            [ 6] 1189 	inc	sp
   05E4 F5            [11] 1190 	push	af
   05E5 33            [ 6] 1191 	inc	sp
   05E6 2Ar00r00      [16] 1192 	ld	hl,(_mapa)
   05E9 E5            [11] 1193 	push	hl
   05EA CDr00r00      [17] 1194 	call	_getTilePtr
   05ED F1            [10] 1195 	pop	af
   05EE F1            [10] 1196 	pop	af
   05EF C1            [10] 1197 	pop	bc
   05F0 5E            [ 7] 1198 	ld	e,(hl)
   05F1 3E 02         [ 7] 1199 	ld	a,#0x02
   05F3 93            [ 4] 1200 	sub	a, e
   05F4 DAr76r06      [10] 1201 	jp	C,00129$
                           1202 ;src/main.c:251: if( (cu.y + G_KNIFEX_0_H) < enemy->y || cu.y  > (enemy->y + G_ENEMY_H) ){
   05F7 21r3Dr00      [10] 1203 	ld	hl, #_cu + 1
   05FA 5E            [ 7] 1204 	ld	e,(hl)
   05FB 16 00         [ 7] 1205 	ld	d,#0x00
   05FD 21 04 00      [10] 1206 	ld	hl,#0x0004
   0600 19            [11] 1207 	add	hl,de
   0601 DD 75 FE      [19] 1208 	ld	-2 (ix),l
   0604 DD 74 FF      [19] 1209 	ld	-1 (ix),h
   0607 DD 6E F8      [19] 1210 	ld	l,-8 (ix)
   060A DD 66 F9      [19] 1211 	ld	h,-7 (ix)
   060D 6E            [ 7] 1212 	ld	l,(hl)
   060E 26 00         [ 7] 1213 	ld	h,#0x00
   0610 DD 7E FE      [19] 1214 	ld	a,-2 (ix)
   0613 95            [ 4] 1215 	sub	a, l
   0614 DD 7E FF      [19] 1216 	ld	a,-1 (ix)
   0617 9C            [ 4] 1217 	sbc	a, h
   0618 E2r1Dr06      [10] 1218 	jp	PO, 00272$
   061B EE 80         [ 7] 1219 	xor	a, #0x80
   061D                    1220 00272$:
   061D FAr32r06      [10] 1221 	jp	M,00124$
   0620 D5            [11] 1222 	push	de
   0621 11 16 00      [10] 1223 	ld	de,#0x0016
   0624 19            [11] 1224 	add	hl, de
   0625 D1            [10] 1225 	pop	de
   0626 7D            [ 4] 1226 	ld	a,l
   0627 93            [ 4] 1227 	sub	a, e
   0628 7C            [ 4] 1228 	ld	a,h
   0629 9A            [ 4] 1229 	sbc	a, d
   062A E2r2Fr06      [10] 1230 	jp	PO, 00273$
   062D EE 80         [ 7] 1231 	xor	a, #0x80
   062F                    1232 00273$:
   062F F2r39r06      [10] 1233 	jp	P,00125$
   0632                    1234 00124$:
                           1235 ;src/main.c:252: colisiona = 0;
   0632 DD 36 F7 00   [19] 1236 	ld	-9 (ix),#0x00
   0636 C3r48r08      [10] 1237 	jp	00165$
   0639                    1238 00125$:
                           1239 ;src/main.c:255: if(enemy->x > cu.x){ //si el cu esta abajo
   0639 0A            [ 7] 1240 	ld	a,(bc)
   063A 5F            [ 4] 1241 	ld	e,a
   063B 21r3Cr00      [10] 1242 	ld	hl, #_cu + 0
   063E 4E            [ 7] 1243 	ld	c,(hl)
   063F 79            [ 4] 1244 	ld	a,c
   0640 93            [ 4] 1245 	sub	a, e
   0641 30 2C         [12] 1246 	jr	NC,00122$
                           1247 ;src/main.c:256: if( enemy->x - (cu.x + G_KNIFEX_0_W) > 1){ // si hay espacio entre el enemigo y el cu
   0643 6B            [ 4] 1248 	ld	l,e
   0644 26 00         [ 7] 1249 	ld	h,#0x00
   0646 06 00         [ 7] 1250 	ld	b,#0x00
   0648 03            [ 6] 1251 	inc	bc
   0649 03            [ 6] 1252 	inc	bc
   064A 03            [ 6] 1253 	inc	bc
   064B 03            [ 6] 1254 	inc	bc
   064C BF            [ 4] 1255 	cp	a, a
   064D ED 42         [15] 1256 	sbc	hl, bc
   064F 3E 01         [ 7] 1257 	ld	a,#0x01
   0651 BD            [ 4] 1258 	cp	a, l
   0652 3E 00         [ 7] 1259 	ld	a,#0x00
   0654 9C            [ 4] 1260 	sbc	a, h
   0655 E2r5Ar06      [10] 1261 	jp	PO, 00274$
   0658 EE 80         [ 7] 1262 	xor	a, #0x80
   065A                    1263 00274$:
   065A F2r64r06      [10] 1264 	jp	P,00119$
                           1265 ;src/main.c:257: colisiona = 0;
   065D DD 36 F7 00   [19] 1266 	ld	-9 (ix),#0x00
   0661 C3r48r08      [10] 1267 	jp	00165$
   0664                    1268 00119$:
                           1269 ;src/main.c:260: enemy->muerto = SI;
   0664 DD 6E FA      [19] 1270 	ld	l,-6 (ix)
   0667 DD 66 FB      [19] 1271 	ld	h,-5 (ix)
   066A 36 01         [10] 1272 	ld	(hl),#0x01
   066C C3r48r08      [10] 1273 	jp	00165$
   066F                    1274 00122$:
                           1275 ;src/main.c:263: colisiona = 0;
   066F DD 36 F7 00   [19] 1276 	ld	-9 (ix),#0x00
   0673 C3r48r08      [10] 1277 	jp	00165$
   0676                    1278 00129$:
                           1279 ;src/main.c:267: enemy->mira = M_derecha;
   0676 DD 6E FC      [19] 1280 	ld	l,-4 (ix)
   0679 DD 66 FD      [19] 1281 	ld	h,-3 (ix)
   067C 36 00         [10] 1282 	ld	(hl),#0x00
                           1283 ;src/main.c:269: break;
   067E C3r48r08      [10] 1284 	jp	00165$
                           1285 ;src/main.c:270: case 2:
   0681                    1286 00133$:
                           1287 ;src/main.c:271: if( *getTilePtr(mapa, enemy->x, enemy->y - 2) <= 2
   0681 15            [ 4] 1288 	dec	d
   0682 15            [ 4] 1289 	dec	d
   0683 C5            [11] 1290 	push	bc
   0684 D5            [11] 1291 	push	de
   0685 2Ar00r00      [16] 1292 	ld	hl,(_mapa)
   0688 E5            [11] 1293 	push	hl
   0689 CDr00r00      [17] 1294 	call	_getTilePtr
   068C F1            [10] 1295 	pop	af
   068D F1            [10] 1296 	pop	af
   068E C1            [10] 1297 	pop	bc
   068F 5E            [ 7] 1298 	ld	e,(hl)
   0690 3E 02         [ 7] 1299 	ld	a,#0x02
   0692 93            [ 4] 1300 	sub	a, e
   0693 DAr57r07      [10] 1301 	jp	C,00145$
                           1302 ;src/main.c:272: && *getTilePtr(mapa, enemy->x + G_ENEMY_W / 2, enemy->y - 2) <= 2
   0696 DD 6E F8      [19] 1303 	ld	l,-8 (ix)
   0699 DD 66 F9      [19] 1304 	ld	h,-7 (ix)
   069C 56            [ 7] 1305 	ld	d,(hl)
   069D 15            [ 4] 1306 	dec	d
   069E 15            [ 4] 1307 	dec	d
   069F 0A            [ 7] 1308 	ld	a,(bc)
   06A0 C6 02         [ 7] 1309 	add	a, #0x02
   06A2 C5            [11] 1310 	push	bc
   06A3 D5            [11] 1311 	push	de
   06A4 33            [ 6] 1312 	inc	sp
   06A5 F5            [11] 1313 	push	af
   06A6 33            [ 6] 1314 	inc	sp
   06A7 2Ar00r00      [16] 1315 	ld	hl,(_mapa)
   06AA E5            [11] 1316 	push	hl
   06AB CDr00r00      [17] 1317 	call	_getTilePtr
   06AE F1            [10] 1318 	pop	af
   06AF F1            [10] 1319 	pop	af
   06B0 C1            [10] 1320 	pop	bc
   06B1 5E            [ 7] 1321 	ld	e,(hl)
   06B2 3E 02         [ 7] 1322 	ld	a,#0x02
   06B4 93            [ 4] 1323 	sub	a, e
   06B5 DAr57r07      [10] 1324 	jp	C,00145$
                           1325 ;src/main.c:273: && *getTilePtr(mapa, enemy->x + G_ENEMY_W, enemy->y - 2) <= 2)
   06B8 DD 6E F8      [19] 1326 	ld	l,-8 (ix)
   06BB DD 66 F9      [19] 1327 	ld	h,-7 (ix)
   06BE 56            [ 7] 1328 	ld	d,(hl)
   06BF 15            [ 4] 1329 	dec	d
   06C0 15            [ 4] 1330 	dec	d
   06C1 0A            [ 7] 1331 	ld	a,(bc)
   06C2 C6 04         [ 7] 1332 	add	a, #0x04
   06C4 C5            [11] 1333 	push	bc
   06C5 D5            [11] 1334 	push	de
   06C6 33            [ 6] 1335 	inc	sp
   06C7 F5            [11] 1336 	push	af
   06C8 33            [ 6] 1337 	inc	sp
   06C9 2Ar00r00      [16] 1338 	ld	hl,(_mapa)
   06CC E5            [11] 1339 	push	hl
   06CD CDr00r00      [17] 1340 	call	_getTilePtr
   06D0 F1            [10] 1341 	pop	af
   06D1 F1            [10] 1342 	pop	af
   06D2 C1            [10] 1343 	pop	bc
   06D3 5E            [ 7] 1344 	ld	e,(hl)
   06D4 3E 02         [ 7] 1345 	ld	a,#0x02
   06D6 93            [ 4] 1346 	sub	a, e
   06D7 DAr57r07      [10] 1347 	jp	C,00145$
                           1348 ;src/main.c:275: if((cu.x + G_KNIFEY_0_W) < enemy->x || cu.x  > (enemy->x + G_ENEMY_W)){
   06DA 21r3Cr00      [10] 1349 	ld	hl, #_cu + 0
   06DD 5E            [ 7] 1350 	ld	e,(hl)
   06DE 16 00         [ 7] 1351 	ld	d,#0x00
   06E0 21 02 00      [10] 1352 	ld	hl,#0x0002
   06E3 19            [11] 1353 	add	hl,de
   06E4 DD 75 FE      [19] 1354 	ld	-2 (ix),l
   06E7 DD 74 FF      [19] 1355 	ld	-1 (ix),h
   06EA 0A            [ 7] 1356 	ld	a,(bc)
   06EB 6F            [ 4] 1357 	ld	l,a
   06EC 26 00         [ 7] 1358 	ld	h,#0x00
   06EE DD 7E FE      [19] 1359 	ld	a,-2 (ix)
   06F1 95            [ 4] 1360 	sub	a, l
   06F2 DD 7E FF      [19] 1361 	ld	a,-1 (ix)
   06F5 9C            [ 4] 1362 	sbc	a, h
   06F6 E2rFBr06      [10] 1363 	jp	PO, 00275$
   06F9 EE 80         [ 7] 1364 	xor	a, #0x80
   06FB                    1365 00275$:
   06FB FAr0Er07      [10] 1366 	jp	M,00140$
   06FE 23            [ 6] 1367 	inc	hl
   06FF 23            [ 6] 1368 	inc	hl
   0700 23            [ 6] 1369 	inc	hl
   0701 23            [ 6] 1370 	inc	hl
   0702 7D            [ 4] 1371 	ld	a,l
   0703 93            [ 4] 1372 	sub	a, e
   0704 7C            [ 4] 1373 	ld	a,h
   0705 9A            [ 4] 1374 	sbc	a, d
   0706 E2r0Br07      [10] 1375 	jp	PO, 00276$
   0709 EE 80         [ 7] 1376 	xor	a, #0x80
   070B                    1377 00276$:
   070B F2r14r07      [10] 1378 	jp	P,00141$
   070E                    1379 00140$:
                           1380 ;src/main.c:277: colisiona = 0;
   070E DD 36 F7 00   [19] 1381 	ld	-9 (ix),#0x00
   0712 18 4B         [12] 1382 	jr	00149$
   0714                    1383 00141$:
                           1384 ;src/main.c:280: if(enemy->y>cu.y){
   0714 DD 6E F8      [19] 1385 	ld	l,-8 (ix)
   0717 DD 66 F9      [19] 1386 	ld	h,-7 (ix)
   071A 5E            [ 7] 1387 	ld	e,(hl)
   071B 21r3Dr00      [10] 1388 	ld	hl, #(_cu + 0x0001) + 0
   071E 6E            [ 7] 1389 	ld	l,(hl)
   071F 7D            [ 4] 1390 	ld	a,l
   0720 93            [ 4] 1391 	sub	a, e
   0721 30 2E         [12] 1392 	jr	NC,00138$
                           1393 ;src/main.c:281: if(enemy->y - (cu.y + G_KNIFEY_0_H)  > 2){
   0723 16 00         [ 7] 1394 	ld	d,#0x00
   0725 26 00         [ 7] 1395 	ld	h,#0x00
   0727 D5            [11] 1396 	push	de
   0728 11 08 00      [10] 1397 	ld	de,#0x0008
   072B 19            [11] 1398 	add	hl, de
   072C D1            [10] 1399 	pop	de
   072D 7B            [ 4] 1400 	ld	a,e
   072E 95            [ 4] 1401 	sub	a, l
   072F 5F            [ 4] 1402 	ld	e,a
   0730 7A            [ 4] 1403 	ld	a,d
   0731 9C            [ 4] 1404 	sbc	a, h
   0732 57            [ 4] 1405 	ld	d,a
   0733 3E 02         [ 7] 1406 	ld	a,#0x02
   0735 BB            [ 4] 1407 	cp	a, e
   0736 3E 00         [ 7] 1408 	ld	a,#0x00
   0738 9A            [ 4] 1409 	sbc	a, d
   0739 E2r3Er07      [10] 1410 	jp	PO, 00277$
   073C EE 80         [ 7] 1411 	xor	a, #0x80
   073E                    1412 00277$:
   073E F2r47r07      [10] 1413 	jp	P,00135$
                           1414 ;src/main.c:282: colisiona = 0;
   0741 DD 36 F7 00   [19] 1415 	ld	-9 (ix),#0x00
   0745 18 18         [12] 1416 	jr	00149$
   0747                    1417 00135$:
                           1418 ;src/main.c:285: enemy->muerto = SI;
   0747 DD 6E FA      [19] 1419 	ld	l,-6 (ix)
   074A DD 66 FB      [19] 1420 	ld	h,-5 (ix)
   074D 36 01         [10] 1421 	ld	(hl),#0x01
   074F 18 0E         [12] 1422 	jr	00149$
   0751                    1423 00138$:
                           1424 ;src/main.c:289: colisiona = 0;
   0751 DD 36 F7 00   [19] 1425 	ld	-9 (ix),#0x00
   0755 18 08         [12] 1426 	jr	00149$
   0757                    1427 00145$:
                           1428 ;src/main.c:295: enemy->mira = M_abajo;
   0757 DD 6E FC      [19] 1429 	ld	l,-4 (ix)
   075A DD 66 FD      [19] 1430 	ld	h,-3 (ix)
   075D 36 03         [10] 1431 	ld	(hl),#0x03
                           1432 ;src/main.c:298: case 3:
   075F                    1433 00149$:
                           1434 ;src/main.c:301: if( *getTilePtr(mapa, enemy->x, enemy->y + G_ENEMY_H + 2) <= 2
   075F DD 6E F8      [19] 1435 	ld	l,-8 (ix)
   0762 DD 66 F9      [19] 1436 	ld	h,-7 (ix)
   0765 7E            [ 7] 1437 	ld	a,(hl)
   0766 C6 18         [ 7] 1438 	add	a, #0x18
   0768 57            [ 4] 1439 	ld	d,a
   0769 0A            [ 7] 1440 	ld	a,(bc)
   076A C5            [11] 1441 	push	bc
   076B D5            [11] 1442 	push	de
   076C 33            [ 6] 1443 	inc	sp
   076D F5            [11] 1444 	push	af
   076E 33            [ 6] 1445 	inc	sp
   076F 2Ar00r00      [16] 1446 	ld	hl,(_mapa)
   0772 E5            [11] 1447 	push	hl
   0773 CDr00r00      [17] 1448 	call	_getTilePtr
   0776 F1            [10] 1449 	pop	af
   0777 F1            [10] 1450 	pop	af
   0778 C1            [10] 1451 	pop	bc
   0779 5E            [ 7] 1452 	ld	e,(hl)
   077A 3E 02         [ 7] 1453 	ld	a,#0x02
   077C 93            [ 4] 1454 	sub	a, e
   077D DAr40r08      [10] 1455 	jp	C,00161$
                           1456 ;src/main.c:302: && *getTilePtr(mapa, enemy->x + G_ENEMY_W / 2, enemy->y + G_ENEMY_H + 2) <= 2
   0780 DD 6E F8      [19] 1457 	ld	l,-8 (ix)
   0783 DD 66 F9      [19] 1458 	ld	h,-7 (ix)
   0786 7E            [ 7] 1459 	ld	a,(hl)
   0787 C6 18         [ 7] 1460 	add	a, #0x18
   0789 57            [ 4] 1461 	ld	d,a
   078A 0A            [ 7] 1462 	ld	a,(bc)
   078B C6 02         [ 7] 1463 	add	a, #0x02
   078D C5            [11] 1464 	push	bc
   078E D5            [11] 1465 	push	de
   078F 33            [ 6] 1466 	inc	sp
   0790 F5            [11] 1467 	push	af
   0791 33            [ 6] 1468 	inc	sp
   0792 2Ar00r00      [16] 1469 	ld	hl,(_mapa)
   0795 E5            [11] 1470 	push	hl
   0796 CDr00r00      [17] 1471 	call	_getTilePtr
   0799 F1            [10] 1472 	pop	af
   079A F1            [10] 1473 	pop	af
   079B C1            [10] 1474 	pop	bc
   079C 5E            [ 7] 1475 	ld	e,(hl)
   079D 3E 02         [ 7] 1476 	ld	a,#0x02
   079F 93            [ 4] 1477 	sub	a, e
   07A0 DAr40r08      [10] 1478 	jp	C,00161$
                           1479 ;src/main.c:303: && *getTilePtr(mapa, enemy->x + G_ENEMY_W, enemy->y + G_ENEMY_H + 2) <= 2)
   07A3 DD 6E F8      [19] 1480 	ld	l,-8 (ix)
   07A6 DD 66 F9      [19] 1481 	ld	h,-7 (ix)
   07A9 7E            [ 7] 1482 	ld	a,(hl)
   07AA C6 18         [ 7] 1483 	add	a, #0x18
   07AC 57            [ 4] 1484 	ld	d,a
   07AD 0A            [ 7] 1485 	ld	a,(bc)
   07AE C6 04         [ 7] 1486 	add	a, #0x04
   07B0 C5            [11] 1487 	push	bc
   07B1 D5            [11] 1488 	push	de
   07B2 33            [ 6] 1489 	inc	sp
   07B3 F5            [11] 1490 	push	af
   07B4 33            [ 6] 1491 	inc	sp
   07B5 2Ar00r00      [16] 1492 	ld	hl,(_mapa)
   07B8 E5            [11] 1493 	push	hl
   07B9 CDr00r00      [17] 1494 	call	_getTilePtr
   07BC F1            [10] 1495 	pop	af
   07BD F1            [10] 1496 	pop	af
   07BE C1            [10] 1497 	pop	bc
   07BF 5E            [ 7] 1498 	ld	e,(hl)
   07C0 3E 02         [ 7] 1499 	ld	a,#0x02
   07C2 93            [ 4] 1500 	sub	a, e
   07C3 38 7B         [12] 1501 	jr	C,00161$
                           1502 ;src/main.c:305: if( (cu.x + G_KNIFEY_0_W) < enemy->x || cu.x  > (enemy->x + G_ENEMY_W) ){
   07C5 21r3Cr00      [10] 1503 	ld	hl, #_cu + 0
   07C8 5E            [ 7] 1504 	ld	e,(hl)
   07C9 16 00         [ 7] 1505 	ld	d,#0x00
   07CB 21 02 00      [10] 1506 	ld	hl,#0x0002
   07CE 19            [11] 1507 	add	hl,de
   07CF DD 75 FE      [19] 1508 	ld	-2 (ix),l
   07D2 DD 74 FF      [19] 1509 	ld	-1 (ix),h
   07D5 0A            [ 7] 1510 	ld	a,(bc)
   07D6 4F            [ 4] 1511 	ld	c,a
   07D7 06 00         [ 7] 1512 	ld	b,#0x00
   07D9 DD 7E FE      [19] 1513 	ld	a,-2 (ix)
   07DC 91            [ 4] 1514 	sub	a, c
   07DD DD 7E FF      [19] 1515 	ld	a,-1 (ix)
   07E0 98            [ 4] 1516 	sbc	a, b
   07E1 E2rE6r07      [10] 1517 	jp	PO, 00278$
   07E4 EE 80         [ 7] 1518 	xor	a, #0x80
   07E6                    1519 00278$:
   07E6 FArF9r07      [10] 1520 	jp	M,00156$
   07E9 03            [ 6] 1521 	inc	bc
   07EA 03            [ 6] 1522 	inc	bc
   07EB 03            [ 6] 1523 	inc	bc
   07EC 03            [ 6] 1524 	inc	bc
   07ED 79            [ 4] 1525 	ld	a,c
   07EE 93            [ 4] 1526 	sub	a, e
   07EF 78            [ 4] 1527 	ld	a,b
   07F0 9A            [ 4] 1528 	sbc	a, d
   07F1 E2rF6r07      [10] 1529 	jp	PO, 00279$
   07F4 EE 80         [ 7] 1530 	xor	a, #0x80
   07F6                    1531 00279$:
   07F6 F2rFFr07      [10] 1532 	jp	P,00157$
   07F9                    1533 00156$:
                           1534 ;src/main.c:306: colisiona = 0;
   07F9 DD 36 F7 00   [19] 1535 	ld	-9 (ix),#0x00
   07FD 18 49         [12] 1536 	jr	00165$
   07FF                    1537 00157$:
                           1538 ;src/main.c:309: if(cu.y > enemy->y){ //si el cu esta abajo
   07FF 21r3Dr00      [10] 1539 	ld	hl, #(_cu + 0x0001) + 0
   0802 4E            [ 7] 1540 	ld	c,(hl)
   0803 DD 6E F8      [19] 1541 	ld	l,-8 (ix)
   0806 DD 66 F9      [19] 1542 	ld	h,-7 (ix)
   0809 5E            [ 7] 1543 	ld	e,(hl)
   080A 7B            [ 4] 1544 	ld	a,e
   080B 91            [ 4] 1545 	sub	a, c
   080C 30 2C         [12] 1546 	jr	NC,00154$
                           1547 ;src/main.c:310: if( cu.y - (enemy->y + G_ENEMY_H)  > 2){ // si hay espacio entre el enemigo y el cu
   080E 06 00         [ 7] 1548 	ld	b,#0x00
   0810 16 00         [ 7] 1549 	ld	d,#0x00
   0812 21 16 00      [10] 1550 	ld	hl,#0x0016
   0815 19            [11] 1551 	add	hl,de
   0816 79            [ 4] 1552 	ld	a,c
   0817 95            [ 4] 1553 	sub	a, l
   0818 4F            [ 4] 1554 	ld	c,a
   0819 78            [ 4] 1555 	ld	a,b
   081A 9C            [ 4] 1556 	sbc	a, h
   081B 47            [ 4] 1557 	ld	b,a
   081C 3E 02         [ 7] 1558 	ld	a,#0x02
   081E B9            [ 4] 1559 	cp	a, c
   081F 3E 00         [ 7] 1560 	ld	a,#0x00
   0821 98            [ 4] 1561 	sbc	a, b
   0822 E2r27r08      [10] 1562 	jp	PO, 00280$
   0825 EE 80         [ 7] 1563 	xor	a, #0x80
   0827                    1564 00280$:
   0827 F2r30r08      [10] 1565 	jp	P,00151$
                           1566 ;src/main.c:311: colisiona = 0;
   082A DD 36 F7 00   [19] 1567 	ld	-9 (ix),#0x00
   082E 18 18         [12] 1568 	jr	00165$
   0830                    1569 00151$:
                           1570 ;src/main.c:314: enemy->muerto = SI;
   0830 DD 6E FA      [19] 1571 	ld	l,-6 (ix)
   0833 DD 66 FB      [19] 1572 	ld	h,-5 (ix)
   0836 36 01         [10] 1573 	ld	(hl),#0x01
   0838 18 0E         [12] 1574 	jr	00165$
   083A                    1575 00154$:
                           1576 ;src/main.c:318: colisiona = 0;
   083A DD 36 F7 00   [19] 1577 	ld	-9 (ix),#0x00
   083E 18 08         [12] 1578 	jr	00165$
   0840                    1579 00161$:
                           1580 ;src/main.c:322: enemy->mira = M_arriba;
   0840 DD 6E FC      [19] 1581 	ld	l,-4 (ix)
   0843 DD 66 FD      [19] 1582 	ld	h,-3 (ix)
   0846 36 02         [10] 1583 	ld	(hl),#0x02
                           1584 ;src/main.c:325: }
   0848                    1585 00165$:
                           1586 ;src/main.c:326: return colisiona;
   0848 DD 6E F7      [19] 1587 	ld	l,-9 (ix)
   084B DD F9         [10] 1588 	ld	sp, ix
   084D DD E1         [14] 1589 	pop	ix
   084F C9            [10] 1590 	ret
                           1591 ;src/main.c:329: void moverEnemigoArriba(TEnemy *enemy){
                           1592 ;	---------------------------------
                           1593 ; Function moverEnemigoArriba
                           1594 ; ---------------------------------
   0850                    1595 _moverEnemigoArriba::
   0850 DD E5         [15] 1596 	push	ix
   0852 DD 21 00 00   [14] 1597 	ld	ix,#0
   0856 DD 39         [15] 1598 	add	ix,sp
                           1599 ;src/main.c:330: enemy->y--;
   0858 DD 4E 04      [19] 1600 	ld	c,4 (ix)
   085B DD 46 05      [19] 1601 	ld	b,5 (ix)
   085E 69            [ 4] 1602 	ld	l, c
   085F 60            [ 4] 1603 	ld	h, b
   0860 23            [ 6] 1604 	inc	hl
   0861 5E            [ 7] 1605 	ld	e,(hl)
   0862 1D            [ 4] 1606 	dec	e
   0863 73            [ 7] 1607 	ld	(hl),e
                           1608 ;src/main.c:331: enemy->y--;
   0864 1D            [ 4] 1609 	dec	e
   0865 73            [ 7] 1610 	ld	(hl),e
                           1611 ;src/main.c:332: enemy->mover = SI;
   0866 21 06 00      [10] 1612 	ld	hl,#0x0006
   0869 09            [11] 1613 	add	hl,bc
   086A 36 01         [10] 1614 	ld	(hl),#0x01
   086C DD E1         [14] 1615 	pop	ix
   086E C9            [10] 1616 	ret
                           1617 ;src/main.c:335: void moverEnemigoAbajo(TEnemy *enemy){
                           1618 ;	---------------------------------
                           1619 ; Function moverEnemigoAbajo
                           1620 ; ---------------------------------
   086F                    1621 _moverEnemigoAbajo::
   086F DD E5         [15] 1622 	push	ix
   0871 DD 21 00 00   [14] 1623 	ld	ix,#0
   0875 DD 39         [15] 1624 	add	ix,sp
                           1625 ;src/main.c:336: enemy->y++;
   0877 DD 4E 04      [19] 1626 	ld	c,4 (ix)
   087A DD 46 05      [19] 1627 	ld	b,5 (ix)
   087D 59            [ 4] 1628 	ld	e, c
   087E 50            [ 4] 1629 	ld	d, b
   087F 13            [ 6] 1630 	inc	de
   0880 1A            [ 7] 1631 	ld	a,(de)
   0881 3C            [ 4] 1632 	inc	a
   0882 12            [ 7] 1633 	ld	(de),a
                           1634 ;src/main.c:337: enemy->y++;
   0883 3C            [ 4] 1635 	inc	a
   0884 12            [ 7] 1636 	ld	(de),a
                           1637 ;src/main.c:338: enemy->mover = SI;
   0885 21 06 00      [10] 1638 	ld	hl,#0x0006
   0888 09            [11] 1639 	add	hl,bc
   0889 36 01         [10] 1640 	ld	(hl),#0x01
   088B DD E1         [14] 1641 	pop	ix
   088D C9            [10] 1642 	ret
                           1643 ;src/main.c:341: void moverEnemigoDerecha(TEnemy *enemy){
                           1644 ;	---------------------------------
                           1645 ; Function moverEnemigoDerecha
                           1646 ; ---------------------------------
   088E                    1647 _moverEnemigoDerecha::
                           1648 ;src/main.c:342: enemy->x++;
   088E D1            [10] 1649 	pop	de
   088F C1            [10] 1650 	pop	bc
   0890 C5            [11] 1651 	push	bc
   0891 D5            [11] 1652 	push	de
   0892 0A            [ 7] 1653 	ld	a,(bc)
   0893 3C            [ 4] 1654 	inc	a
   0894 02            [ 7] 1655 	ld	(bc),a
                           1656 ;src/main.c:343: enemy->x++;
   0895 3C            [ 4] 1657 	inc	a
   0896 02            [ 7] 1658 	ld	(bc),a
                           1659 ;src/main.c:344: enemy->mover = SI;
   0897 21 06 00      [10] 1660 	ld	hl,#0x0006
   089A 09            [11] 1661 	add	hl,bc
   089B 36 01         [10] 1662 	ld	(hl),#0x01
   089D C9            [10] 1663 	ret
                           1664 ;src/main.c:347: void moverEnemigoIzquierda(TEnemy *enemy){
                           1665 ;	---------------------------------
                           1666 ; Function moverEnemigoIzquierda
                           1667 ; ---------------------------------
   089E                    1668 _moverEnemigoIzquierda::
                           1669 ;src/main.c:348: enemy->x--;
   089E D1            [10] 1670 	pop	de
   089F C1            [10] 1671 	pop	bc
   08A0 C5            [11] 1672 	push	bc
   08A1 D5            [11] 1673 	push	de
   08A2 0A            [ 7] 1674 	ld	a,(bc)
   08A3 C6 FF         [ 7] 1675 	add	a,#0xFF
   08A5 02            [ 7] 1676 	ld	(bc),a
                           1677 ;src/main.c:349: enemy->x--;
   08A6 C6 FF         [ 7] 1678 	add	a,#0xFF
   08A8 02            [ 7] 1679 	ld	(bc),a
                           1680 ;src/main.c:350: enemy->mover = SI;
   08A9 21 06 00      [10] 1681 	ld	hl,#0x0006
   08AC 09            [11] 1682 	add	hl,bc
   08AD 36 01         [10] 1683 	ld	(hl),#0x01
   08AF C9            [10] 1684 	ret
                           1685 ;src/main.c:353: void moverEnemigo(TEnemy *enemy){
                           1686 ;	---------------------------------
                           1687 ; Function moverEnemigo
                           1688 ; ---------------------------------
   08B0                    1689 _moverEnemigo::
                           1690 ;src/main.c:354: if(!enemy->muerto){
   08B0 D1            [10] 1691 	pop	de
   08B1 C1            [10] 1692 	pop	bc
   08B2 C5            [11] 1693 	push	bc
   08B3 D5            [11] 1694 	push	de
   08B4 C5            [11] 1695 	push	bc
   08B5 FD E1         [14] 1696 	pop	iy
   08B7 FD 7E 08      [19] 1697 	ld	a,8 (iy)
   08BA B7            [ 4] 1698 	or	a, a
   08BB C0            [11] 1699 	ret	NZ
                           1700 ;src/main.c:355: if(!checkEnemyCollision(enemy->mira, enemy)){
   08BC 21 07 00      [10] 1701 	ld	hl,#0x0007
   08BF 09            [11] 1702 	add	hl,bc
   08C0 56            [ 7] 1703 	ld	d,(hl)
   08C1 E5            [11] 1704 	push	hl
   08C2 C5            [11] 1705 	push	bc
   08C3 C5            [11] 1706 	push	bc
   08C4 D5            [11] 1707 	push	de
   08C5 33            [ 6] 1708 	inc	sp
   08C6 CDr55r04      [17] 1709 	call	_checkEnemyCollision
   08C9 F1            [10] 1710 	pop	af
   08CA 33            [ 6] 1711 	inc	sp
   08CB 7D            [ 4] 1712 	ld	a,l
   08CC C1            [10] 1713 	pop	bc
   08CD E1            [10] 1714 	pop	hl
   08CE B7            [ 4] 1715 	or	a, a
   08CF C0            [11] 1716 	ret	NZ
                           1717 ;src/main.c:357: switch (enemy->mira) {
   08D0 5E            [ 7] 1718 	ld	e,(hl)
   08D1 3E 03         [ 7] 1719 	ld	a,#0x03
   08D3 93            [ 4] 1720 	sub	a, e
   08D4 D8            [11] 1721 	ret	C
   08D5 16 00         [ 7] 1722 	ld	d,#0x00
   08D7 21rDDr08      [10] 1723 	ld	hl,#00124$
   08DA 19            [11] 1724 	add	hl,de
   08DB 19            [11] 1725 	add	hl,de
                           1726 ;src/main.c:359: case 0:
   08DC E9            [ 4] 1727 	jp	(hl)
   08DD                    1728 00124$:
   08DD 18 06         [12] 1729 	jr	00101$
   08DF 18 0A         [12] 1730 	jr	00102$
   08E1 18 0E         [12] 1731 	jr	00103$
   08E3 18 12         [12] 1732 	jr	00104$
   08E5                    1733 00101$:
                           1734 ;src/main.c:360: moverEnemigoDerecha(enemy);
   08E5 C5            [11] 1735 	push	bc
   08E6 CDr8Er08      [17] 1736 	call	_moverEnemigoDerecha
   08E9 F1            [10] 1737 	pop	af
                           1738 ;src/main.c:361: break;
   08EA C9            [10] 1739 	ret
                           1740 ;src/main.c:362: case 1:
   08EB                    1741 00102$:
                           1742 ;src/main.c:363: moverEnemigoIzquierda(enemy);
   08EB C5            [11] 1743 	push	bc
   08EC CDr9Er08      [17] 1744 	call	_moverEnemigoIzquierda
   08EF F1            [10] 1745 	pop	af
                           1746 ;src/main.c:364: break;
   08F0 C9            [10] 1747 	ret
                           1748 ;src/main.c:365: case 2:
   08F1                    1749 00103$:
                           1750 ;src/main.c:366: moverEnemigoArriba(enemy);
   08F1 C5            [11] 1751 	push	bc
   08F2 CDr50r08      [17] 1752 	call	_moverEnemigoArriba
   08F5 F1            [10] 1753 	pop	af
                           1754 ;src/main.c:367: break;
   08F6 C9            [10] 1755 	ret
                           1756 ;src/main.c:368: case 3:
   08F7                    1757 00104$:
                           1758 ;src/main.c:369: moverEnemigoAbajo(enemy);
   08F7 C5            [11] 1759 	push	bc
   08F8 CDr6Fr08      [17] 1760 	call	_moverEnemigoAbajo
   08FB F1            [10] 1761 	pop	af
                           1762 ;src/main.c:371: }
   08FC C9            [10] 1763 	ret
                           1764 ;src/main.c:376: void inicializarEnemy() {
                           1765 ;	---------------------------------
                           1766 ; Function inicializarEnemy
                           1767 ; ---------------------------------
   08FD                    1768 _inicializarEnemy::
   08FD DD E5         [15] 1769 	push	ix
   08FF DD 21 00 00   [14] 1770 	ld	ix,#0
   0903 DD 39         [15] 1771 	add	ix,sp
   0905 3B            [ 6] 1772 	dec	sp
                           1773 ;src/main.c:377: u8 i = (2 + num_mapa) + 1; //sacar distinto numero dependiendo del mapa
   0906 3Ar02r00      [13] 1774 	ld	a,(#_num_mapa + 0)
   0909 C6 03         [ 7] 1775 	add	a, #0x03
   090B DD 77 FF      [19] 1776 	ld	-1 (ix),a
                           1777 ;src/main.c:382: actual = enemy;
   090E 11r00r00      [10] 1778 	ld	de,#_enemy+0
                           1779 ;src/main.c:383: while(--i){
   0911                    1780 00101$:
   0911 DD 35 FF      [23] 1781 	dec	-1 (ix)
   0914 DD 7E FF      [19] 1782 	ld	a,-1 (ix)
   0917 B7            [ 4] 1783 	or	a, a
   0918 28 61         [12] 1784 	jr	Z,00104$
                           1785 ;src/main.c:384: actual->x = actual->px = spawnX[i];
   091A 4B            [ 4] 1786 	ld	c, e
   091B 42            [ 4] 1787 	ld	b, d
   091C 03            [ 6] 1788 	inc	bc
   091D 03            [ 6] 1789 	inc	bc
   091E 3Er1C         [ 7] 1790 	ld	a,#<(_spawnX)
   0920 DD 86 FF      [19] 1791 	add	a, -1 (ix)
   0923 6F            [ 4] 1792 	ld	l,a
   0924 3Es00         [ 7] 1793 	ld	a,#>(_spawnX)
   0926 CE 00         [ 7] 1794 	adc	a, #0x00
   0928 67            [ 4] 1795 	ld	h,a
   0929 7E            [ 7] 1796 	ld	a,(hl)
   092A 02            [ 7] 1797 	ld	(bc),a
   092B 12            [ 7] 1798 	ld	(de),a
                           1799 ;src/main.c:385: actual->y = actual->py = spawnY[i];
   092C D5            [11] 1800 	push	de
   092D FD E1         [14] 1801 	pop	iy
   092F FD 23         [10] 1802 	inc	iy
   0931 4B            [ 4] 1803 	ld	c, e
   0932 42            [ 4] 1804 	ld	b, d
   0933 03            [ 6] 1805 	inc	bc
   0934 03            [ 6] 1806 	inc	bc
   0935 03            [ 6] 1807 	inc	bc
   0936 3Er21         [ 7] 1808 	ld	a,#<(_spawnY)
   0938 DD 86 FF      [19] 1809 	add	a, -1 (ix)
   093B 6F            [ 4] 1810 	ld	l,a
   093C 3Es00         [ 7] 1811 	ld	a,#>(_spawnY)
   093E CE 00         [ 7] 1812 	adc	a, #0x00
   0940 67            [ 4] 1813 	ld	h,a
   0941 7E            [ 7] 1814 	ld	a,(hl)
   0942 02            [ 7] 1815 	ld	(bc),a
   0943 FD 77 00      [19] 1816 	ld	0 (iy), a
                           1817 ;src/main.c:386: actual->mover  = NO;
   0946 21 06 00      [10] 1818 	ld	hl,#0x0006
   0949 19            [11] 1819 	add	hl,de
   094A 36 00         [10] 1820 	ld	(hl),#0x00
                           1821 ;src/main.c:387: actual->mira   = M_abajo;
   094C 21 07 00      [10] 1822 	ld	hl,#0x0007
   094F 19            [11] 1823 	add	hl,de
   0950 36 03         [10] 1824 	ld	(hl),#0x03
                           1825 ;src/main.c:388: actual->sprite = g_enemy;
   0952 21 04 00      [10] 1826 	ld	hl,#0x0004
   0955 19            [11] 1827 	add	hl,de
   0956 36r00         [10] 1828 	ld	(hl),#<(_g_enemy)
   0958 23            [ 6] 1829 	inc	hl
   0959 36s00         [10] 1830 	ld	(hl),#>(_g_enemy)
                           1831 ;src/main.c:389: actual->muerto = NO;
   095B 21 08 00      [10] 1832 	ld	hl,#0x0008
   095E 19            [11] 1833 	add	hl,de
   095F 36 00         [10] 1834 	ld	(hl),#0x00
                           1835 ;src/main.c:390: actual->muertes = 0;
   0961 21 0C 00      [10] 1836 	ld	hl,#0x000C
   0964 19            [11] 1837 	add	hl,de
   0965 36 00         [10] 1838 	ld	(hl),#0x00
                           1839 ;src/main.c:391: actual->patroling = SI;
   0967 21 09 00      [10] 1840 	ld	hl,#0x0009
   096A 19            [11] 1841 	add	hl,de
   096B 36 01         [10] 1842 	ld	(hl),#0x01
                           1843 ;src/main.c:393: dibujarEnemigo(actual);
   096D D5            [11] 1844 	push	de
   096E D5            [11] 1845 	push	de
   096F CDrB0r02      [17] 1846 	call	_dibujarEnemigo
   0972 F1            [10] 1847 	pop	af
   0973 D1            [10] 1848 	pop	de
                           1849 ;src/main.c:395: ++actual;
   0974 21 0D 00      [10] 1850 	ld	hl,#0x000D
   0977 19            [11] 1851 	add	hl,de
   0978 EB            [ 4] 1852 	ex	de,hl
   0979 18 96         [12] 1853 	jr	00101$
   097B                    1854 00104$:
   097B 33            [ 6] 1855 	inc	sp
   097C DD E1         [14] 1856 	pop	ix
   097E C9            [10] 1857 	ret
                           1858 ;src/main.c:399: void avanzarMapa() {
                           1859 ;	---------------------------------
                           1860 ; Function avanzarMapa
                           1861 ; ---------------------------------
   097F                    1862 _avanzarMapa::
                           1863 ;src/main.c:400: if(num_mapa < NUM_MAPAS -1) {
   097F 3Ar02r00      [13] 1864 	ld	a,(#_num_mapa + 0)
   0982 D6 02         [ 7] 1865 	sub	a, #0x02
   0984 30 34         [12] 1866 	jr	NC,00102$
                           1867 ;src/main.c:401: mapa = mapas[++num_mapa];
   0986 01r16r00      [10] 1868 	ld	bc,#_mapas+0
   0989 21r02r00      [10] 1869 	ld	hl, #_num_mapa+0
   098C 34            [11] 1870 	inc	(hl)
   098D FD 21r02r00   [14] 1871 	ld	iy,#_num_mapa
   0991 FD 6E 00      [19] 1872 	ld	l,0 (iy)
   0994 26 00         [ 7] 1873 	ld	h,#0x00
   0996 29            [11] 1874 	add	hl, hl
   0997 09            [11] 1875 	add	hl,bc
   0998 7E            [ 7] 1876 	ld	a,(hl)
   0999 FD 21r00r00   [14] 1877 	ld	iy,#_mapa
   099D FD 77 00      [19] 1878 	ld	0 (iy),a
   09A0 23            [ 6] 1879 	inc	hl
   09A1 7E            [ 7] 1880 	ld	a,(hl)
   09A2 32r01r00      [13] 1881 	ld	(#_mapa + 1),a
                           1882 ;src/main.c:402: prota.x = prota.px = 2;
   09A5 21r36r00      [10] 1883 	ld	hl,#(_prota + 0x0002)
   09A8 36 02         [10] 1884 	ld	(hl),#0x02
   09AA 21r34r00      [10] 1885 	ld	hl,#_prota
   09AD 36 02         [10] 1886 	ld	(hl),#0x02
                           1887 ;src/main.c:403: prota.mover = SI;
   09AF 21r3Ar00      [10] 1888 	ld	hl,#(_prota + 0x0006)
   09B2 36 01         [10] 1889 	ld	(hl),#0x01
                           1890 ;src/main.c:404: dibujarMapa();
   09B4 CDr00r00      [17] 1891 	call	_dibujarMapa
                           1892 ;src/main.c:405: inicializarEnemy();
   09B7 C3rFDr08      [10] 1893 	jp  _inicializarEnemy
   09BA                    1894 00102$:
                           1895 ;src/main.c:408: menuFin(puntuacion);
   09BA FD 21r03r00   [14] 1896 	ld	iy,#_puntuacion
   09BE FD 6E 00      [19] 1897 	ld	l,0 (iy)
   09C1 26 00         [ 7] 1898 	ld	h,#0x00
   09C3 C3r00r00      [10] 1899 	jp  _menuFin
                           1900 ;src/main.c:412: void moverIzquierda() {
                           1901 ;	---------------------------------
                           1902 ; Function moverIzquierda
                           1903 ; ---------------------------------
   09C6                    1904 _moverIzquierda::
                           1905 ;src/main.c:413: prota.mira = M_izquierda;
   09C6 01r34r00      [10] 1906 	ld	bc,#_prota+0
   09C9 21r3Br00      [10] 1907 	ld	hl,#(_prota + 0x0007)
   09CC 36 01         [10] 1908 	ld	(hl),#0x01
                           1909 ;src/main.c:414: if (!checkCollision(M_izquierda)) {
   09CE C5            [11] 1910 	push	bc
   09CF 3E 01         [ 7] 1911 	ld	a,#0x01
   09D1 F5            [11] 1912 	push	af
   09D2 33            [ 6] 1913 	inc	sp
   09D3 CDr3Br01      [17] 1914 	call	_checkCollision
   09D6 33            [ 6] 1915 	inc	sp
   09D7 C1            [10] 1916 	pop	bc
   09D8 7D            [ 4] 1917 	ld	a,l
   09D9 B7            [ 4] 1918 	or	a, a
   09DA C0            [11] 1919 	ret	NZ
                           1920 ;src/main.c:415: prota.x--;
   09DB 0A            [ 7] 1921 	ld	a,(bc)
   09DC C6 FF         [ 7] 1922 	add	a,#0xFF
   09DE 02            [ 7] 1923 	ld	(bc),a
                           1924 ;src/main.c:416: prota.mover = SI;
   09DF 21r3Ar00      [10] 1925 	ld	hl,#(_prota + 0x0006)
   09E2 36 01         [10] 1926 	ld	(hl),#0x01
                           1927 ;src/main.c:417: prota.sprite = g_hero_left;
   09E4 21r00r00      [10] 1928 	ld	hl,#_g_hero_left
   09E7 22r38r00      [16] 1929 	ld	((_prota + 0x0004)), hl
   09EA C9            [10] 1930 	ret
                           1931 ;src/main.c:421: void moverDerecha() {
                           1932 ;	---------------------------------
                           1933 ; Function moverDerecha
                           1934 ; ---------------------------------
   09EB                    1935 _moverDerecha::
                           1936 ;src/main.c:422: prota.mira = M_derecha;
   09EB 21r3Br00      [10] 1937 	ld	hl,#(_prota + 0x0007)
   09EE 36 00         [10] 1938 	ld	(hl),#0x00
                           1939 ;src/main.c:423: if (!checkCollision(M_derecha) && ( prota.x + G_HERO_W < 80)) {
   09F0 AF            [ 4] 1940 	xor	a, a
   09F1 F5            [11] 1941 	push	af
   09F2 33            [ 6] 1942 	inc	sp
   09F3 CDr3Br01      [17] 1943 	call	_checkCollision
   09F6 33            [ 6] 1944 	inc	sp
   09F7 45            [ 4] 1945 	ld	b,l
   09F8 21r34r00      [10] 1946 	ld	hl, #_prota + 0
   09FB 4E            [ 7] 1947 	ld	c,(hl)
   09FC 59            [ 4] 1948 	ld	e,c
   09FD 16 00         [ 7] 1949 	ld	d,#0x00
   09FF 21 07 00      [10] 1950 	ld	hl,#0x0007
   0A02 19            [11] 1951 	add	hl,de
   0A03 11 50 80      [10] 1952 	ld	de, #0x8050
   0A06 29            [11] 1953 	add	hl, hl
   0A07 3F            [ 4] 1954 	ccf
   0A08 CB 1C         [ 8] 1955 	rr	h
   0A0A CB 1D         [ 8] 1956 	rr	l
   0A0C ED 52         [15] 1957 	sbc	hl, de
   0A0E 3E 00         [ 7] 1958 	ld	a,#0x00
   0A10 17            [ 4] 1959 	rla
   0A11 5F            [ 4] 1960 	ld	e,a
   0A12 78            [ 4] 1961 	ld	a,b
   0A13 B7            [ 4] 1962 	or	a,a
   0A14 20 14         [12] 1963 	jr	NZ,00104$
   0A16 B3            [ 4] 1964 	or	a,e
   0A17 28 11         [12] 1965 	jr	Z,00104$
                           1966 ;src/main.c:424: prota.x++;
   0A19 0C            [ 4] 1967 	inc	c
   0A1A 21r34r00      [10] 1968 	ld	hl,#_prota
   0A1D 71            [ 7] 1969 	ld	(hl),c
                           1970 ;src/main.c:425: prota.mover = SI;
   0A1E 21r3Ar00      [10] 1971 	ld	hl,#(_prota + 0x0006)
   0A21 36 01         [10] 1972 	ld	(hl),#0x01
                           1973 ;src/main.c:426: prota.sprite = g_hero;
   0A23 21r00r00      [10] 1974 	ld	hl,#_g_hero
   0A26 22r38r00      [16] 1975 	ld	((_prota + 0x0004)), hl
   0A29 C9            [10] 1976 	ret
   0A2A                    1977 00104$:
                           1978 ;src/main.c:428: }else if( prota.x + G_HERO_W >= 80){
   0A2A 7B            [ 4] 1979 	ld	a,e
   0A2B B7            [ 4] 1980 	or	a, a
   0A2C C0            [11] 1981 	ret	NZ
                           1982 ;src/main.c:429: avanzarMapa();
   0A2D C3r7Fr09      [10] 1983 	jp  _avanzarMapa
                           1984 ;src/main.c:433: void moverArriba() {
                           1985 ;	---------------------------------
                           1986 ; Function moverArriba
                           1987 ; ---------------------------------
   0A30                    1988 _moverArriba::
                           1989 ;src/main.c:434: prota.mira = M_arriba;
   0A30 21r3Br00      [10] 1990 	ld	hl,#(_prota + 0x0007)
   0A33 36 02         [10] 1991 	ld	(hl),#0x02
                           1992 ;src/main.c:435: if (!checkCollision(M_arriba)) { 
   0A35 3E 02         [ 7] 1993 	ld	a,#0x02
   0A37 F5            [11] 1994 	push	af
   0A38 33            [ 6] 1995 	inc	sp
   0A39 CDr3Br01      [17] 1996 	call	_checkCollision
   0A3C 33            [ 6] 1997 	inc	sp
   0A3D 7D            [ 4] 1998 	ld	a,l
   0A3E B7            [ 4] 1999 	or	a, a
   0A3F C0            [11] 2000 	ret	NZ
                           2001 ;src/main.c:436: prota.y--;
   0A40 21r35r00      [10] 2002 	ld	hl,#_prota + 1
   0A43 4E            [ 7] 2003 	ld	c,(hl)
   0A44 0D            [ 4] 2004 	dec	c
   0A45 71            [ 7] 2005 	ld	(hl),c
                           2006 ;src/main.c:437: prota.y--;
   0A46 0D            [ 4] 2007 	dec	c
   0A47 71            [ 7] 2008 	ld	(hl),c
                           2009 ;src/main.c:438: prota.mover  = SI;
   0A48 21r3Ar00      [10] 2010 	ld	hl,#(_prota + 0x0006)
   0A4B 36 01         [10] 2011 	ld	(hl),#0x01
                           2012 ;src/main.c:439: prota.sprite = g_hero_up;
   0A4D 21r00r00      [10] 2013 	ld	hl,#_g_hero_up
   0A50 22r38r00      [16] 2014 	ld	((_prota + 0x0004)), hl
   0A53 C9            [10] 2015 	ret
                           2016 ;src/main.c:443: void moverAbajo() {
                           2017 ;	---------------------------------
                           2018 ; Function moverAbajo
                           2019 ; ---------------------------------
   0A54                    2020 _moverAbajo::
                           2021 ;src/main.c:444: prota.mira = M_abajo;
   0A54 21r3Br00      [10] 2022 	ld	hl,#(_prota + 0x0007)
   0A57 36 03         [10] 2023 	ld	(hl),#0x03
                           2024 ;src/main.c:445: if (!checkCollision(M_abajo) ) { 
   0A59 3E 03         [ 7] 2025 	ld	a,#0x03
   0A5B F5            [11] 2026 	push	af
   0A5C 33            [ 6] 2027 	inc	sp
   0A5D CDr3Br01      [17] 2028 	call	_checkCollision
   0A60 33            [ 6] 2029 	inc	sp
   0A61 7D            [ 4] 2030 	ld	a,l
   0A62 B7            [ 4] 2031 	or	a, a
   0A63 C0            [11] 2032 	ret	NZ
                           2033 ;src/main.c:446: prota.y++;
   0A64 01r35r00      [10] 2034 	ld	bc,#_prota + 1
   0A67 0A            [ 7] 2035 	ld	a,(bc)
   0A68 3C            [ 4] 2036 	inc	a
   0A69 02            [ 7] 2037 	ld	(bc),a
                           2038 ;src/main.c:447: prota.y++;
   0A6A 3C            [ 4] 2039 	inc	a
   0A6B 02            [ 7] 2040 	ld	(bc),a
                           2041 ;src/main.c:448: prota.mover  = SI;
   0A6C 21r3Ar00      [10] 2042 	ld	hl,#(_prota + 0x0006)
   0A6F 36 01         [10] 2043 	ld	(hl),#0x01
                           2044 ;src/main.c:449: prota.sprite = g_hero_down;
   0A71 21r00r00      [10] 2045 	ld	hl,#_g_hero_down
   0A74 22r38r00      [16] 2046 	ld	((_prota + 0x0004)), hl
   0A77 C9            [10] 2047 	ret
                           2048 ;src/main.c:456: void intHandler() {
                           2049 ;	---------------------------------
                           2050 ; Function intHandler
                           2051 ; ---------------------------------
   0A78                    2052 _intHandler::
                           2053 ;src/main.c:457: if (++i == 6) {
   0A78 21r46r00      [10] 2054 	ld	hl, #_i+0
   0A7B 34            [11] 2055 	inc	(hl)
   0A7C 3Ar46r00      [13] 2056 	ld	a,(#_i + 0)
   0A7F D6 06         [ 7] 2057 	sub	a, #0x06
   0A81 C0            [11] 2058 	ret	NZ
                           2059 ;src/main.c:458: play();
   0A82 CDr00r00      [17] 2060 	call	_play
                           2061 ;src/main.c:459: i=0;
   0A85 21r46r00      [10] 2062 	ld	hl,#_i + 0
   0A88 36 00         [10] 2063 	ld	(hl), #0x00
   0A8A C9            [10] 2064 	ret
                           2065 ;src/main.c:463: void inicializarCPC() {
                           2066 ;	---------------------------------
                           2067 ; Function inicializarCPC
                           2068 ; ---------------------------------
   0A8B                    2069 _inicializarCPC::
                           2070 ;src/main.c:464: cpct_disableFirmware();
   0A8B CDr00r00      [17] 2071 	call	_cpct_disableFirmware
                           2072 ;src/main.c:465: cpct_setVideoMode(0);
   0A8E 2E 00         [ 7] 2073 	ld	l,#0x00
   0A90 CDr00r00      [17] 2074 	call	_cpct_setVideoMode
                           2075 ;src/main.c:466: cpct_setBorder(HW_BLACK);
   0A93 21 10 14      [10] 2076 	ld	hl,#0x1410
   0A96 E5            [11] 2077 	push	hl
   0A97 CDr00r00      [17] 2078 	call	_cpct_setPALColour
                           2079 ;src/main.c:467: cpct_setPalette(g_palette, 16);
   0A9A 21 10 00      [10] 2080 	ld	hl,#0x0010
   0A9D E5            [11] 2081 	push	hl
   0A9E 21r00r00      [10] 2082 	ld	hl,#_g_palette
   0AA1 E5            [11] 2083 	push	hl
   0AA2 CDr00r00      [17] 2084 	call	_cpct_setPalette
   0AA5 C9            [10] 2085 	ret
                           2086 ;src/main.c:472: void inicializarJuego() {
                           2087 ;	---------------------------------
                           2088 ; Function inicializarJuego
                           2089 ; ---------------------------------
   0AA6                    2090 _inicializarJuego::
                           2091 ;src/main.c:474: num_mapa = 0;
   0AA6 21r02r00      [10] 2092 	ld	hl,#_num_mapa + 0
   0AA9 36 00         [10] 2093 	ld	(hl), #0x00
                           2094 ;src/main.c:475: mapa = mapas[num_mapa];
   0AAB 21r16r00      [10] 2095 	ld	hl, #_mapas + 0
   0AAE 7E            [ 7] 2096 	ld	a,(hl)
   0AAF FD 21r00r00   [14] 2097 	ld	iy,#_mapa
   0AB3 FD 77 00      [19] 2098 	ld	0 (iy),a
   0AB6 23            [ 6] 2099 	inc	hl
   0AB7 7E            [ 7] 2100 	ld	a,(hl)
   0AB8 32r01r00      [13] 2101 	ld	(#_mapa + 1),a
                           2102 ;src/main.c:476: cpct_etm_setTileset2x4(g_tileset);
   0ABB 21r00r00      [10] 2103 	ld	hl,#_g_tileset
   0ABE CDr00r00      [17] 2104 	call	_cpct_etm_setTileset2x4
                           2105 ;src/main.c:478: dibujarMapa();
   0AC1 CDr00r00      [17] 2106 	call	_dibujarMapa
                           2107 ;src/main.c:481: barraPuntuacionInicial();
   0AC4 CDr00r00      [17] 2108 	call	_barraPuntuacionInicial
                           2109 ;src/main.c:484: prota.x = prota.px = 4;
   0AC7 21r36r00      [10] 2110 	ld	hl,#(_prota + 0x0002)
   0ACA 36 04         [10] 2111 	ld	(hl),#0x04
   0ACC 21r34r00      [10] 2112 	ld	hl,#_prota
   0ACF 36 04         [10] 2113 	ld	(hl),#0x04
                           2114 ;src/main.c:485: prota.y = prota.py = 80 + ORIGEN_MAPA_Y;
   0AD1 21r37r00      [10] 2115 	ld	hl,#(_prota + 0x0003)
   0AD4 36 68         [10] 2116 	ld	(hl),#0x68
   0AD6 21r35r00      [10] 2117 	ld	hl,#(_prota + 0x0001)
   0AD9 36 68         [10] 2118 	ld	(hl),#0x68
                           2119 ;src/main.c:486: prota.mover  = NO;
   0ADB 21r3Ar00      [10] 2120 	ld	hl,#(_prota + 0x0006)
   0ADE 36 00         [10] 2121 	ld	(hl),#0x00
                           2122 ;src/main.c:487: prota.mira=M_derecha;
   0AE0 21r3Br00      [10] 2123 	ld	hl,#(_prota + 0x0007)
   0AE3 36 00         [10] 2124 	ld	(hl),#0x00
                           2125 ;src/main.c:488: prota.sprite = g_hero;
   0AE5 21r00r00      [10] 2126 	ld	hl,#_g_hero
   0AE8 22r38r00      [16] 2127 	ld	((_prota + 0x0004)), hl
                           2128 ;src/main.c:492: cu.x = cu.px = 0;
   0AEB 21r3Er00      [10] 2129 	ld	hl,#(_cu + 0x0002)
   0AEE 36 00         [10] 2130 	ld	(hl),#0x00
   0AF0 21r3Cr00      [10] 2131 	ld	hl,#_cu
   0AF3 36 00         [10] 2132 	ld	(hl),#0x00
                           2133 ;src/main.c:493: cu.y = cu.py = 0;
   0AF5 21r3Fr00      [10] 2134 	ld	hl,#(_cu + 0x0003)
   0AF8 36 00         [10] 2135 	ld	(hl),#0x00
   0AFA 21r3Dr00      [10] 2136 	ld	hl,#(_cu + 0x0001)
   0AFD 36 00         [10] 2137 	ld	(hl),#0x00
                           2138 ;src/main.c:494: cu.lanzado = NO;
   0AFF 21r42r00      [10] 2139 	ld	hl,#(_cu + 0x0006)
   0B02 36 00         [10] 2140 	ld	(hl),#0x00
                           2141 ;src/main.c:495: cu.mover = NO;
   0B04 21r45r00      [10] 2142 	ld	hl,#(_cu + 0x0009)
   0B07 36 00         [10] 2143 	ld	(hl),#0x00
                           2144 ;src/main.c:497: inicializarEnemy();
   0B09 CDrFDr08      [17] 2145 	call	_inicializarEnemy
                           2146 ;src/main.c:499: dibujarProta();
   0B0C C3r26r00      [10] 2147 	jp  _dibujarProta
                           2148 ;src/main.c:502: void main(void) {
                           2149 ;	---------------------------------
                           2150 ; Function main
                           2151 ; ---------------------------------
   0B0F                    2152 _main::
   0B0F DD E5         [15] 2153 	push	ix
   0B11 DD 21 00 00   [14] 2154 	ld	ix,#0
   0B15 DD 39         [15] 2155 	add	ix,sp
   0B17 3B            [ 6] 2156 	dec	sp
                           2157 ;src/main.c:507: inicializarCPC();
   0B18 CDr8Br0A      [17] 2158 	call	_inicializarCPC
                           2159 ;src/main.c:509: menuInicio();
   0B1B CDr00r00      [17] 2160 	call	_menuInicio
                           2161 ;src/main.c:511: inicializarJuego();
   0B1E CDrA6r0A      [17] 2162 	call	_inicializarJuego
                           2163 ;src/main.c:515: while (1) {
   0B21                    2164 00122$:
                           2165 ;src/main.c:517: i = (2 + num_mapa) + 1;
   0B21 3Ar02r00      [13] 2166 	ld	a,(#_num_mapa + 0)
   0B24 C6 03         [ 7] 2167 	add	a, #0x03
   0B26 DD 77 FF      [19] 2168 	ld	-1 (ix),a
                           2169 ;src/main.c:518: actual = enemy;
                           2170 ;src/main.c:520: comprobarTeclado(&cu, &prota, mapa, g_tablatrans);
   0B29 21r00r2E      [10] 2171 	ld	hl,#_g_tablatrans
   0B2C E5            [11] 2172 	push	hl
   0B2D 2Ar00r00      [16] 2173 	ld	hl,(_mapa)
   0B30 E5            [11] 2174 	push	hl
   0B31 21r34r00      [10] 2175 	ld	hl,#_prota
   0B34 E5            [11] 2176 	push	hl
   0B35 21r3Cr00      [10] 2177 	ld	hl,#_cu
   0B38 E5            [11] 2178 	push	hl
   0B39 CDrD4r00      [17] 2179 	call	_comprobarTeclado
   0B3C 21 08 00      [10] 2180 	ld	hl,#8
   0B3F 39            [11] 2181 	add	hl,sp
   0B40 F9            [ 6] 2182 	ld	sp,hl
                           2183 ;src/main.c:521: moverCuchillo(&cu, mapa);
   0B41 2Ar00r00      [16] 2184 	ld	hl,(_mapa)
   0B44 E5            [11] 2185 	push	hl
   0B45 21r3Cr00      [10] 2186 	ld	hl,#_cu
   0B48 E5            [11] 2187 	push	hl
   0B49 CDr00r00      [17] 2188 	call	_moverCuchillo
   0B4C F1            [10] 2189 	pop	af
   0B4D F1            [10] 2190 	pop	af
                           2191 ;src/main.c:523: while(--i){
   0B4E 21r00r00      [10] 2192 	ld	hl,#_enemy
   0B51 DD 4E FF      [19] 2193 	ld	c,-1 (ix)
   0B54                    2194 00101$:
   0B54 0D            [ 4] 2195 	dec	c
   0B55 79            [ 4] 2196 	ld	a,c
   0B56 B7            [ 4] 2197 	or	a, a
   0B57 28 0F         [12] 2198 	jr	Z,00103$
                           2199 ;src/main.c:524: moverEnemigo(actual);
   0B59 E5            [11] 2200 	push	hl
   0B5A C5            [11] 2201 	push	bc
   0B5B E5            [11] 2202 	push	hl
   0B5C CDrB0r08      [17] 2203 	call	_moverEnemigo
   0B5F F1            [10] 2204 	pop	af
   0B60 C1            [10] 2205 	pop	bc
   0B61 E1            [10] 2206 	pop	hl
                           2207 ;src/main.c:525: ++actual;
   0B62 11 0D 00      [10] 2208 	ld	de,#0x000D
   0B65 19            [11] 2209 	add	hl,de
   0B66 18 EC         [12] 2210 	jr	00101$
   0B68                    2211 00103$:
                           2212 ;src/main.c:528: actual = enemy;
   0B68 01r00r00      [10] 2213 	ld	bc,#_enemy
                           2214 ;src/main.c:530: cpct_waitVSYNC();
   0B6B C5            [11] 2215 	push	bc
   0B6C CDr00r00      [17] 2216 	call	_cpct_waitVSYNC
   0B6F C1            [10] 2217 	pop	bc
                           2218 ;src/main.c:533: if (prota.mover) {
   0B70 3Ar3Ar00      [13] 2219 	ld	a, (#(_prota + 0x0006) + 0)
   0B73 B7            [ 4] 2220 	or	a, a
   0B74 28 0A         [12] 2221 	jr	Z,00105$
                           2222 ;src/main.c:534: redibujarProta();
   0B76 C5            [11] 2223 	push	bc
   0B77 CDrC0r00      [17] 2224 	call	_redibujarProta
   0B7A C1            [10] 2225 	pop	bc
                           2226 ;src/main.c:535: prota.mover = NO;
   0B7B 21r3Ar00      [10] 2227 	ld	hl,#(_prota + 0x0006)
   0B7E 36 00         [10] 2228 	ld	(hl),#0x00
   0B80                    2229 00105$:
                           2230 ;src/main.c:537: if(cu.lanzado && cu.mover){
   0B80 21r42r00      [10] 2231 	ld	hl, #(_cu + 0x0006) + 0
   0B83 5E            [ 7] 2232 	ld	e,(hl)
   0B84 7B            [ 4] 2233 	ld	a,e
   0B85 B7            [ 4] 2234 	or	a, a
   0B86 28 1E         [12] 2235 	jr	Z,00110$
   0B88 3Ar45r00      [13] 2236 	ld	a, (#(_cu + 0x0009) + 0)
   0B8B B7            [ 4] 2237 	or	a, a
   0B8C 28 18         [12] 2238 	jr	Z,00110$
                           2239 ;src/main.c:538: redibujarCuchillo(&cu, g_tablatrans, mapa);
   0B8E C5            [11] 2240 	push	bc
   0B8F 2Ar00r00      [16] 2241 	ld	hl,(_mapa)
   0B92 E5            [11] 2242 	push	hl
   0B93 21r00r2E      [10] 2243 	ld	hl,#_g_tablatrans
   0B96 E5            [11] 2244 	push	hl
   0B97 21r3Cr00      [10] 2245 	ld	hl,#_cu
   0B9A E5            [11] 2246 	push	hl
   0B9B CDr00r00      [17] 2247 	call	_redibujarCuchillo
   0B9E 21 06 00      [10] 2248 	ld	hl,#6
   0BA1 39            [11] 2249 	add	hl,sp
   0BA2 F9            [ 6] 2250 	ld	sp,hl
   0BA3 C1            [10] 2251 	pop	bc
   0BA4 18 23         [12] 2252 	jr	00137$
   0BA6                    2253 00110$:
                           2254 ;src/main.c:539: }else if (cu.lanzado && !cu.mover){
   0BA6 7B            [ 4] 2255 	ld	a,e
   0BA7 B7            [ 4] 2256 	or	a, a
   0BA8 28 1F         [12] 2257 	jr	Z,00137$
   0BAA 3Ar45r00      [13] 2258 	ld	a, (#(_cu + 0x0009) + 0)
   0BAD B7            [ 4] 2259 	or	a, a
   0BAE 20 19         [12] 2260 	jr	NZ,00137$
                           2261 ;src/main.c:540: borrarCuchillo(&cu, mapa);
   0BB0 C5            [11] 2262 	push	bc
   0BB1 2Ar00r00      [16] 2263 	ld	hl,(_mapa)
   0BB4 E5            [11] 2264 	push	hl
   0BB5 21r3Cr00      [10] 2265 	ld	hl,#_cu
   0BB8 E5            [11] 2266 	push	hl
   0BB9 CDr00r00      [17] 2267 	call	_borrarCuchillo
   0BBC F1            [10] 2268 	pop	af
   0BBD F1            [10] 2269 	pop	af
   0BBE C1            [10] 2270 	pop	bc
                           2271 ;src/main.c:541: cu.x = 0;
   0BBF 21r3Cr00      [10] 2272 	ld	hl,#_cu
   0BC2 36 00         [10] 2273 	ld	(hl),#0x00
                           2274 ;src/main.c:542: cu.y = 0;
   0BC4 21r3Dr00      [10] 2275 	ld	hl,#(_cu + 0x0001)
   0BC7 36 00         [10] 2276 	ld	(hl),#0x00
                           2277 ;src/main.c:545: while(--i){
   0BC9                    2278 00137$:
   0BC9 DD 36 FF 05   [19] 2279 	ld	-1 (ix),#0x05
   0BCD                    2280 00118$:
   0BCD DD 35 FF      [23] 2281 	dec	-1 (ix)
   0BD0 DD 7E FF      [19] 2282 	ld	a,-1 (ix)
   0BD3 B7            [ 4] 2283 	or	a, a
   0BD4 28 71         [12] 2284 	jr	Z,00120$
                           2285 ;src/main.c:546: if(actual->mover){
   0BD6 C5            [11] 2286 	push	bc
   0BD7 FD E1         [14] 2287 	pop	iy
   0BD9 FD 7E 06      [19] 2288 	ld	a,6 (iy)
   0BDC B7            [ 4] 2289 	or	a, a
   0BDD 28 07         [12] 2290 	jr	Z,00114$
                           2291 ;src/main.c:547: redibujarEnemigo(actual);
   0BDF C5            [11] 2292 	push	bc
   0BE0 C5            [11] 2293 	push	bc
   0BE1 CDr24r04      [17] 2294 	call	_redibujarEnemigo
   0BE4 F1            [10] 2295 	pop	af
   0BE5 C1            [10] 2296 	pop	bc
   0BE6                    2297 00114$:
                           2298 ;src/main.c:549: if (actual->muerto && actual->muertes == 0){
   0BE6 C5            [11] 2299 	push	bc
   0BE7 FD E1         [14] 2300 	pop	iy
   0BE9 FD 7E 08      [19] 2301 	ld	a,8 (iy)
   0BEC B7            [ 4] 2302 	or	a, a
   0BED 28 50         [12] 2303 	jr	Z,00116$
   0BEF 21 0C 00      [10] 2304 	ld	hl,#0x000C
   0BF2 09            [11] 2305 	add	hl,bc
   0BF3 EB            [ 4] 2306 	ex	de,hl
   0BF4 1A            [ 7] 2307 	ld	a,(de)
   0BF5 B7            [ 4] 2308 	or	a, a
   0BF6 20 47         [12] 2309 	jr	NZ,00116$
                           2310 ;src/main.c:550: borrarEnemigo(actual);
   0BF8 C5            [11] 2311 	push	bc
   0BF9 D5            [11] 2312 	push	de
   0BFA C5            [11] 2313 	push	bc
   0BFB CDr90r03      [17] 2314 	call	_borrarEnemigo
   0BFE F1            [10] 2315 	pop	af
   0BFF D1            [10] 2316 	pop	de
   0C00 C1            [10] 2317 	pop	bc
                           2318 ;src/main.c:551: dibujarExplosion(actual);
   0C01 C5            [11] 2319 	push	bc
   0C02 D5            [11] 2320 	push	de
   0C03 C5            [11] 2321 	push	bc
   0C04 CDrE8r02      [17] 2322 	call	_dibujarExplosion
   0C07 F1            [10] 2323 	pop	af
   0C08 D1            [10] 2324 	pop	de
   0C09 C1            [10] 2325 	pop	bc
                           2326 ;src/main.c:552: puntuacion_aux = puntuacion;
   0C0A FD 21r03r00   [14] 2327 	ld	iy,#_puntuacion
   0C0E FD 6E 00      [19] 2328 	ld	l,0 (iy)
   0C11 26 00         [ 7] 2329 	ld	h,#0x00
                           2330 ;src/main.c:553: puntuacion = aumentarPuntuacion(puntuacion_aux);
   0C13 C5            [11] 2331 	push	bc
   0C14 D5            [11] 2332 	push	de
   0C15 E5            [11] 2333 	push	hl
   0C16 CDr00r00      [17] 2334 	call	_aumentarPuntuacion
   0C19 F1            [10] 2335 	pop	af
   0C1A D1            [10] 2336 	pop	de
   0C1B C1            [10] 2337 	pop	bc
   0C1C FD 21r03r00   [14] 2338 	ld	iy,#_puntuacion
   0C20 FD 75 00      [19] 2339 	ld	0 (iy),l
                           2340 ;src/main.c:554: modificarPuntuacion(puntuacion);
   0C23 FD 21r03r00   [14] 2341 	ld	iy,#_puntuacion
   0C27 FD 6E 00      [19] 2342 	ld	l,0 (iy)
   0C2A 26 00         [ 7] 2343 	ld	h,#0x00
   0C2C C5            [11] 2344 	push	bc
   0C2D D5            [11] 2345 	push	de
   0C2E E5            [11] 2346 	push	hl
   0C2F CDr00r00      [17] 2347 	call	_modificarPuntuacion
   0C32 F1            [10] 2348 	pop	af
   0C33 D1            [10] 2349 	pop	de
   0C34 C1            [10] 2350 	pop	bc
                           2351 ;src/main.c:556: actual->muertes++;
   0C35 1A            [ 7] 2352 	ld	a,(de)
   0C36 3C            [ 4] 2353 	inc	a
   0C37 12            [ 7] 2354 	ld	(de),a
                           2355 ;src/main.c:557: actual->x = 0;
   0C38 AF            [ 4] 2356 	xor	a, a
   0C39 02            [ 7] 2357 	ld	(bc),a
                           2358 ;src/main.c:558: actual->y = 0;
   0C3A 59            [ 4] 2359 	ld	e, c
   0C3B 50            [ 4] 2360 	ld	d, b
   0C3C 13            [ 6] 2361 	inc	de
   0C3D AF            [ 4] 2362 	xor	a, a
   0C3E 12            [ 7] 2363 	ld	(de),a
   0C3F                    2364 00116$:
                           2365 ;src/main.c:560: ++actual;
   0C3F 21 0D 00      [10] 2366 	ld	hl,#0x000D
   0C42 09            [11] 2367 	add	hl,bc
   0C43 4D            [ 4] 2368 	ld	c,l
   0C44 44            [ 4] 2369 	ld	b,h
   0C45 18 86         [12] 2370 	jr	00118$
   0C47                    2371 00120$:
                           2372 ;src/main.c:562: cpct_waitVSYNC();
   0C47 CDr00r00      [17] 2373 	call	_cpct_waitVSYNC
   0C4A C3r21r0B      [10] 2374 	jp	00122$
   0C4D 33            [ 6] 2375 	inc	sp
   0C4E DD E1         [14] 2376 	pop	ix
   0C50 C9            [10] 2377 	ret
                           2378 	.area _CODE
                           2379 	.area _INITIALIZER
   0000                    2380 __xinit__mapa:
   0000 00 00              2381 	.dw #0x0000
   0002                    2382 __xinit__num_mapa:
   0002 00                 2383 	.db #0x00	; 0
   0003                    2384 __xinit__puntuacion:
   0003 00                 2385 	.db #0x00	; 0
   0004                    2386 __xinit__vidas:
   0004 05                 2387 	.db #0x05	; 5
                           2388 	.area _CABS (ABS)
