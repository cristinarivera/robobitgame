                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.5 #9498 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module main
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _inicializarJuego
                             13 	.globl _inicializarCPC
                             14 	.globl _intHandler
                             15 	.globl _moverAbajo
                             16 	.globl _moverArriba
                             17 	.globl _moverDerecha
                             18 	.globl _moverIzquierda
                             19 	.globl _avanzarMapa
                             20 	.globl _inicializarEnemy
                             21 	.globl _moverEnemigo
                             22 	.globl _moverEnemigoIzquierda
                             23 	.globl _moverEnemigoDerecha
                             24 	.globl _moverEnemigoAbajo
                             25 	.globl _moverEnemigoArriba
                             26 	.globl _checkEnemyCollision
                             27 	.globl _redibujarEnemigo
                             28 	.globl _borrarEnemigo
                             29 	.globl _borrarExplosion
                             30 	.globl _dibujarExplosion
                             31 	.globl _dibujarEnemigo
                             32 	.globl _checkCollision
                             33 	.globl _comprobarTeclado
                             34 	.globl _redibujarProta
                             35 	.globl _borrarProta
                             36 	.globl _dibujarProta
                             37 	.globl _dibujarMapa
                             38 	.globl _play
                             39 	.globl _moverCuchillo
                             40 	.globl _lanzarCuchillo
                             41 	.globl _redibujarCuchillo
                             42 	.globl _borrarCuchillo
                             43 	.globl _getTilePtr
                             44 	.globl _aumentarPuntuacion
                             45 	.globl _modificarPuntuacion
                             46 	.globl _barraPuntuacionInicial
                             47 	.globl _menuInicio
                             48 	.globl _menuFin
                             49 	.globl _cpct_etm_setTileset2x4
                             50 	.globl _cpct_etm_drawTileBox2x4
                             51 	.globl _cpct_akp_musicInit
                             52 	.globl _cpct_getScreenPtr
                             53 	.globl _cpct_setPALColour
                             54 	.globl _cpct_setPalette
                             55 	.globl _cpct_waitVSYNC
                             56 	.globl _cpct_setVideoMode
                             57 	.globl _cpct_drawSpriteMaskedAlignedTable
                             58 	.globl _cpct_isAnyKeyPressed
                             59 	.globl _cpct_isKeyPressed
                             60 	.globl _cpct_scanKeyboard_if
                             61 	.globl _cpct_setInterruptHandler
                             62 	.globl _cpct_disableFirmware
                             63 	.globl _vidas
                             64 	.globl _puntuacion
                             65 	.globl _num_mapa
                             66 	.globl _mapa
                             67 	.globl _i
                             68 	.globl _cu
                             69 	.globl _prota
                             70 	.globl _enemy
                             71 	.globl _spawnY
                             72 	.globl _spawnX
                             73 	.globl _mapas
                             74 ;--------------------------------------------------------
                             75 ; special function registers
                             76 ;--------------------------------------------------------
                             77 ;--------------------------------------------------------
                             78 ; ram data
                             79 ;--------------------------------------------------------
                             80 	.area _DATA
   0000                      81 _enemy::
   0000                      82 	.ds 52
   0034                      83 _prota::
   0034                      84 	.ds 8
   003C                      85 _cu::
   003C                      86 	.ds 10
   0046                      87 _i::
   0046                      88 	.ds 1
                             89 ;--------------------------------------------------------
                             90 ; ram data
                             91 ;--------------------------------------------------------
                             92 	.area _INITIALIZED
   0000                      93 _mapa::
   0000                      94 	.ds 2
   0002                      95 _num_mapa::
   0002                      96 	.ds 1
   0003                      97 _puntuacion::
   0003                      98 	.ds 1
   0004                      99 _vidas::
   0004                     100 	.ds 1
                            101 ;--------------------------------------------------------
                            102 ; absolute external ram data
                            103 ;--------------------------------------------------------
                            104 	.area _DABS (ABS)
                            105 ;--------------------------------------------------------
                            106 ; global & static initialisations
                            107 ;--------------------------------------------------------
                            108 	.area _HOME
                            109 	.area _GSINIT
                            110 	.area _GSFINAL
                            111 	.area _GSINIT
                            112 ;--------------------------------------------------------
                            113 ; Home
                            114 ;--------------------------------------------------------
                            115 	.area _HOME
                            116 	.area _HOME
                            117 ;--------------------------------------------------------
                            118 ; code
                            119 ;--------------------------------------------------------
                            120 	.area _CODE
                            121 ;src/main.c:92: cpctm_createTransparentMaskTable(g_tablatrans, 0x2E00, M0, 0); 
                            122 ;	---------------------------------
                            123 ; Function dummy_cpct_transparentMaskTable0M0_container
                            124 ; ---------------------------------
   0000                     125 _dummy_cpct_transparentMaskTable0M0_container::
                            126 	.area _g_tablatrans_ (ABS) 
   2E00                     127 	.org 0x2E00 
   2E00                     128 	 _g_tablatrans::
   2E00 FF AA 55 00 AA AA   129 	.db 0xFF, 0xAA, 0x55, 0x00, 0xAA, 0xAA, 0x00, 0x00 
        00 00
   2E08 55 00 55 00 00 00   130 	.db 0x55, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E10 AA AA 00 00 AA AA   131 	.db 0xAA, 0xAA, 0x00, 0x00, 0xAA, 0xAA, 0x00, 0x00 
        00 00
   2E18 00 00 00 00 00 00   132 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E20 55 00 55 00 00 00   133 	.db 0x55, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E28 55 00 55 00 00 00   134 	.db 0x55, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E30 00 00 00 00 00 00   135 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E38 00 00 00 00 00 00   136 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E40 AA AA 00 00 AA AA   137 	.db 0xAA, 0xAA, 0x00, 0x00, 0xAA, 0xAA, 0x00, 0x00 
        00 00
   2E48 00 00 00 00 00 00   138 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E50 AA AA 00 00 AA AA   139 	.db 0xAA, 0xAA, 0x00, 0x00, 0xAA, 0xAA, 0x00, 0x00 
        00 00
   2E58 00 00 00 00 00 00   140 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E60 00 00 00 00 00 00   141 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E68 00 00 00 00 00 00   142 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E70 00 00 00 00 00 00   143 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E78 00 00 00 00 00 00   144 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E80 55 00 55 00 00 00   145 	.db 0x55, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E88 55 00 55 00 00 00   146 	.db 0x55, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E90 00 00 00 00 00 00   147 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2E98 00 00 00 00 00 00   148 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2EA0 55 00 55 00 00 00   149 	.db 0x55, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2EA8 55 00 55 00 00 00   150 	.db 0x55, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2EB0 00 00 00 00 00 00   151 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2EB8 00 00 00 00 00 00   152 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2EC0 00 00 00 00 00 00   153 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2EC8 00 00 00 00 00 00   154 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2ED0 00 00 00 00 00 00   155 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2ED8 00 00 00 00 00 00   156 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2EE0 00 00 00 00 00 00   157 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2EE8 00 00 00 00 00 00   158 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2EF0 00 00 00 00 00 00   159 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   2EF8 00 00 00 00 00 00   160 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
                            161 	.area _CSEG (REL, CON) 
                            162 ;src/main.c:95: void dibujarMapa() {
                            163 ;	---------------------------------
                            164 ; Function dibujarMapa
                            165 ; ---------------------------------
   0000                     166 _dibujarMapa::
                            167 ;src/main.c:98: cpct_etm_drawTilemap2x4 (g_map1_W, g_map1_H, p, mapa);
   0000 2Ar00r00      [16]  168 	ld	hl,(_mapa)
   0003 E5            [11]  169 	push	hl
   0004 21 F0 C0      [10]  170 	ld	hl,#0xC0F0
   0007 E5            [11]  171 	push	hl
   0008 21 2C 28      [10]  172 	ld	hl,#0x282C
   000B E5            [11]  173 	push	hl
   000C 2E 00         [ 7]  174 	ld	l, #0x00
   000E E5            [11]  175 	push	hl
   000F AF            [ 4]  176 	xor	a, a
   0010 F5            [11]  177 	push	af
   0011 33            [ 6]  178 	inc	sp
   0012 CDr00r00      [17]  179 	call	_cpct_etm_drawTileBox2x4
   0015 C9            [10]  180 	ret
   0016                     181 _mapas:
   0016r00r00               182 	.dw _g_map1
   0018r00r00               183 	.dw _g_map2
   001Ar00r00               184 	.dw _g_map3
   001C                     185 _spawnX:
   001C 00                  186 	.db #0x00	; 0
   001D 28                  187 	.db #0x28	; 40
   001E 47                  188 	.db #0x47	; 71	'G'
   001F 14                  189 	.db #0x14	; 20
   0020 3C                  190 	.db #0x3C	; 60
   0021                     191 _spawnY:
   0021 00                  192 	.db #0x00	; 0
   0022 2C                  193 	.db #0x2C	; 44
   0023 72                  194 	.db #0x72	; 114	'r'
   0024 8A                  195 	.db #0x8A	; 138
   0025 8A                  196 	.db #0x8A	; 138
                            197 ;src/main.c:101: void dibujarProta() {
                            198 ;	---------------------------------
                            199 ; Function dibujarProta
                            200 ; ---------------------------------
   0026                     201 _dibujarProta::
                            202 ;src/main.c:102: u8* pvmem = cpct_getScreenPtr(CPCT_VMEM_START, prota.x, prota.y);
   0026 21r35r00      [10]  203 	ld	hl, #_prota + 1
   0029 56            [ 7]  204 	ld	d,(hl)
   002A 21r34r00      [10]  205 	ld	hl, #_prota + 0
   002D 46            [ 7]  206 	ld	b,(hl)
   002E D5            [11]  207 	push	de
   002F 33            [ 6]  208 	inc	sp
   0030 C5            [11]  209 	push	bc
   0031 33            [ 6]  210 	inc	sp
   0032 21 00 C0      [10]  211 	ld	hl,#0xC000
   0035 E5            [11]  212 	push	hl
   0036 CDr00r00      [17]  213 	call	_cpct_getScreenPtr
   0039 EB            [ 4]  214 	ex	de,hl
                            215 ;src/main.c:103: cpct_drawSpriteMaskedAlignedTable (prota.sprite, pvmem, G_HERO_W, G_HERO_H, g_tablatrans);
   003A ED 4Br38r00   [20]  216 	ld	bc, (#_prota + 4)
   003E 21r00r2E      [10]  217 	ld	hl,#_g_tablatrans
   0041 E5            [11]  218 	push	hl
   0042 21 07 16      [10]  219 	ld	hl,#0x1607
   0045 E5            [11]  220 	push	hl
   0046 D5            [11]  221 	push	de
   0047 C5            [11]  222 	push	bc
   0048 CDr00r00      [17]  223 	call	_cpct_drawSpriteMaskedAlignedTable
   004B C9            [10]  224 	ret
                            225 ;src/main.c:106: void borrarProta() {
                            226 ;	---------------------------------
                            227 ; Function borrarProta
                            228 ; ---------------------------------
   004C                     229 _borrarProta::
   004C DD E5         [15]  230 	push	ix
   004E DD 21 00 00   [14]  231 	ld	ix,#0
   0052 DD 39         [15]  232 	add	ix,sp
   0054 F5            [11]  233 	push	af
   0055 3B            [ 6]  234 	dec	sp
                            235 ;src/main.c:110: u8 w = 4 + (prota.px & 1);
   0056 21r36r00      [10]  236 	ld	hl, #_prota + 2
   0059 4E            [ 7]  237 	ld	c,(hl)
   005A 79            [ 4]  238 	ld	a,c
   005B E6 01         [ 7]  239 	and	a, #0x01
   005D 47            [ 4]  240 	ld	b,a
   005E 04            [ 4]  241 	inc	b
   005F 04            [ 4]  242 	inc	b
   0060 04            [ 4]  243 	inc	b
   0061 04            [ 4]  244 	inc	b
                            245 ;src/main.c:113: u8 h = 6 + (prota.py & 2 ? 1 : 0);
   0062 21r37r00      [10]  246 	ld	hl, #_prota + 3
   0065 5E            [ 7]  247 	ld	e,(hl)
   0066 CB 4B         [ 8]  248 	bit	1, e
   0068 28 04         [12]  249 	jr	Z,00103$
   006A 3E 01         [ 7]  250 	ld	a,#0x01
   006C 18 02         [12]  251 	jr	00104$
   006E                     252 00103$:
   006E 3E 00         [ 7]  253 	ld	a,#0x00
   0070                     254 00104$:
   0070 C6 06         [ 7]  255 	add	a, #0x06
   0072 DD 77 FD      [19]  256 	ld	-3 (ix),a
                            257 ;src/main.c:115: cpct_etm_drawTileBox2x4 (prota.px / 2, (prota.py - ORIGEN_MAPA_Y)/4, w, h, g_map1_W, p, mapa);
   0075 FD 2Ar00r00   [20]  258 	ld	iy,(_mapa)
   0079 16 00         [ 7]  259 	ld	d,#0x00
   007B 7B            [ 4]  260 	ld	a,e
   007C C6 E8         [ 7]  261 	add	a,#0xE8
   007E DD 77 FE      [19]  262 	ld	-2 (ix),a
   0081 7A            [ 4]  263 	ld	a,d
   0082 CE FF         [ 7]  264 	adc	a,#0xFF
   0084 DD 77 FF      [19]  265 	ld	-1 (ix),a
   0087 DD 6E FE      [19]  266 	ld	l,-2 (ix)
   008A DD 66 FF      [19]  267 	ld	h,-1 (ix)
   008D DD CB FF 7E   [20]  268 	bit	7, -1 (ix)
   0091 28 04         [12]  269 	jr	Z,00105$
   0093 21 EB FF      [10]  270 	ld	hl,#0xFFEB
   0096 19            [11]  271 	add	hl,de
   0097                     272 00105$:
   0097 CB 2C         [ 8]  273 	sra	h
   0099 CB 1D         [ 8]  274 	rr	l
   009B CB 2C         [ 8]  275 	sra	h
   009D CB 1D         [ 8]  276 	rr	l
   009F 55            [ 4]  277 	ld	d,l
   00A0 CB 39         [ 8]  278 	srl	c
   00A2 FD E5         [15]  279 	push	iy
   00A4 21 F0 C0      [10]  280 	ld	hl,#0xC0F0
   00A7 E5            [11]  281 	push	hl
   00A8 3E 28         [ 7]  282 	ld	a,#0x28
   00AA F5            [11]  283 	push	af
   00AB 33            [ 6]  284 	inc	sp
   00AC DD 7E FD      [19]  285 	ld	a,-3 (ix)
   00AF F5            [11]  286 	push	af
   00B0 33            [ 6]  287 	inc	sp
   00B1 C5            [11]  288 	push	bc
   00B2 33            [ 6]  289 	inc	sp
   00B3 D5            [11]  290 	push	de
   00B4 33            [ 6]  291 	inc	sp
   00B5 79            [ 4]  292 	ld	a,c
   00B6 F5            [11]  293 	push	af
   00B7 33            [ 6]  294 	inc	sp
   00B8 CDr00r00      [17]  295 	call	_cpct_etm_drawTileBox2x4
   00BB DD F9         [10]  296 	ld	sp, ix
   00BD DD E1         [14]  297 	pop	ix
   00BF C9            [10]  298 	ret
                            299 ;src/main.c:118: void redibujarProta() {
                            300 ;	---------------------------------
                            301 ; Function redibujarProta
                            302 ; ---------------------------------
   00C0                     303 _redibujarProta::
                            304 ;src/main.c:119: borrarProta();
   00C0 CDr4Cr00      [17]  305 	call	_borrarProta
                            306 ;src/main.c:120: prota.px = prota.x;
   00C3 01r36r00      [10]  307 	ld	bc,#_prota + 2
   00C6 3Ar34r00      [13]  308 	ld	a, (#_prota + 0)
   00C9 02            [ 7]  309 	ld	(bc),a
                            310 ;src/main.c:121: prota.py = prota.y;
   00CA 01r37r00      [10]  311 	ld	bc,#_prota + 3
   00CD 3Ar35r00      [13]  312 	ld	a, (#_prota + 1)
   00D0 02            [ 7]  313 	ld	(bc),a
                            314 ;src/main.c:122: dibujarProta();
   00D1 C3r26r00      [10]  315 	jp  _dibujarProta
                            316 ;src/main.c:125: void comprobarTeclado(TKnife* cu, TProta* prota, u8* mapa, u8* g_tablatrans) {
                            317 ;	---------------------------------
                            318 ; Function comprobarTeclado
                            319 ; ---------------------------------
   00D4                     320 _comprobarTeclado::
                            321 ;src/main.c:126: cpct_scanKeyboard_if();
   00D4 CDr00r00      [17]  322 	call	_cpct_scanKeyboard_if
                            323 ;src/main.c:128: if (cpct_isAnyKeyPressed()) {
   00D7 CDr00r00      [17]  324 	call	_cpct_isAnyKeyPressed
   00DA 7D            [ 4]  325 	ld	a,l
   00DB B7            [ 4]  326 	or	a, a
   00DC C8            [11]  327 	ret	Z
                            328 ;src/main.c:129: if (cpct_isKeyPressed(Key_CursorLeft))
   00DD 21 01 01      [10]  329 	ld	hl,#0x0101
   00E0 CDr00r00      [17]  330 	call	_cpct_isKeyPressed
   00E3 7D            [ 4]  331 	ld	a,l
   00E4 B7            [ 4]  332 	or	a, a
                            333 ;src/main.c:130: moverIzquierda();
   00E5 C2rC6r09      [10]  334 	jp	NZ,_moverIzquierda
                            335 ;src/main.c:131: else if (cpct_isKeyPressed(Key_CursorRight))
   00E8 21 00 02      [10]  336 	ld	hl,#0x0200
   00EB CDr00r00      [17]  337 	call	_cpct_isKeyPressed
   00EE 7D            [ 4]  338 	ld	a,l
   00EF B7            [ 4]  339 	or	a, a
                            340 ;src/main.c:132: moverDerecha();
   00F0 C2rEBr09      [10]  341 	jp	NZ,_moverDerecha
                            342 ;src/main.c:133: else if (cpct_isKeyPressed(Key_CursorUp))
   00F3 21 00 01      [10]  343 	ld	hl,#0x0100
   00F6 CDr00r00      [17]  344 	call	_cpct_isKeyPressed
   00F9 7D            [ 4]  345 	ld	a,l
   00FA B7            [ 4]  346 	or	a, a
                            347 ;src/main.c:134: moverArriba();
   00FB C2r30r0A      [10]  348 	jp	NZ,_moverArriba
                            349 ;src/main.c:135: else if (cpct_isKeyPressed(Key_CursorDown))
   00FE 21 00 04      [10]  350 	ld	hl,#0x0400
   0101 CDr00r00      [17]  351 	call	_cpct_isKeyPressed
   0104 7D            [ 4]  352 	ld	a,l
   0105 B7            [ 4]  353 	or	a, a
                            354 ;src/main.c:136: moverAbajo();
   0106 C2r54r0A      [10]  355 	jp	NZ,_moverAbajo
                            356 ;src/main.c:137: else if (cpct_isKeyPressed(Key_Space))
   0109 21 05 80      [10]  357 	ld	hl,#0x8005
   010C CDr00r00      [17]  358 	call	_cpct_isKeyPressed
   010F 7D            [ 4]  359 	ld	a,l
   0110 B7            [ 4]  360 	or	a, a
   0111 C8            [11]  361 	ret	Z
                            362 ;src/main.c:138: lanzarCuchillo(cu, prota, mapa, g_tablatrans);
   0112 21 08 00      [10]  363 	ld	hl, #8
   0115 39            [11]  364 	add	hl, sp
   0116 4E            [ 7]  365 	ld	c, (hl)
   0117 23            [ 6]  366 	inc	hl
   0118 46            [ 7]  367 	ld	b, (hl)
   0119 C5            [11]  368 	push	bc
   011A 21 08 00      [10]  369 	ld	hl, #8
   011D 39            [11]  370 	add	hl, sp
   011E 4E            [ 7]  371 	ld	c, (hl)
   011F 23            [ 6]  372 	inc	hl
   0120 46            [ 7]  373 	ld	b, (hl)
   0121 C5            [11]  374 	push	bc
   0122 21 08 00      [10]  375 	ld	hl, #8
   0125 39            [11]  376 	add	hl, sp
   0126 4E            [ 7]  377 	ld	c, (hl)
   0127 23            [ 6]  378 	inc	hl
   0128 46            [ 7]  379 	ld	b, (hl)
   0129 C5            [11]  380 	push	bc
   012A 21 08 00      [10]  381 	ld	hl, #8
   012D 39            [11]  382 	add	hl, sp
   012E 4E            [ 7]  383 	ld	c, (hl)
   012F 23            [ 6]  384 	inc	hl
   0130 46            [ 7]  385 	ld	b, (hl)
   0131 C5            [11]  386 	push	bc
   0132 CDr00r00      [17]  387 	call	_lanzarCuchillo
   0135 21 08 00      [10]  388 	ld	hl,#8
   0138 39            [11]  389 	add	hl,sp
   0139 F9            [ 6]  390 	ld	sp,hl
   013A C9            [10]  391 	ret
                            392 ;src/main.c:142: u8 checkCollision(u8 direction) { // check optimization
                            393 ;	---------------------------------
                            394 ; Function checkCollision
                            395 ; ---------------------------------
   013B                     396 _checkCollision::
   013B DD E5         [15]  397 	push	ix
   013D DD 21 00 00   [14]  398 	ld	ix,#0
   0141 DD 39         [15]  399 	add	ix,sp
   0143 F5            [11]  400 	push	af
                            401 ;src/main.c:143: u8 *headTile=0, *feetTile=0, *waistTile=0;
   0144 21 00 00      [10]  402 	ld	hl,#0x0000
   0147 E3            [19]  403 	ex	(sp), hl
   0148 11 00 00      [10]  404 	ld	de,#0x0000
   014B 01 00 00      [10]  405 	ld	bc,#0x0000
                            406 ;src/main.c:145: switch (direction) {
   014E 3E 03         [ 7]  407 	ld	a,#0x03
   0150 DD 96 04      [19]  408 	sub	a, 4 (ix)
   0153 DAr8Fr02      [10]  409 	jp	C,00105$
   0156 DD 5E 04      [19]  410 	ld	e,4 (ix)
   0159 16 00         [ 7]  411 	ld	d,#0x00
   015B 21r62r01      [10]  412 	ld	hl,#00124$
   015E 19            [11]  413 	add	hl,de
   015F 19            [11]  414 	add	hl,de
   0160 19            [11]  415 	add	hl,de
   0161 E9            [ 4]  416 	jp	(hl)
   0162                     417 00124$:
   0162 C3r6Er01      [10]  418 	jp	00101$
   0165 C3rC7r01      [10]  419 	jp	00102$
   0168 C3r17r02      [10]  420 	jp	00103$
   016B C3r54r02      [10]  421 	jp	00104$
                            422 ;src/main.c:146: case 0:
   016E                     423 00101$:
                            424 ;src/main.c:147: headTile  = getTilePtr(mapa, prota.x + G_HERO_W - 3, prota.y);
   016E 21r35r00      [10]  425 	ld	hl, #(_prota + 0x0001) + 0
   0171 4E            [ 7]  426 	ld	c,(hl)
   0172 3Ar34r00      [13]  427 	ld	a, (#_prota + 0)
   0175 47            [ 4]  428 	ld	b,a
   0176 04            [ 4]  429 	inc	b
   0177 04            [ 4]  430 	inc	b
   0178 04            [ 4]  431 	inc	b
   0179 04            [ 4]  432 	inc	b
   017A 79            [ 4]  433 	ld	a,c
   017B F5            [11]  434 	push	af
   017C 33            [ 6]  435 	inc	sp
   017D C5            [11]  436 	push	bc
   017E 33            [ 6]  437 	inc	sp
   017F 2Ar00r00      [16]  438 	ld	hl,(_mapa)
   0182 E5            [11]  439 	push	hl
   0183 CDr00r00      [17]  440 	call	_getTilePtr
   0186 F1            [10]  441 	pop	af
   0187 F1            [10]  442 	pop	af
   0188 33            [ 6]  443 	inc	sp
   0189 33            [ 6]  444 	inc	sp
   018A E5            [11]  445 	push	hl
                            446 ;src/main.c:148: feetTile  = getTilePtr(mapa, prota.x + G_HERO_W - 3, prota.y + ALTO_PROTA - 2);
   018B 3Ar35r00      [13]  447 	ld	a, (#(_prota + 0x0001) + 0)
   018E C6 14         [ 7]  448 	add	a, #0x14
   0190 4F            [ 4]  449 	ld	c,a
   0191 21r34r00      [10]  450 	ld	hl, #_prota + 0
   0194 46            [ 7]  451 	ld	b,(hl)
   0195 04            [ 4]  452 	inc	b
   0196 04            [ 4]  453 	inc	b
   0197 04            [ 4]  454 	inc	b
   0198 04            [ 4]  455 	inc	b
   0199 79            [ 4]  456 	ld	a,c
   019A F5            [11]  457 	push	af
   019B 33            [ 6]  458 	inc	sp
   019C C5            [11]  459 	push	bc
   019D 33            [ 6]  460 	inc	sp
   019E 2Ar00r00      [16]  461 	ld	hl,(_mapa)
   01A1 E5            [11]  462 	push	hl
   01A2 CDr00r00      [17]  463 	call	_getTilePtr
   01A5 F1            [10]  464 	pop	af
   01A6 F1            [10]  465 	pop	af
   01A7 EB            [ 4]  466 	ex	de,hl
                            467 ;src/main.c:149: waistTile = getTilePtr(mapa, prota.x + G_HERO_W - 3, prota.y + ALTO_PROTA/2);
   01A8 3Ar35r00      [13]  468 	ld	a, (#(_prota + 0x0001) + 0)
   01AB C6 0B         [ 7]  469 	add	a, #0x0B
   01AD 47            [ 4]  470 	ld	b,a
   01AE 3Ar34r00      [13]  471 	ld	a, (#_prota + 0)
   01B1 C6 04         [ 7]  472 	add	a, #0x04
   01B3 D5            [11]  473 	push	de
   01B4 C5            [11]  474 	push	bc
   01B5 33            [ 6]  475 	inc	sp
   01B6 F5            [11]  476 	push	af
   01B7 33            [ 6]  477 	inc	sp
   01B8 2Ar00r00      [16]  478 	ld	hl,(_mapa)
   01BB E5            [11]  479 	push	hl
   01BC CDr00r00      [17]  480 	call	_getTilePtr
   01BF F1            [10]  481 	pop	af
   01C0 F1            [10]  482 	pop	af
   01C1 4D            [ 4]  483 	ld	c,l
   01C2 44            [ 4]  484 	ld	b,h
   01C3 D1            [10]  485 	pop	de
                            486 ;src/main.c:150: break;
   01C4 C3r8Fr02      [10]  487 	jp	00105$
                            488 ;src/main.c:151: case 1:
   01C7                     489 00102$:
                            490 ;src/main.c:152: headTile  = getTilePtr(mapa, prota.x - 1, prota.y);
   01C7 21r35r00      [10]  491 	ld	hl, #(_prota + 0x0001) + 0
   01CA 56            [ 7]  492 	ld	d,(hl)
   01CB 21r34r00      [10]  493 	ld	hl, #_prota + 0
   01CE 46            [ 7]  494 	ld	b,(hl)
   01CF 05            [ 4]  495 	dec	b
   01D0 D5            [11]  496 	push	de
   01D1 33            [ 6]  497 	inc	sp
   01D2 C5            [11]  498 	push	bc
   01D3 33            [ 6]  499 	inc	sp
   01D4 2Ar00r00      [16]  500 	ld	hl,(_mapa)
   01D7 E5            [11]  501 	push	hl
   01D8 CDr00r00      [17]  502 	call	_getTilePtr
   01DB F1            [10]  503 	pop	af
   01DC F1            [10]  504 	pop	af
   01DD 33            [ 6]  505 	inc	sp
   01DE 33            [ 6]  506 	inc	sp
   01DF E5            [11]  507 	push	hl
                            508 ;src/main.c:153: feetTile  = getTilePtr(mapa, prota.x - 1, prota.y + ALTO_PROTA - 2);
   01E0 3Ar35r00      [13]  509 	ld	a, (#(_prota + 0x0001) + 0)
   01E3 C6 14         [ 7]  510 	add	a, #0x14
   01E5 57            [ 4]  511 	ld	d,a
   01E6 21r34r00      [10]  512 	ld	hl, #_prota + 0
   01E9 46            [ 7]  513 	ld	b,(hl)
   01EA 05            [ 4]  514 	dec	b
   01EB D5            [11]  515 	push	de
   01EC 33            [ 6]  516 	inc	sp
   01ED C5            [11]  517 	push	bc
   01EE 33            [ 6]  518 	inc	sp
   01EF 2Ar00r00      [16]  519 	ld	hl,(_mapa)
   01F2 E5            [11]  520 	push	hl
   01F3 CDr00r00      [17]  521 	call	_getTilePtr
   01F6 F1            [10]  522 	pop	af
   01F7 F1            [10]  523 	pop	af
   01F8 EB            [ 4]  524 	ex	de,hl
                            525 ;src/main.c:154: waistTile = getTilePtr(mapa, prota.x - 1, prota.y + ALTO_PROTA/2);
   01F9 3Ar35r00      [13]  526 	ld	a, (#(_prota + 0x0001) + 0)
   01FC C6 0B         [ 7]  527 	add	a, #0x0B
   01FE 47            [ 4]  528 	ld	b,a
   01FF 3Ar34r00      [13]  529 	ld	a, (#_prota + 0)
   0202 C6 FF         [ 7]  530 	add	a,#0xFF
   0204 D5            [11]  531 	push	de
   0205 C5            [11]  532 	push	bc
   0206 33            [ 6]  533 	inc	sp
   0207 F5            [11]  534 	push	af
   0208 33            [ 6]  535 	inc	sp
   0209 2Ar00r00      [16]  536 	ld	hl,(_mapa)
   020C E5            [11]  537 	push	hl
   020D CDr00r00      [17]  538 	call	_getTilePtr
   0210 F1            [10]  539 	pop	af
   0211 F1            [10]  540 	pop	af
   0212 4D            [ 4]  541 	ld	c,l
   0213 44            [ 4]  542 	ld	b,h
   0214 D1            [10]  543 	pop	de
                            544 ;src/main.c:155: break;
   0215 18 78         [12]  545 	jr	00105$
                            546 ;src/main.c:156: case 2:
   0217                     547 00103$:
                            548 ;src/main.c:157: headTile   = getTilePtr(mapa, prota.x, prota.y - 2);
   0217 3Ar35r00      [13]  549 	ld	a, (#(_prota + 0x0001) + 0)
   021A C6 FE         [ 7]  550 	add	a,#0xFE
   021C 21r34r00      [10]  551 	ld	hl, #_prota + 0
   021F 56            [ 7]  552 	ld	d,(hl)
   0220 C5            [11]  553 	push	bc
   0221 F5            [11]  554 	push	af
   0222 33            [ 6]  555 	inc	sp
   0223 D5            [11]  556 	push	de
   0224 33            [ 6]  557 	inc	sp
   0225 2Ar00r00      [16]  558 	ld	hl,(_mapa)
   0228 E5            [11]  559 	push	hl
   0229 CDr00r00      [17]  560 	call	_getTilePtr
   022C F1            [10]  561 	pop	af
   022D F1            [10]  562 	pop	af
   022E C1            [10]  563 	pop	bc
   022F 33            [ 6]  564 	inc	sp
   0230 33            [ 6]  565 	inc	sp
   0231 E5            [11]  566 	push	hl
                            567 ;src/main.c:158: feetTile   = getTilePtr(mapa, prota.x + G_HERO_W - 4, prota.y - 2);
   0232 21r35r00      [10]  568 	ld	hl, #(_prota + 0x0001) + 0
   0235 56            [ 7]  569 	ld	d,(hl)
   0236 15            [ 4]  570 	dec	d
   0237 15            [ 4]  571 	dec	d
   0238 3Ar34r00      [13]  572 	ld	a, (#_prota + 0)
   023B C6 03         [ 7]  573 	add	a, #0x03
   023D C5            [11]  574 	push	bc
   023E D5            [11]  575 	push	de
   023F 33            [ 6]  576 	inc	sp
   0240 F5            [11]  577 	push	af
   0241 33            [ 6]  578 	inc	sp
   0242 2Ar00r00      [16]  579 	ld	hl,(_mapa)
   0245 E5            [11]  580 	push	hl
   0246 CDr00r00      [17]  581 	call	_getTilePtr
   0249 F1            [10]  582 	pop	af
   024A F1            [10]  583 	pop	af
   024B EB            [ 4]  584 	ex	de,hl
   024C C1            [10]  585 	pop	bc
                            586 ;src/main.c:159: *waistTile = 0;
   024D 21 00 00      [10]  587 	ld	hl,#0x0000
   0250 36 00         [10]  588 	ld	(hl),#0x00
                            589 ;src/main.c:160: break;
   0252 18 3B         [12]  590 	jr	00105$
                            591 ;src/main.c:161: case 3:
   0254                     592 00104$:
                            593 ;src/main.c:162: headTile  = getTilePtr(mapa, prota.x, prota.y + ALTO_PROTA  );
   0254 3Ar35r00      [13]  594 	ld	a, (#(_prota + 0x0001) + 0)
   0257 C6 16         [ 7]  595 	add	a, #0x16
   0259 21r34r00      [10]  596 	ld	hl, #_prota + 0
   025C 56            [ 7]  597 	ld	d,(hl)
   025D C5            [11]  598 	push	bc
   025E F5            [11]  599 	push	af
   025F 33            [ 6]  600 	inc	sp
   0260 D5            [11]  601 	push	de
   0261 33            [ 6]  602 	inc	sp
   0262 2Ar00r00      [16]  603 	ld	hl,(_mapa)
   0265 E5            [11]  604 	push	hl
   0266 CDr00r00      [17]  605 	call	_getTilePtr
   0269 F1            [10]  606 	pop	af
   026A F1            [10]  607 	pop	af
   026B C1            [10]  608 	pop	bc
   026C 33            [ 6]  609 	inc	sp
   026D 33            [ 6]  610 	inc	sp
   026E E5            [11]  611 	push	hl
                            612 ;src/main.c:163: feetTile  = getTilePtr(mapa, prota.x + G_HERO_W - 4, prota.y + ALTO_PROTA );
   026F 3Ar35r00      [13]  613 	ld	a, (#(_prota + 0x0001) + 0)
   0272 C6 16         [ 7]  614 	add	a, #0x16
   0274 57            [ 4]  615 	ld	d,a
   0275 3Ar34r00      [13]  616 	ld	a, (#_prota + 0)
   0278 C6 03         [ 7]  617 	add	a, #0x03
   027A C5            [11]  618 	push	bc
   027B D5            [11]  619 	push	de
   027C 33            [ 6]  620 	inc	sp
   027D F5            [11]  621 	push	af
   027E 33            [ 6]  622 	inc	sp
   027F 2Ar00r00      [16]  623 	ld	hl,(_mapa)
   0282 E5            [11]  624 	push	hl
   0283 CDr00r00      [17]  625 	call	_getTilePtr
   0286 F1            [10]  626 	pop	af
   0287 F1            [10]  627 	pop	af
   0288 EB            [ 4]  628 	ex	de,hl
   0289 C1            [10]  629 	pop	bc
                            630 ;src/main.c:164: *waistTile = 0;
   028A 21 00 00      [10]  631 	ld	hl,#0x0000
   028D 36 00         [10]  632 	ld	(hl),#0x00
                            633 ;src/main.c:166: }
   028F                     634 00105$:
                            635 ;src/main.c:168: if (*headTile > 2 || *feetTile > 2 || *waistTile > 2)
   028F E1            [10]  636 	pop	hl
   0290 E5            [11]  637 	push	hl
   0291 6E            [ 7]  638 	ld	l,(hl)
   0292 3E 02         [ 7]  639 	ld	a,#0x02
   0294 95            [ 4]  640 	sub	a, l
   0295 38 0E         [12]  641 	jr	C,00106$
   0297 1A            [ 7]  642 	ld	a,(de)
   0298 5F            [ 4]  643 	ld	e,a
   0299 3E 02         [ 7]  644 	ld	a,#0x02
   029B 93            [ 4]  645 	sub	a, e
   029C 38 07         [12]  646 	jr	C,00106$
   029E 0A            [ 7]  647 	ld	a,(bc)
   029F 4F            [ 4]  648 	ld	c,a
   02A0 3E 02         [ 7]  649 	ld	a,#0x02
   02A2 91            [ 4]  650 	sub	a, c
   02A3 30 04         [12]  651 	jr	NC,00107$
   02A5                     652 00106$:
                            653 ;src/main.c:169: return 1;
   02A5 2E 01         [ 7]  654 	ld	l,#0x01
   02A7 18 02         [12]  655 	jr	00110$
   02A9                     656 00107$:
                            657 ;src/main.c:171: return 0;
   02A9 2E 00         [ 7]  658 	ld	l,#0x00
   02AB                     659 00110$:
   02AB DD F9         [10]  660 	ld	sp, ix
   02AD DD E1         [14]  661 	pop	ix
   02AF C9            [10]  662 	ret
                            663 ;src/main.c:174: void dibujarEnemigo(TEnemy *enemy) {
                            664 ;	---------------------------------
                            665 ; Function dibujarEnemigo
                            666 ; ---------------------------------
   02B0                     667 _dibujarEnemigo::
   02B0 DD E5         [15]  668 	push	ix
   02B2 DD 21 00 00   [14]  669 	ld	ix,#0
   02B6 DD 39         [15]  670 	add	ix,sp
                            671 ;src/main.c:175: u8* pvmem = cpct_getScreenPtr(CPCT_VMEM_START, enemy->x, enemy->y);
   02B8 DD 4E 04      [19]  672 	ld	c,4 (ix)
   02BB DD 46 05      [19]  673 	ld	b,5 (ix)
   02BE 69            [ 4]  674 	ld	l, c
   02BF 60            [ 4]  675 	ld	h, b
   02C0 23            [ 6]  676 	inc	hl
   02C1 56            [ 7]  677 	ld	d,(hl)
   02C2 0A            [ 7]  678 	ld	a,(bc)
   02C3 C5            [11]  679 	push	bc
   02C4 D5            [11]  680 	push	de
   02C5 33            [ 6]  681 	inc	sp
   02C6 F5            [11]  682 	push	af
   02C7 33            [ 6]  683 	inc	sp
   02C8 21 00 C0      [10]  684 	ld	hl,#0xC000
   02CB E5            [11]  685 	push	hl
   02CC CDr00r00      [17]  686 	call	_cpct_getScreenPtr
   02CF EB            [ 4]  687 	ex	de,hl
                            688 ;src/main.c:176: cpct_drawSpriteMaskedAlignedTable (enemy->sprite, pvmem, G_ENEMY_W, G_ENEMY_H, g_tablatrans);
   02D0 E1            [10]  689 	pop	hl
   02D1 01 04 00      [10]  690 	ld	bc, #0x0004
   02D4 09            [11]  691 	add	hl, bc
   02D5 4E            [ 7]  692 	ld	c,(hl)
   02D6 23            [ 6]  693 	inc	hl
   02D7 46            [ 7]  694 	ld	b,(hl)
   02D8 21r00r2E      [10]  695 	ld	hl,#_g_tablatrans
   02DB E5            [11]  696 	push	hl
   02DC 21 04 16      [10]  697 	ld	hl,#0x1604
   02DF E5            [11]  698 	push	hl
   02E0 D5            [11]  699 	push	de
   02E1 C5            [11]  700 	push	bc
   02E2 CDr00r00      [17]  701 	call	_cpct_drawSpriteMaskedAlignedTable
   02E5 DD E1         [14]  702 	pop	ix
   02E7 C9            [10]  703 	ret
                            704 ;src/main.c:179: void dibujarExplosion(TEnemy *enemy) {
                            705 ;	---------------------------------
                            706 ; Function dibujarExplosion
                            707 ; ---------------------------------
   02E8                     708 _dibujarExplosion::
   02E8 DD E5         [15]  709 	push	ix
   02EA DD 21 00 00   [14]  710 	ld	ix,#0
   02EE DD 39         [15]  711 	add	ix,sp
                            712 ;src/main.c:180: u8* pvmem = cpct_getScreenPtr(CPCT_VMEM_START, enemy->x, enemy->y);
   02F0 DD 4E 04      [19]  713 	ld	c,4 (ix)
   02F3 DD 46 05      [19]  714 	ld	b,5 (ix)
   02F6 69            [ 4]  715 	ld	l, c
   02F7 60            [ 4]  716 	ld	h, b
   02F8 23            [ 6]  717 	inc	hl
   02F9 56            [ 7]  718 	ld	d,(hl)
   02FA 0A            [ 7]  719 	ld	a,(bc)
   02FB 47            [ 4]  720 	ld	b,a
   02FC D5            [11]  721 	push	de
   02FD 33            [ 6]  722 	inc	sp
   02FE C5            [11]  723 	push	bc
   02FF 33            [ 6]  724 	inc	sp
   0300 21 00 C0      [10]  725 	ld	hl,#0xC000
   0303 E5            [11]  726 	push	hl
   0304 CDr00r00      [17]  727 	call	_cpct_getScreenPtr
   0307 4D            [ 4]  728 	ld	c,l
   0308 44            [ 4]  729 	ld	b,h
                            730 ;src/main.c:181: cpct_drawSpriteMaskedAlignedTable (g_explosion, pvmem, G_EXPLOSION_W, G_EXPLOSION_H, g_tablatrans);
   0309 11r00r2E      [10]  731 	ld	de,#_g_tablatrans+0
   030C D5            [11]  732 	push	de
   030D 21 04 16      [10]  733 	ld	hl,#0x1604
   0310 E5            [11]  734 	push	hl
   0311 C5            [11]  735 	push	bc
   0312 21r00r00      [10]  736 	ld	hl,#_g_explosion
   0315 E5            [11]  737 	push	hl
   0316 CDr00r00      [17]  738 	call	_cpct_drawSpriteMaskedAlignedTable
   0319 DD E1         [14]  739 	pop	ix
   031B C9            [10]  740 	ret
                            741 ;src/main.c:184: void borrarExplosion() {
                            742 ;	---------------------------------
                            743 ; Function borrarExplosion
                            744 ; ---------------------------------
   031C                     745 _borrarExplosion::
   031C DD E5         [15]  746 	push	ix
   031E DD 21 00 00   [14]  747 	ld	ix,#0
   0322 DD 39         [15]  748 	add	ix,sp
   0324 F5            [11]  749 	push	af
   0325 3B            [ 6]  750 	dec	sp
                            751 ;src/main.c:187: u8 w = 4 + (enemy->px & 1);
   0326 21r02r00      [10]  752 	ld	hl, #_enemy + 2
   0329 4E            [ 7]  753 	ld	c,(hl)
   032A 79            [ 4]  754 	ld	a,c
   032B E6 01         [ 7]  755 	and	a, #0x01
   032D 47            [ 4]  756 	ld	b,a
   032E 04            [ 4]  757 	inc	b
   032F 04            [ 4]  758 	inc	b
   0330 04            [ 4]  759 	inc	b
   0331 04            [ 4]  760 	inc	b
                            761 ;src/main.c:190: u8 h = 7 + (enemy->py & 2 ? 1 : 0);
   0332 21r03r00      [10]  762 	ld	hl, #_enemy + 3
   0335 5E            [ 7]  763 	ld	e,(hl)
   0336 CB 4B         [ 8]  764 	bit	1, e
   0338 28 04         [12]  765 	jr	Z,00103$
   033A 3E 01         [ 7]  766 	ld	a,#0x01
   033C 18 02         [12]  767 	jr	00104$
   033E                     768 00103$:
   033E 3E 00         [ 7]  769 	ld	a,#0x00
   0340                     770 00104$:
   0340 C6 07         [ 7]  771 	add	a, #0x07
   0342 DD 77 FD      [19]  772 	ld	-3 (ix),a
                            773 ;src/main.c:192: cpct_etm_drawTileBox2x4 (enemy->px / 2, (enemy->py - ORIGEN_MAPA_Y)/4, w, h, g_map1_W, p, mapa);
   0345 FD 2Ar00r00   [20]  774 	ld	iy,(_mapa)
   0349 16 00         [ 7]  775 	ld	d,#0x00
   034B 7B            [ 4]  776 	ld	a,e
   034C C6 E8         [ 7]  777 	add	a,#0xE8
   034E DD 77 FE      [19]  778 	ld	-2 (ix),a
   0351 7A            [ 4]  779 	ld	a,d
   0352 CE FF         [ 7]  780 	adc	a,#0xFF
   0354 DD 77 FF      [19]  781 	ld	-1 (ix),a
   0357 DD 6E FE      [19]  782 	ld	l,-2 (ix)
   035A DD 66 FF      [19]  783 	ld	h,-1 (ix)
   035D DD CB FF 7E   [20]  784 	bit	7, -1 (ix)
   0361 28 04         [12]  785 	jr	Z,00105$
   0363 21 EB FF      [10]  786 	ld	hl,#0xFFEB
   0366 19            [11]  787 	add	hl,de
   0367                     788 00105$:
   0367 CB 2C         [ 8]  789 	sra	h
   0369 CB 1D         [ 8]  790 	rr	l
   036B CB 2C         [ 8]  791 	sra	h
   036D CB 1D         [ 8]  792 	rr	l
   036F 55            [ 4]  793 	ld	d,l
   0370 CB 39         [ 8]  794 	srl	c
   0372 FD E5         [15]  795 	push	iy
   0374 21 F0 C0      [10]  796 	ld	hl,#0xC0F0
   0377 E5            [11]  797 	push	hl
   0378 3E 28         [ 7]  798 	ld	a,#0x28
   037A F5            [11]  799 	push	af
   037B 33            [ 6]  800 	inc	sp
   037C DD 7E FD      [19]  801 	ld	a,-3 (ix)
   037F F5            [11]  802 	push	af
   0380 33            [ 6]  803 	inc	sp
   0381 C5            [11]  804 	push	bc
   0382 33            [ 6]  805 	inc	sp
   0383 D5            [11]  806 	push	de
   0384 33            [ 6]  807 	inc	sp
   0385 79            [ 4]  808 	ld	a,c
   0386 F5            [11]  809 	push	af
   0387 33            [ 6]  810 	inc	sp
   0388 CDr00r00      [17]  811 	call	_cpct_etm_drawTileBox2x4
   038B DD F9         [10]  812 	ld	sp, ix
   038D DD E1         [14]  813 	pop	ix
   038F C9            [10]  814 	ret
                            815 ;src/main.c:196: void borrarEnemigo(TEnemy *enemy) {
                            816 ;	---------------------------------
                            817 ; Function borrarEnemigo
                            818 ; ---------------------------------
   0390                     819 _borrarEnemigo::
   0390 DD E5         [15]  820 	push	ix
   0392 DD 21 00 00   [14]  821 	ld	ix,#0
   0396 DD 39         [15]  822 	add	ix,sp
   0398 21 FA FF      [10]  823 	ld	hl,#-6
   039B 39            [11]  824 	add	hl,sp
   039C F9            [ 6]  825 	ld	sp,hl
                            826 ;src/main.c:200: u8 w = 4 + (enemy->px & 1);
   039D DD 4E 04      [19]  827 	ld	c,4 (ix)
   03A0 DD 46 05      [19]  828 	ld	b,5 (ix)
   03A3 69            [ 4]  829 	ld	l, c
   03A4 60            [ 4]  830 	ld	h, b
   03A5 23            [ 6]  831 	inc	hl
   03A6 23            [ 6]  832 	inc	hl
   03A7 5E            [ 7]  833 	ld	e,(hl)
   03A8 7B            [ 4]  834 	ld	a,e
   03A9 E6 01         [ 7]  835 	and	a, #0x01
   03AB C6 04         [ 7]  836 	add	a, #0x04
   03AD DD 77 FB      [19]  837 	ld	-5 (ix),a
                            838 ;src/main.c:203: u8 h = 7 + (enemy->py & 2 ? 1 : 0);
   03B0 69            [ 4]  839 	ld	l, c
   03B1 60            [ 4]  840 	ld	h, b
   03B2 23            [ 6]  841 	inc	hl
   03B3 23            [ 6]  842 	inc	hl
   03B4 23            [ 6]  843 	inc	hl
   03B5 56            [ 7]  844 	ld	d,(hl)
   03B6 CB 4A         [ 8]  845 	bit	1, d
   03B8 28 04         [12]  846 	jr	Z,00103$
   03BA 3E 01         [ 7]  847 	ld	a,#0x01
   03BC 18 02         [12]  848 	jr	00104$
   03BE                     849 00103$:
   03BE 3E 00         [ 7]  850 	ld	a,#0x00
   03C0                     851 00104$:
   03C0 C6 07         [ 7]  852 	add	a, #0x07
   03C2 DD 77 FA      [19]  853 	ld	-6 (ix),a
                            854 ;src/main.c:205: cpct_etm_drawTileBox2x4 (enemy->px / 2, (enemy->py - ORIGEN_MAPA_Y)/4, w, h, g_map1_W, p, mapa);
   03C5 FD 2Ar00r00   [20]  855 	ld	iy,(_mapa)
   03C9 DD 72 FE      [19]  856 	ld	-2 (ix),d
   03CC DD 36 FF 00   [19]  857 	ld	-1 (ix),#0x00
   03D0 DD 7E FE      [19]  858 	ld	a,-2 (ix)
   03D3 C6 E8         [ 7]  859 	add	a,#0xE8
   03D5 DD 77 FC      [19]  860 	ld	-4 (ix),a
   03D8 DD 7E FF      [19]  861 	ld	a,-1 (ix)
   03DB CE FF         [ 7]  862 	adc	a,#0xFF
   03DD DD 77 FD      [19]  863 	ld	-3 (ix),a
   03E0 DD 56 FC      [19]  864 	ld	d,-4 (ix)
   03E3 DD 6E FD      [19]  865 	ld	l,-3 (ix)
   03E6 DD CB FD 7E   [20]  866 	bit	7, -3 (ix)
   03EA 28 0C         [12]  867 	jr	Z,00105$
   03EC DD 7E FE      [19]  868 	ld	a,-2 (ix)
   03EF C6 EB         [ 7]  869 	add	a, #0xEB
   03F1 57            [ 4]  870 	ld	d,a
   03F2 DD 7E FF      [19]  871 	ld	a,-1 (ix)
   03F5 CE FF         [ 7]  872 	adc	a, #0xFF
   03F7 6F            [ 4]  873 	ld	l,a
   03F8                     874 00105$:
   03F8 CB 2D         [ 8]  875 	sra	l
   03FA CB 1A         [ 8]  876 	rr	d
   03FC CB 2D         [ 8]  877 	sra	l
   03FE CB 1A         [ 8]  878 	rr	d
   0400 CB 3B         [ 8]  879 	srl	e
   0402 C5            [11]  880 	push	bc
   0403 FD E5         [15]  881 	push	iy
   0405 21 F0 C0      [10]  882 	ld	hl,#0xC0F0
   0408 E5            [11]  883 	push	hl
   0409 3E 28         [ 7]  884 	ld	a,#0x28
   040B F5            [11]  885 	push	af
   040C 33            [ 6]  886 	inc	sp
   040D DD 66 FA      [19]  887 	ld	h,-6 (ix)
   0410 DD 6E FB      [19]  888 	ld	l,-5 (ix)
   0413 E5            [11]  889 	push	hl
   0414 D5            [11]  890 	push	de
   0415 CDr00r00      [17]  891 	call	_cpct_etm_drawTileBox2x4
   0418 C1            [10]  892 	pop	bc
                            893 ;src/main.c:207: enemy->mover = NO;
   0419 21 06 00      [10]  894 	ld	hl,#0x0006
   041C 09            [11]  895 	add	hl,bc
   041D 36 00         [10]  896 	ld	(hl),#0x00
   041F DD F9         [10]  897 	ld	sp, ix
   0421 DD E1         [14]  898 	pop	ix
   0423 C9            [10]  899 	ret
                            900 ;src/main.c:210: void redibujarEnemigo(TEnemy *enemy) {
                            901 ;	---------------------------------
                            902 ; Function redibujarEnemigo
                            903 ; ---------------------------------
   0424                     904 _redibujarEnemigo::
   0424 DD E5         [15]  905 	push	ix
   0426 DD 21 00 00   [14]  906 	ld	ix,#0
   042A DD 39         [15]  907 	add	ix,sp
                            908 ;src/main.c:211: borrarEnemigo(enemy);
   042C DD 6E 04      [19]  909 	ld	l,4 (ix)
   042F DD 66 05      [19]  910 	ld	h,5 (ix)
   0432 E5            [11]  911 	push	hl
   0433 CDr90r03      [17]  912 	call	_borrarEnemigo
   0436 F1            [10]  913 	pop	af
                            914 ;src/main.c:212: enemy->px = enemy->x;
   0437 DD 4E 04      [19]  915 	ld	c,4 (ix)
   043A DD 46 05      [19]  916 	ld	b,5 (ix)
   043D 59            [ 4]  917 	ld	e, c
   043E 50            [ 4]  918 	ld	d, b
   043F 13            [ 6]  919 	inc	de
   0440 13            [ 6]  920 	inc	de
   0441 0A            [ 7]  921 	ld	a,(bc)
   0442 12            [ 7]  922 	ld	(de),a
                            923 ;src/main.c:213: enemy->py = enemy->y;
   0443 59            [ 4]  924 	ld	e, c
   0444 50            [ 4]  925 	ld	d, b
   0445 13            [ 6]  926 	inc	de
   0446 13            [ 6]  927 	inc	de
   0447 13            [ 6]  928 	inc	de
   0448 69            [ 4]  929 	ld	l, c
   0449 60            [ 4]  930 	ld	h, b
   044A 23            [ 6]  931 	inc	hl
   044B 7E            [ 7]  932 	ld	a,(hl)
   044C 12            [ 7]  933 	ld	(de),a
                            934 ;src/main.c:214: dibujarEnemigo(enemy);
   044D C5            [11]  935 	push	bc
   044E CDrB0r02      [17]  936 	call	_dibujarEnemigo
   0451 F1            [10]  937 	pop	af
   0452 DD E1         [14]  938 	pop	ix
   0454 C9            [10]  939 	ret
                            940 ;src/main.c:217: u8 checkEnemyCollision(u8 direction, TEnemy *enemy){
                            941 ;	---------------------------------
                            942 ; Function checkEnemyCollision
                            943 ; ---------------------------------
   0455                     944 _checkEnemyCollision::
   0455 DD E5         [15]  945 	push	ix
   0457 DD 21 00 00   [14]  946 	ld	ix,#0
   045B DD 39         [15]  947 	add	ix,sp
   045D 21 F7 FF      [10]  948 	ld	hl,#-9
   0460 39            [11]  949 	add	hl,sp
   0461 F9            [ 6]  950 	ld	sp,hl
                            951 ;src/main.c:219: u8 colisiona = 1;
   0462 DD 36 F7 01   [19]  952 	ld	-9 (ix),#0x01
                            953 ;src/main.c:221: switch (direction) {
   0466 3E 03         [ 7]  954 	ld	a,#0x03
   0468 DD 96 04      [19]  955 	sub	a, 4 (ix)
   046B DAr48r08      [10]  956 	jp	C,00165$
                            957 ;src/main.c:223: if( *getTilePtr(mapa, enemy->x + G_ENEMY_W + 1, enemy->y) <= 2
   046E DD 4E 05      [19]  958 	ld	c,5 (ix)
   0471 DD 46 06      [19]  959 	ld	b,6 (ix)
   0474 0A            [ 7]  960 	ld	a,(bc)
   0475 5F            [ 4]  961 	ld	e,a
   0476 21 01 00      [10]  962 	ld	hl,#0x0001
   0479 09            [11]  963 	add	hl,bc
   047A DD 75 F8      [19]  964 	ld	-8 (ix),l
   047D DD 74 F9      [19]  965 	ld	-7 (ix),h
   0480 DD 6E F8      [19]  966 	ld	l,-8 (ix)
   0483 DD 66 F9      [19]  967 	ld	h,-7 (ix)
   0486 56            [ 7]  968 	ld	d,(hl)
                            969 ;src/main.c:236: enemy->muerto = SI;
   0487 21 08 00      [10]  970 	ld	hl,#0x0008
   048A 09            [11]  971 	add	hl,bc
   048B DD 75 FA      [19]  972 	ld	-6 (ix),l
   048E DD 74 FB      [19]  973 	ld	-5 (ix),h
                            974 ;src/main.c:243: enemy->mira = M_izquierda;
   0491 21 07 00      [10]  975 	ld	hl,#0x0007
   0494 09            [11]  976 	add	hl,bc
   0495 DD 75 FC      [19]  977 	ld	-4 (ix),l
   0498 DD 74 FD      [19]  978 	ld	-3 (ix),h
                            979 ;src/main.c:221: switch (direction) {
   049B D5            [11]  980 	push	de
   049C DD 5E 04      [19]  981 	ld	e,4 (ix)
   049F 16 00         [ 7]  982 	ld	d,#0x00
   04A1 21rA9r04      [10]  983 	ld	hl,#00268$
   04A4 19            [11]  984 	add	hl,de
   04A5 19            [11]  985 	add	hl,de
   04A6 19            [11]  986 	add	hl,de
   04A7 D1            [10]  987 	pop	de
   04A8 E9            [ 4]  988 	jp	(hl)
   04A9                     989 00268$:
   04A9 C3rB5r04      [10]  990 	jp	00101$
   04AC C3r9Dr05      [10]  991 	jp	00117$
   04AF C3r81r06      [10]  992 	jp	00133$
   04B2 C3r5Fr07      [10]  993 	jp	00149$
                            994 ;src/main.c:222: case 0:
   04B5                     995 00101$:
                            996 ;src/main.c:223: if( *getTilePtr(mapa, enemy->x + G_ENEMY_W + 1, enemy->y) <= 2
   04B5 7B            [ 4]  997 	ld	a,e
   04B6 C6 05         [ 7]  998 	add	a, #0x05
   04B8 C5            [11]  999 	push	bc
   04B9 D5            [11] 1000 	push	de
   04BA 33            [ 6] 1001 	inc	sp
   04BB F5            [11] 1002 	push	af
   04BC 33            [ 6] 1003 	inc	sp
   04BD 2Ar00r00      [16] 1004 	ld	hl,(_mapa)
   04C0 E5            [11] 1005 	push	hl
   04C1 CDr00r00      [17] 1006 	call	_getTilePtr
   04C4 F1            [10] 1007 	pop	af
   04C5 F1            [10] 1008 	pop	af
   04C6 C1            [10] 1009 	pop	bc
   04C7 5E            [ 7] 1010 	ld	e,(hl)
   04C8 3E 02         [ 7] 1011 	ld	a,#0x02
   04CA 93            [ 4] 1012 	sub	a, e
   04CB DAr92r05      [10] 1013 	jp	C,00113$
                           1014 ;src/main.c:224: && *getTilePtr(mapa, enemy->x + G_ENEMY_W + 1, enemy->y + G_ENEMY_H/2) <= 2
   04CE DD 6E F8      [19] 1015 	ld	l,-8 (ix)
   04D1 DD 66 F9      [19] 1016 	ld	h,-7 (ix)
   04D4 7E            [ 7] 1017 	ld	a,(hl)
   04D5 C6 0B         [ 7] 1018 	add	a, #0x0B
   04D7 57            [ 4] 1019 	ld	d,a
   04D8 0A            [ 7] 1020 	ld	a,(bc)
   04D9 C6 05         [ 7] 1021 	add	a, #0x05
   04DB C5            [11] 1022 	push	bc
   04DC D5            [11] 1023 	push	de
   04DD 33            [ 6] 1024 	inc	sp
   04DE F5            [11] 1025 	push	af
   04DF 33            [ 6] 1026 	inc	sp
   04E0 2Ar00r00      [16] 1027 	ld	hl,(_mapa)
   04E3 E5            [11] 1028 	push	hl
   04E4 CDr00r00      [17] 1029 	call	_getTilePtr
   04E7 F1            [10] 1030 	pop	af
   04E8 F1            [10] 1031 	pop	af
   04E9 C1            [10] 1032 	pop	bc
   04EA 5E            [ 7] 1033 	ld	e,(hl)
   04EB 3E 02         [ 7] 1034 	ld	a,#0x02
   04ED 93            [ 4] 1035 	sub	a, e
   04EE DAr92r05      [10] 1036 	jp	C,00113$
                           1037 ;src/main.c:225: && *getTilePtr(mapa, enemy->x + G_ENEMY_W + 1, enemy->y + G_ENEMY_H) <= 2)
   04F1 DD 6E F8      [19] 1038 	ld	l,-8 (ix)
   04F4 DD 66 F9      [19] 1039 	ld	h,-7 (ix)
   04F7 7E            [ 7] 1040 	ld	a,(hl)
   04F8 C6 16         [ 7] 1041 	add	a, #0x16
   04FA 57            [ 4] 1042 	ld	d,a
   04FB 0A            [ 7] 1043 	ld	a,(bc)
   04FC C6 05         [ 7] 1044 	add	a, #0x05
   04FE C5            [11] 1045 	push	bc
   04FF D5            [11] 1046 	push	de
   0500 33            [ 6] 1047 	inc	sp
   0501 F5            [11] 1048 	push	af
   0502 33            [ 6] 1049 	inc	sp
   0503 2Ar00r00      [16] 1050 	ld	hl,(_mapa)
   0506 E5            [11] 1051 	push	hl
   0507 CDr00r00      [17] 1052 	call	_getTilePtr
   050A F1            [10] 1053 	pop	af
   050B F1            [10] 1054 	pop	af
   050C C1            [10] 1055 	pop	bc
   050D 5E            [ 7] 1056 	ld	e,(hl)
   050E 3E 02         [ 7] 1057 	ld	a,#0x02
   0510 93            [ 4] 1058 	sub	a, e
   0511 DAr92r05      [10] 1059 	jp	C,00113$
                           1060 ;src/main.c:227: if( (cu.y + G_KNIFEX_0_H) < enemy->y || cu.y  > (enemy->y + G_ENEMY_H) ){
   0514 21r3Dr00      [10] 1061 	ld	hl, #_cu + 1
   0517 5E            [ 7] 1062 	ld	e,(hl)
   0518 16 00         [ 7] 1063 	ld	d,#0x00
   051A 21 04 00      [10] 1064 	ld	hl,#0x0004
   051D 19            [11] 1065 	add	hl,de
   051E DD 75 FE      [19] 1066 	ld	-2 (ix),l
   0521 DD 74 FF      [19] 1067 	ld	-1 (ix),h
   0524 DD 6E F8      [19] 1068 	ld	l,-8 (ix)
   0527 DD 66 F9      [19] 1069 	ld	h,-7 (ix)
   052A 6E            [ 7] 1070 	ld	l,(hl)
   052B 26 00         [ 7] 1071 	ld	h,#0x00
   052D DD 7E FE      [19] 1072 	ld	a,-2 (ix)
   0530 95            [ 4] 1073 	sub	a, l
   0531 DD 7E FF      [19] 1074 	ld	a,-1 (ix)
   0534 9C            [ 4] 1075 	sbc	a, h
   0535 E2r3Ar05      [10] 1076 	jp	PO, 00269$
   0538 EE 80         [ 7] 1077 	xor	a, #0x80
   053A                    1078 00269$:
   053A FAr4Fr05      [10] 1079 	jp	M,00108$
   053D D5            [11] 1080 	push	de
   053E 11 16 00      [10] 1081 	ld	de,#0x0016
   0541 19            [11] 1082 	add	hl, de
   0542 D1            [10] 1083 	pop	de
   0543 7D            [ 4] 1084 	ld	a,l
   0544 93            [ 4] 1085 	sub	a, e
   0545 7C            [ 4] 1086 	ld	a,h
   0546 9A            [ 4] 1087 	sbc	a, d
   0547 E2r4Cr05      [10] 1088 	jp	PO, 00270$
   054A EE 80         [ 7] 1089 	xor	a, #0x80
   054C                    1090 00270$:
   054C F2r56r05      [10] 1091 	jp	P,00109$
   054F                    1092 00108$:
                           1093 ;src/main.c:228: colisiona = 0;
   054F DD 36 F7 00   [19] 1094 	ld	-9 (ix),#0x00
   0553 C3r48r08      [10] 1095 	jp	00165$
   0556                    1096 00109$:
                           1097 ;src/main.c:231: if(cu.x > enemy->x){ //si el cu esta abajo
   0556 21r3Cr00      [10] 1098 	ld	hl, #_cu + 0
   0559 5E            [ 7] 1099 	ld	e,(hl)
   055A 0A            [ 7] 1100 	ld	a,(bc)
   055B 4F            [ 4] 1101 	ld	c,a
   055C 93            [ 4] 1102 	sub	a, e
   055D 30 2C         [12] 1103 	jr	NC,00106$
                           1104 ;src/main.c:232: if( cu.x - (enemy->x + G_ENEMY_W) > 1){ // si hay espacio entre el enemigo y el cu
   055F 6B            [ 4] 1105 	ld	l,e
   0560 26 00         [ 7] 1106 	ld	h,#0x00
   0562 06 00         [ 7] 1107 	ld	b,#0x00
   0564 03            [ 6] 1108 	inc	bc
   0565 03            [ 6] 1109 	inc	bc
   0566 03            [ 6] 1110 	inc	bc
   0567 03            [ 6] 1111 	inc	bc
   0568 BF            [ 4] 1112 	cp	a, a
   0569 ED 42         [15] 1113 	sbc	hl, bc
   056B 3E 01         [ 7] 1114 	ld	a,#0x01
   056D BD            [ 4] 1115 	cp	a, l
   056E 3E 00         [ 7] 1116 	ld	a,#0x00
   0570 9C            [ 4] 1117 	sbc	a, h
   0571 E2r76r05      [10] 1118 	jp	PO, 00271$
   0574 EE 80         [ 7] 1119 	xor	a, #0x80
   0576                    1120 00271$:
   0576 F2r80r05      [10] 1121 	jp	P,00103$
                           1122 ;src/main.c:233: colisiona = 0;
   0579 DD 36 F7 00   [19] 1123 	ld	-9 (ix),#0x00
   057D C3r48r08      [10] 1124 	jp	00165$
   0580                    1125 00103$:
                           1126 ;src/main.c:236: enemy->muerto = SI;
   0580 DD 6E FA      [19] 1127 	ld	l,-6 (ix)
   0583 DD 66 FB      [19] 1128 	ld	h,-5 (ix)
   0586 36 01         [10] 1129 	ld	(hl),#0x01
   0588 C3r48r08      [10] 1130 	jp	00165$
   058B                    1131 00106$:
                           1132 ;src/main.c:239: colisiona = 0;
   058B DD 36 F7 00   [19] 1133 	ld	-9 (ix),#0x00
   058F C3r48r08      [10] 1134 	jp	00165$
   0592                    1135 00113$:
                           1136 ;src/main.c:243: enemy->mira = M_izquierda;
   0592 DD 6E FC      [19] 1137 	ld	l,-4 (ix)
   0595 DD 66 FD      [19] 1138 	ld	h,-3 (ix)
   0598 36 01         [10] 1139 	ld	(hl),#0x01
                           1140 ;src/main.c:245: break;
   059A C3r48r08      [10] 1141 	jp	00165$
                           1142 ;src/main.c:246: case 1:
   059D                    1143 00117$:
                           1144 ;src/main.c:247: if( *getTilePtr(mapa, enemy->x - 1, enemy->y) <= 2
   059D 1D            [ 4] 1145 	dec	e
   059E C5            [11] 1146 	push	bc
   059F D5            [11] 1147 	push	de
   05A0 2Ar00r00      [16] 1148 	ld	hl,(_mapa)
   05A3 E5            [11] 1149 	push	hl
   05A4 CDr00r00      [17] 1150 	call	_getTilePtr
   05A7 F1            [10] 1151 	pop	af
   05A8 F1            [10] 1152 	pop	af
   05A9 C1            [10] 1153 	pop	bc
   05AA 5E            [ 7] 1154 	ld	e,(hl)
   05AB 3E 02         [ 7] 1155 	ld	a,#0x02
   05AD 93            [ 4] 1156 	sub	a, e
   05AE DAr76r06      [10] 1157 	jp	C,00129$
                           1158 ;src/main.c:248: && *getTilePtr(mapa, enemy->x - 1, enemy->y + G_ENEMY_H/2) <= 2
   05B1 DD 6E F8      [19] 1159 	ld	l,-8 (ix)
   05B4 DD 66 F9      [19] 1160 	ld	h,-7 (ix)
   05B7 7E            [ 7] 1161 	ld	a,(hl)
   05B8 C6 0B         [ 7] 1162 	add	a, #0x0B
   05BA 57            [ 4] 1163 	ld	d,a
   05BB 0A            [ 7] 1164 	ld	a,(bc)
   05BC C6 FF         [ 7] 1165 	add	a,#0xFF
   05BE C5            [11] 1166 	push	bc
   05BF D5            [11] 1167 	push	de
   05C0 33            [ 6] 1168 	inc	sp
   05C1 F5            [11] 1169 	push	af
   05C2 33            [ 6] 1170 	inc	sp
   05C3 2Ar00r00      [16] 1171 	ld	hl,(_mapa)
   05C6 E5            [11] 1172 	push	hl
   05C7 CDr00r00      [17] 1173 	call	_getTilePtr
   05CA F1            [10] 1174 	pop	af
   05CB F1            [10] 1175 	pop	af
   05CC C1            [10] 1176 	pop	bc
   05CD 5E            [ 7] 1177 	ld	e,(hl)
   05CE 3E 02         [ 7] 1178 	ld	a,#0x02
   05D0 93            [ 4] 1179 	sub	a, e
   05D1 DAr76r06      [10] 1180 	jp	C,00129$
                           1181 ;src/main.c:249: && *getTilePtr(mapa, enemy->x - 1, enemy->y + G_ENEMY_H) <= 2)
   05D4 DD 6E F8      [19] 1182 	ld	l,-8 (ix)
   05D7 DD 66 F9      [19] 1183 	ld	h,-7 (ix)
   05DA 7E            [ 7] 1184 	ld	a,(hl)
   05DB C6 16         [ 7] 1185 	add	a, #0x16
   05DD 57            [ 4] 1186 	ld	d,a
   05DE 0A            [ 7] 1187 	ld	a,(bc)
   05DF C6 FF         [ 7] 1188 	add	a,#0xFF
   05E1 C5            [11] 1189 	push	bc
   05E2 D5            [11] 1190 	push	de
   05E3 33            [ 6] 1191 	inc	sp
   05E4 F5            [11] 1192 	push	af
   05E5 33            [ 6] 1193 	inc	sp
   05E6 2Ar00r00      [16] 1194 	ld	hl,(_mapa)
   05E9 E5            [11] 1195 	push	hl
   05EA CDr00r00      [17] 1196 	call	_getTilePtr
   05ED F1            [10] 1197 	pop	af
   05EE F1            [10] 1198 	pop	af
   05EF C1            [10] 1199 	pop	bc
   05F0 5E            [ 7] 1200 	ld	e,(hl)
   05F1 3E 02         [ 7] 1201 	ld	a,#0x02
   05F3 93            [ 4] 1202 	sub	a, e
   05F4 DAr76r06      [10] 1203 	jp	C,00129$
                           1204 ;src/main.c:251: if( (cu.y + G_KNIFEX_0_H) < enemy->y || cu.y  > (enemy->y + G_ENEMY_H) ){
   05F7 21r3Dr00      [10] 1205 	ld	hl, #_cu + 1
   05FA 5E            [ 7] 1206 	ld	e,(hl)
   05FB 16 00         [ 7] 1207 	ld	d,#0x00
   05FD 21 04 00      [10] 1208 	ld	hl,#0x0004
   0600 19            [11] 1209 	add	hl,de
   0601 DD 75 FE      [19] 1210 	ld	-2 (ix),l
   0604 DD 74 FF      [19] 1211 	ld	-1 (ix),h
   0607 DD 6E F8      [19] 1212 	ld	l,-8 (ix)
   060A DD 66 F9      [19] 1213 	ld	h,-7 (ix)
   060D 6E            [ 7] 1214 	ld	l,(hl)
   060E 26 00         [ 7] 1215 	ld	h,#0x00
   0610 DD 7E FE      [19] 1216 	ld	a,-2 (ix)
   0613 95            [ 4] 1217 	sub	a, l
   0614 DD 7E FF      [19] 1218 	ld	a,-1 (ix)
   0617 9C            [ 4] 1219 	sbc	a, h
   0618 E2r1Dr06      [10] 1220 	jp	PO, 00272$
   061B EE 80         [ 7] 1221 	xor	a, #0x80
   061D                    1222 00272$:
   061D FAr32r06      [10] 1223 	jp	M,00124$
   0620 D5            [11] 1224 	push	de
   0621 11 16 00      [10] 1225 	ld	de,#0x0016
   0624 19            [11] 1226 	add	hl, de
   0625 D1            [10] 1227 	pop	de
   0626 7D            [ 4] 1228 	ld	a,l
   0627 93            [ 4] 1229 	sub	a, e
   0628 7C            [ 4] 1230 	ld	a,h
   0629 9A            [ 4] 1231 	sbc	a, d
   062A E2r2Fr06      [10] 1232 	jp	PO, 00273$
   062D EE 80         [ 7] 1233 	xor	a, #0x80
   062F                    1234 00273$:
   062F F2r39r06      [10] 1235 	jp	P,00125$
   0632                    1236 00124$:
                           1237 ;src/main.c:252: colisiona = 0;
   0632 DD 36 F7 00   [19] 1238 	ld	-9 (ix),#0x00
   0636 C3r48r08      [10] 1239 	jp	00165$
   0639                    1240 00125$:
                           1241 ;src/main.c:255: if(enemy->x > cu.x){ //si el cu esta abajo
   0639 0A            [ 7] 1242 	ld	a,(bc)
   063A 5F            [ 4] 1243 	ld	e,a
   063B 21r3Cr00      [10] 1244 	ld	hl, #_cu + 0
   063E 4E            [ 7] 1245 	ld	c,(hl)
   063F 79            [ 4] 1246 	ld	a,c
   0640 93            [ 4] 1247 	sub	a, e
   0641 30 2C         [12] 1248 	jr	NC,00122$
                           1249 ;src/main.c:256: if( enemy->x - (cu.x + G_KNIFEX_0_W) > 1){ // si hay espacio entre el enemigo y el cu
   0643 6B            [ 4] 1250 	ld	l,e
   0644 26 00         [ 7] 1251 	ld	h,#0x00
   0646 06 00         [ 7] 1252 	ld	b,#0x00
   0648 03            [ 6] 1253 	inc	bc
   0649 03            [ 6] 1254 	inc	bc
   064A 03            [ 6] 1255 	inc	bc
   064B 03            [ 6] 1256 	inc	bc
   064C BF            [ 4] 1257 	cp	a, a
   064D ED 42         [15] 1258 	sbc	hl, bc
   064F 3E 01         [ 7] 1259 	ld	a,#0x01
   0651 BD            [ 4] 1260 	cp	a, l
   0652 3E 00         [ 7] 1261 	ld	a,#0x00
   0654 9C            [ 4] 1262 	sbc	a, h
   0655 E2r5Ar06      [10] 1263 	jp	PO, 00274$
   0658 EE 80         [ 7] 1264 	xor	a, #0x80
   065A                    1265 00274$:
   065A F2r64r06      [10] 1266 	jp	P,00119$
                           1267 ;src/main.c:257: colisiona = 0;
   065D DD 36 F7 00   [19] 1268 	ld	-9 (ix),#0x00
   0661 C3r48r08      [10] 1269 	jp	00165$
   0664                    1270 00119$:
                           1271 ;src/main.c:260: enemy->muerto = SI;
   0664 DD 6E FA      [19] 1272 	ld	l,-6 (ix)
   0667 DD 66 FB      [19] 1273 	ld	h,-5 (ix)
   066A 36 01         [10] 1274 	ld	(hl),#0x01
   066C C3r48r08      [10] 1275 	jp	00165$
   066F                    1276 00122$:
                           1277 ;src/main.c:263: colisiona = 0;
   066F DD 36 F7 00   [19] 1278 	ld	-9 (ix),#0x00
   0673 C3r48r08      [10] 1279 	jp	00165$
   0676                    1280 00129$:
                           1281 ;src/main.c:267: enemy->mira = M_derecha;
   0676 DD 6E FC      [19] 1282 	ld	l,-4 (ix)
   0679 DD 66 FD      [19] 1283 	ld	h,-3 (ix)
   067C 36 00         [10] 1284 	ld	(hl),#0x00
                           1285 ;src/main.c:269: break;
   067E C3r48r08      [10] 1286 	jp	00165$
                           1287 ;src/main.c:270: case 2:
   0681                    1288 00133$:
                           1289 ;src/main.c:271: if( *getTilePtr(mapa, enemy->x, enemy->y - 2) <= 2
   0681 15            [ 4] 1290 	dec	d
   0682 15            [ 4] 1291 	dec	d
   0683 C5            [11] 1292 	push	bc
   0684 D5            [11] 1293 	push	de
   0685 2Ar00r00      [16] 1294 	ld	hl,(_mapa)
   0688 E5            [11] 1295 	push	hl
   0689 CDr00r00      [17] 1296 	call	_getTilePtr
   068C F1            [10] 1297 	pop	af
   068D F1            [10] 1298 	pop	af
   068E C1            [10] 1299 	pop	bc
   068F 5E            [ 7] 1300 	ld	e,(hl)
   0690 3E 02         [ 7] 1301 	ld	a,#0x02
   0692 93            [ 4] 1302 	sub	a, e
   0693 DAr57r07      [10] 1303 	jp	C,00145$
                           1304 ;src/main.c:272: && *getTilePtr(mapa, enemy->x + G_ENEMY_W / 2, enemy->y - 2) <= 2
   0696 DD 6E F8      [19] 1305 	ld	l,-8 (ix)
   0699 DD 66 F9      [19] 1306 	ld	h,-7 (ix)
   069C 56            [ 7] 1307 	ld	d,(hl)
   069D 15            [ 4] 1308 	dec	d
   069E 15            [ 4] 1309 	dec	d
   069F 0A            [ 7] 1310 	ld	a,(bc)
   06A0 C6 02         [ 7] 1311 	add	a, #0x02
   06A2 C5            [11] 1312 	push	bc
   06A3 D5            [11] 1313 	push	de
   06A4 33            [ 6] 1314 	inc	sp
   06A5 F5            [11] 1315 	push	af
   06A6 33            [ 6] 1316 	inc	sp
   06A7 2Ar00r00      [16] 1317 	ld	hl,(_mapa)
   06AA E5            [11] 1318 	push	hl
   06AB CDr00r00      [17] 1319 	call	_getTilePtr
   06AE F1            [10] 1320 	pop	af
   06AF F1            [10] 1321 	pop	af
   06B0 C1            [10] 1322 	pop	bc
   06B1 5E            [ 7] 1323 	ld	e,(hl)
   06B2 3E 02         [ 7] 1324 	ld	a,#0x02
   06B4 93            [ 4] 1325 	sub	a, e
   06B5 DAr57r07      [10] 1326 	jp	C,00145$
                           1327 ;src/main.c:273: && *getTilePtr(mapa, enemy->x + G_ENEMY_W, enemy->y - 2) <= 2)
   06B8 DD 6E F8      [19] 1328 	ld	l,-8 (ix)
   06BB DD 66 F9      [19] 1329 	ld	h,-7 (ix)
   06BE 56            [ 7] 1330 	ld	d,(hl)
   06BF 15            [ 4] 1331 	dec	d
   06C0 15            [ 4] 1332 	dec	d
   06C1 0A            [ 7] 1333 	ld	a,(bc)
   06C2 C6 04         [ 7] 1334 	add	a, #0x04
   06C4 C5            [11] 1335 	push	bc
   06C5 D5            [11] 1336 	push	de
   06C6 33            [ 6] 1337 	inc	sp
   06C7 F5            [11] 1338 	push	af
   06C8 33            [ 6] 1339 	inc	sp
   06C9 2Ar00r00      [16] 1340 	ld	hl,(_mapa)
   06CC E5            [11] 1341 	push	hl
   06CD CDr00r00      [17] 1342 	call	_getTilePtr
   06D0 F1            [10] 1343 	pop	af
   06D1 F1            [10] 1344 	pop	af
   06D2 C1            [10] 1345 	pop	bc
   06D3 5E            [ 7] 1346 	ld	e,(hl)
   06D4 3E 02         [ 7] 1347 	ld	a,#0x02
   06D6 93            [ 4] 1348 	sub	a, e
   06D7 DAr57r07      [10] 1349 	jp	C,00145$
                           1350 ;src/main.c:275: if((cu.x + G_KNIFEY_0_W) < enemy->x || cu.x  > (enemy->x + G_ENEMY_W)){
   06DA 21r3Cr00      [10] 1351 	ld	hl, #_cu + 0
   06DD 5E            [ 7] 1352 	ld	e,(hl)
   06DE 16 00         [ 7] 1353 	ld	d,#0x00
   06E0 21 02 00      [10] 1354 	ld	hl,#0x0002
   06E3 19            [11] 1355 	add	hl,de
   06E4 DD 75 FE      [19] 1356 	ld	-2 (ix),l
   06E7 DD 74 FF      [19] 1357 	ld	-1 (ix),h
   06EA 0A            [ 7] 1358 	ld	a,(bc)
   06EB 6F            [ 4] 1359 	ld	l,a
   06EC 26 00         [ 7] 1360 	ld	h,#0x00
   06EE DD 7E FE      [19] 1361 	ld	a,-2 (ix)
   06F1 95            [ 4] 1362 	sub	a, l
   06F2 DD 7E FF      [19] 1363 	ld	a,-1 (ix)
   06F5 9C            [ 4] 1364 	sbc	a, h
   06F6 E2rFBr06      [10] 1365 	jp	PO, 00275$
   06F9 EE 80         [ 7] 1366 	xor	a, #0x80
   06FB                    1367 00275$:
   06FB FAr0Er07      [10] 1368 	jp	M,00140$
   06FE 23            [ 6] 1369 	inc	hl
   06FF 23            [ 6] 1370 	inc	hl
   0700 23            [ 6] 1371 	inc	hl
   0701 23            [ 6] 1372 	inc	hl
   0702 7D            [ 4] 1373 	ld	a,l
   0703 93            [ 4] 1374 	sub	a, e
   0704 7C            [ 4] 1375 	ld	a,h
   0705 9A            [ 4] 1376 	sbc	a, d
   0706 E2r0Br07      [10] 1377 	jp	PO, 00276$
   0709 EE 80         [ 7] 1378 	xor	a, #0x80
   070B                    1379 00276$:
   070B F2r14r07      [10] 1380 	jp	P,00141$
   070E                    1381 00140$:
                           1382 ;src/main.c:277: colisiona = 0;
   070E DD 36 F7 00   [19] 1383 	ld	-9 (ix),#0x00
   0712 18 4B         [12] 1384 	jr	00149$
   0714                    1385 00141$:
                           1386 ;src/main.c:280: if(enemy->y>cu.y){
   0714 DD 6E F8      [19] 1387 	ld	l,-8 (ix)
   0717 DD 66 F9      [19] 1388 	ld	h,-7 (ix)
   071A 5E            [ 7] 1389 	ld	e,(hl)
   071B 21r3Dr00      [10] 1390 	ld	hl, #(_cu + 0x0001) + 0
   071E 6E            [ 7] 1391 	ld	l,(hl)
   071F 7D            [ 4] 1392 	ld	a,l
   0720 93            [ 4] 1393 	sub	a, e
   0721 30 2E         [12] 1394 	jr	NC,00138$
                           1395 ;src/main.c:281: if(enemy->y - (cu.y + G_KNIFEY_0_H)  > 2){
   0723 16 00         [ 7] 1396 	ld	d,#0x00
   0725 26 00         [ 7] 1397 	ld	h,#0x00
   0727 D5            [11] 1398 	push	de
   0728 11 08 00      [10] 1399 	ld	de,#0x0008
   072B 19            [11] 1400 	add	hl, de
   072C D1            [10] 1401 	pop	de
   072D 7B            [ 4] 1402 	ld	a,e
   072E 95            [ 4] 1403 	sub	a, l
   072F 5F            [ 4] 1404 	ld	e,a
   0730 7A            [ 4] 1405 	ld	a,d
   0731 9C            [ 4] 1406 	sbc	a, h
   0732 57            [ 4] 1407 	ld	d,a
   0733 3E 02         [ 7] 1408 	ld	a,#0x02
   0735 BB            [ 4] 1409 	cp	a, e
   0736 3E 00         [ 7] 1410 	ld	a,#0x00
   0738 9A            [ 4] 1411 	sbc	a, d
   0739 E2r3Er07      [10] 1412 	jp	PO, 00277$
   073C EE 80         [ 7] 1413 	xor	a, #0x80
   073E                    1414 00277$:
   073E F2r47r07      [10] 1415 	jp	P,00135$
                           1416 ;src/main.c:282: colisiona = 0;
   0741 DD 36 F7 00   [19] 1417 	ld	-9 (ix),#0x00
   0745 18 18         [12] 1418 	jr	00149$
   0747                    1419 00135$:
                           1420 ;src/main.c:285: enemy->muerto = SI;
   0747 DD 6E FA      [19] 1421 	ld	l,-6 (ix)
   074A DD 66 FB      [19] 1422 	ld	h,-5 (ix)
   074D 36 01         [10] 1423 	ld	(hl),#0x01
   074F 18 0E         [12] 1424 	jr	00149$
   0751                    1425 00138$:
                           1426 ;src/main.c:289: colisiona = 0;
   0751 DD 36 F7 00   [19] 1427 	ld	-9 (ix),#0x00
   0755 18 08         [12] 1428 	jr	00149$
   0757                    1429 00145$:
                           1430 ;src/main.c:295: enemy->mira = M_abajo;
   0757 DD 6E FC      [19] 1431 	ld	l,-4 (ix)
   075A DD 66 FD      [19] 1432 	ld	h,-3 (ix)
   075D 36 03         [10] 1433 	ld	(hl),#0x03
                           1434 ;src/main.c:298: case 3:
   075F                    1435 00149$:
                           1436 ;src/main.c:301: if( *getTilePtr(mapa, enemy->x, enemy->y + G_ENEMY_H + 2) <= 2
   075F DD 6E F8      [19] 1437 	ld	l,-8 (ix)
   0762 DD 66 F9      [19] 1438 	ld	h,-7 (ix)
   0765 7E            [ 7] 1439 	ld	a,(hl)
   0766 C6 18         [ 7] 1440 	add	a, #0x18
   0768 57            [ 4] 1441 	ld	d,a
   0769 0A            [ 7] 1442 	ld	a,(bc)
   076A C5            [11] 1443 	push	bc
   076B D5            [11] 1444 	push	de
   076C 33            [ 6] 1445 	inc	sp
   076D F5            [11] 1446 	push	af
   076E 33            [ 6] 1447 	inc	sp
   076F 2Ar00r00      [16] 1448 	ld	hl,(_mapa)
   0772 E5            [11] 1449 	push	hl
   0773 CDr00r00      [17] 1450 	call	_getTilePtr
   0776 F1            [10] 1451 	pop	af
   0777 F1            [10] 1452 	pop	af
   0778 C1            [10] 1453 	pop	bc
   0779 5E            [ 7] 1454 	ld	e,(hl)
   077A 3E 02         [ 7] 1455 	ld	a,#0x02
   077C 93            [ 4] 1456 	sub	a, e
   077D DAr40r08      [10] 1457 	jp	C,00161$
                           1458 ;src/main.c:302: && *getTilePtr(mapa, enemy->x + G_ENEMY_W / 2, enemy->y + G_ENEMY_H + 2) <= 2
   0780 DD 6E F8      [19] 1459 	ld	l,-8 (ix)
   0783 DD 66 F9      [19] 1460 	ld	h,-7 (ix)
   0786 7E            [ 7] 1461 	ld	a,(hl)
   0787 C6 18         [ 7] 1462 	add	a, #0x18
   0789 57            [ 4] 1463 	ld	d,a
   078A 0A            [ 7] 1464 	ld	a,(bc)
   078B C6 02         [ 7] 1465 	add	a, #0x02
   078D C5            [11] 1466 	push	bc
   078E D5            [11] 1467 	push	de
   078F 33            [ 6] 1468 	inc	sp
   0790 F5            [11] 1469 	push	af
   0791 33            [ 6] 1470 	inc	sp
   0792 2Ar00r00      [16] 1471 	ld	hl,(_mapa)
   0795 E5            [11] 1472 	push	hl
   0796 CDr00r00      [17] 1473 	call	_getTilePtr
   0799 F1            [10] 1474 	pop	af
   079A F1            [10] 1475 	pop	af
   079B C1            [10] 1476 	pop	bc
   079C 5E            [ 7] 1477 	ld	e,(hl)
   079D 3E 02         [ 7] 1478 	ld	a,#0x02
   079F 93            [ 4] 1479 	sub	a, e
   07A0 DAr40r08      [10] 1480 	jp	C,00161$
                           1481 ;src/main.c:303: && *getTilePtr(mapa, enemy->x + G_ENEMY_W, enemy->y + G_ENEMY_H + 2) <= 2)
   07A3 DD 6E F8      [19] 1482 	ld	l,-8 (ix)
   07A6 DD 66 F9      [19] 1483 	ld	h,-7 (ix)
   07A9 7E            [ 7] 1484 	ld	a,(hl)
   07AA C6 18         [ 7] 1485 	add	a, #0x18
   07AC 57            [ 4] 1486 	ld	d,a
   07AD 0A            [ 7] 1487 	ld	a,(bc)
   07AE C6 04         [ 7] 1488 	add	a, #0x04
   07B0 C5            [11] 1489 	push	bc
   07B1 D5            [11] 1490 	push	de
   07B2 33            [ 6] 1491 	inc	sp
   07B3 F5            [11] 1492 	push	af
   07B4 33            [ 6] 1493 	inc	sp
   07B5 2Ar00r00      [16] 1494 	ld	hl,(_mapa)
   07B8 E5            [11] 1495 	push	hl
   07B9 CDr00r00      [17] 1496 	call	_getTilePtr
   07BC F1            [10] 1497 	pop	af
   07BD F1            [10] 1498 	pop	af
   07BE C1            [10] 1499 	pop	bc
   07BF 5E            [ 7] 1500 	ld	e,(hl)
   07C0 3E 02         [ 7] 1501 	ld	a,#0x02
   07C2 93            [ 4] 1502 	sub	a, e
   07C3 38 7B         [12] 1503 	jr	C,00161$
                           1504 ;src/main.c:305: if( (cu.x + G_KNIFEY_0_W) < enemy->x || cu.x  > (enemy->x + G_ENEMY_W) ){
   07C5 21r3Cr00      [10] 1505 	ld	hl, #_cu + 0
   07C8 5E            [ 7] 1506 	ld	e,(hl)
   07C9 16 00         [ 7] 1507 	ld	d,#0x00
   07CB 21 02 00      [10] 1508 	ld	hl,#0x0002
   07CE 19            [11] 1509 	add	hl,de
   07CF DD 75 FE      [19] 1510 	ld	-2 (ix),l
   07D2 DD 74 FF      [19] 1511 	ld	-1 (ix),h
   07D5 0A            [ 7] 1512 	ld	a,(bc)
   07D6 4F            [ 4] 1513 	ld	c,a
   07D7 06 00         [ 7] 1514 	ld	b,#0x00
   07D9 DD 7E FE      [19] 1515 	ld	a,-2 (ix)
   07DC 91            [ 4] 1516 	sub	a, c
   07DD DD 7E FF      [19] 1517 	ld	a,-1 (ix)
   07E0 98            [ 4] 1518 	sbc	a, b
   07E1 E2rE6r07      [10] 1519 	jp	PO, 00278$
   07E4 EE 80         [ 7] 1520 	xor	a, #0x80
   07E6                    1521 00278$:
   07E6 FArF9r07      [10] 1522 	jp	M,00156$
   07E9 03            [ 6] 1523 	inc	bc
   07EA 03            [ 6] 1524 	inc	bc
   07EB 03            [ 6] 1525 	inc	bc
   07EC 03            [ 6] 1526 	inc	bc
   07ED 79            [ 4] 1527 	ld	a,c
   07EE 93            [ 4] 1528 	sub	a, e
   07EF 78            [ 4] 1529 	ld	a,b
   07F0 9A            [ 4] 1530 	sbc	a, d
   07F1 E2rF6r07      [10] 1531 	jp	PO, 00279$
   07F4 EE 80         [ 7] 1532 	xor	a, #0x80
   07F6                    1533 00279$:
   07F6 F2rFFr07      [10] 1534 	jp	P,00157$
   07F9                    1535 00156$:
                           1536 ;src/main.c:306: colisiona = 0;
   07F9 DD 36 F7 00   [19] 1537 	ld	-9 (ix),#0x00
   07FD 18 49         [12] 1538 	jr	00165$
   07FF                    1539 00157$:
                           1540 ;src/main.c:309: if(cu.y > enemy->y){ //si el cu esta abajo
   07FF 21r3Dr00      [10] 1541 	ld	hl, #(_cu + 0x0001) + 0
   0802 4E            [ 7] 1542 	ld	c,(hl)
   0803 DD 6E F8      [19] 1543 	ld	l,-8 (ix)
   0806 DD 66 F9      [19] 1544 	ld	h,-7 (ix)
   0809 5E            [ 7] 1545 	ld	e,(hl)
   080A 7B            [ 4] 1546 	ld	a,e
   080B 91            [ 4] 1547 	sub	a, c
   080C 30 2C         [12] 1548 	jr	NC,00154$
                           1549 ;src/main.c:310: if( cu.y - (enemy->y + G_ENEMY_H)  > 2){ // si hay espacio entre el enemigo y el cu
   080E 06 00         [ 7] 1550 	ld	b,#0x00
   0810 16 00         [ 7] 1551 	ld	d,#0x00
   0812 21 16 00      [10] 1552 	ld	hl,#0x0016
   0815 19            [11] 1553 	add	hl,de
   0816 79            [ 4] 1554 	ld	a,c
   0817 95            [ 4] 1555 	sub	a, l
   0818 4F            [ 4] 1556 	ld	c,a
   0819 78            [ 4] 1557 	ld	a,b
   081A 9C            [ 4] 1558 	sbc	a, h
   081B 47            [ 4] 1559 	ld	b,a
   081C 3E 02         [ 7] 1560 	ld	a,#0x02
   081E B9            [ 4] 1561 	cp	a, c
   081F 3E 00         [ 7] 1562 	ld	a,#0x00
   0821 98            [ 4] 1563 	sbc	a, b
   0822 E2r27r08      [10] 1564 	jp	PO, 00280$
   0825 EE 80         [ 7] 1565 	xor	a, #0x80
   0827                    1566 00280$:
   0827 F2r30r08      [10] 1567 	jp	P,00151$
                           1568 ;src/main.c:311: colisiona = 0;
   082A DD 36 F7 00   [19] 1569 	ld	-9 (ix),#0x00
   082E 18 18         [12] 1570 	jr	00165$
   0830                    1571 00151$:
                           1572 ;src/main.c:314: enemy->muerto = SI;
   0830 DD 6E FA      [19] 1573 	ld	l,-6 (ix)
   0833 DD 66 FB      [19] 1574 	ld	h,-5 (ix)
   0836 36 01         [10] 1575 	ld	(hl),#0x01
   0838 18 0E         [12] 1576 	jr	00165$
   083A                    1577 00154$:
                           1578 ;src/main.c:318: colisiona = 0;
   083A DD 36 F7 00   [19] 1579 	ld	-9 (ix),#0x00
   083E 18 08         [12] 1580 	jr	00165$
   0840                    1581 00161$:
                           1582 ;src/main.c:322: enemy->mira = M_arriba;
   0840 DD 6E FC      [19] 1583 	ld	l,-4 (ix)
   0843 DD 66 FD      [19] 1584 	ld	h,-3 (ix)
   0846 36 02         [10] 1585 	ld	(hl),#0x02
                           1586 ;src/main.c:325: }
   0848                    1587 00165$:
                           1588 ;src/main.c:326: return colisiona;
   0848 DD 6E F7      [19] 1589 	ld	l,-9 (ix)
   084B DD F9         [10] 1590 	ld	sp, ix
   084D DD E1         [14] 1591 	pop	ix
   084F C9            [10] 1592 	ret
                           1593 ;src/main.c:329: void moverEnemigoArriba(TEnemy *enemy){
                           1594 ;	---------------------------------
                           1595 ; Function moverEnemigoArriba
                           1596 ; ---------------------------------
   0850                    1597 _moverEnemigoArriba::
   0850 DD E5         [15] 1598 	push	ix
   0852 DD 21 00 00   [14] 1599 	ld	ix,#0
   0856 DD 39         [15] 1600 	add	ix,sp
                           1601 ;src/main.c:330: enemy->y--;
   0858 DD 4E 04      [19] 1602 	ld	c,4 (ix)
   085B DD 46 05      [19] 1603 	ld	b,5 (ix)
   085E 69            [ 4] 1604 	ld	l, c
   085F 60            [ 4] 1605 	ld	h, b
   0860 23            [ 6] 1606 	inc	hl
   0861 5E            [ 7] 1607 	ld	e,(hl)
   0862 1D            [ 4] 1608 	dec	e
   0863 73            [ 7] 1609 	ld	(hl),e
                           1610 ;src/main.c:331: enemy->y--;
   0864 1D            [ 4] 1611 	dec	e
   0865 73            [ 7] 1612 	ld	(hl),e
                           1613 ;src/main.c:332: enemy->mover = SI;
   0866 21 06 00      [10] 1614 	ld	hl,#0x0006
   0869 09            [11] 1615 	add	hl,bc
   086A 36 01         [10] 1616 	ld	(hl),#0x01
   086C DD E1         [14] 1617 	pop	ix
   086E C9            [10] 1618 	ret
                           1619 ;src/main.c:335: void moverEnemigoAbajo(TEnemy *enemy){
                           1620 ;	---------------------------------
                           1621 ; Function moverEnemigoAbajo
                           1622 ; ---------------------------------
   086F                    1623 _moverEnemigoAbajo::
   086F DD E5         [15] 1624 	push	ix
   0871 DD 21 00 00   [14] 1625 	ld	ix,#0
   0875 DD 39         [15] 1626 	add	ix,sp
                           1627 ;src/main.c:336: enemy->y++;
   0877 DD 4E 04      [19] 1628 	ld	c,4 (ix)
   087A DD 46 05      [19] 1629 	ld	b,5 (ix)
   087D 59            [ 4] 1630 	ld	e, c
   087E 50            [ 4] 1631 	ld	d, b
   087F 13            [ 6] 1632 	inc	de
   0880 1A            [ 7] 1633 	ld	a,(de)
   0881 3C            [ 4] 1634 	inc	a
   0882 12            [ 7] 1635 	ld	(de),a
                           1636 ;src/main.c:337: enemy->y++;
   0883 3C            [ 4] 1637 	inc	a
   0884 12            [ 7] 1638 	ld	(de),a
                           1639 ;src/main.c:338: enemy->mover = SI;
   0885 21 06 00      [10] 1640 	ld	hl,#0x0006
   0888 09            [11] 1641 	add	hl,bc
   0889 36 01         [10] 1642 	ld	(hl),#0x01
   088B DD E1         [14] 1643 	pop	ix
   088D C9            [10] 1644 	ret
                           1645 ;src/main.c:341: void moverEnemigoDerecha(TEnemy *enemy){
                           1646 ;	---------------------------------
                           1647 ; Function moverEnemigoDerecha
                           1648 ; ---------------------------------
   088E                    1649 _moverEnemigoDerecha::
                           1650 ;src/main.c:342: enemy->x++;
   088E D1            [10] 1651 	pop	de
   088F C1            [10] 1652 	pop	bc
   0890 C5            [11] 1653 	push	bc
   0891 D5            [11] 1654 	push	de
   0892 0A            [ 7] 1655 	ld	a,(bc)
   0893 3C            [ 4] 1656 	inc	a
   0894 02            [ 7] 1657 	ld	(bc),a
                           1658 ;src/main.c:343: enemy->x++;
   0895 3C            [ 4] 1659 	inc	a
   0896 02            [ 7] 1660 	ld	(bc),a
                           1661 ;src/main.c:344: enemy->mover = SI;
   0897 21 06 00      [10] 1662 	ld	hl,#0x0006
   089A 09            [11] 1663 	add	hl,bc
   089B 36 01         [10] 1664 	ld	(hl),#0x01
   089D C9            [10] 1665 	ret
                           1666 ;src/main.c:347: void moverEnemigoIzquierda(TEnemy *enemy){
                           1667 ;	---------------------------------
                           1668 ; Function moverEnemigoIzquierda
                           1669 ; ---------------------------------
   089E                    1670 _moverEnemigoIzquierda::
                           1671 ;src/main.c:348: enemy->x--;
   089E D1            [10] 1672 	pop	de
   089F C1            [10] 1673 	pop	bc
   08A0 C5            [11] 1674 	push	bc
   08A1 D5            [11] 1675 	push	de
   08A2 0A            [ 7] 1676 	ld	a,(bc)
   08A3 C6 FF         [ 7] 1677 	add	a,#0xFF
   08A5 02            [ 7] 1678 	ld	(bc),a
                           1679 ;src/main.c:349: enemy->x--;
   08A6 C6 FF         [ 7] 1680 	add	a,#0xFF
   08A8 02            [ 7] 1681 	ld	(bc),a
                           1682 ;src/main.c:350: enemy->mover = SI;
   08A9 21 06 00      [10] 1683 	ld	hl,#0x0006
   08AC 09            [11] 1684 	add	hl,bc
   08AD 36 01         [10] 1685 	ld	(hl),#0x01
   08AF C9            [10] 1686 	ret
                           1687 ;src/main.c:353: void moverEnemigo(TEnemy *enemy){
                           1688 ;	---------------------------------
                           1689 ; Function moverEnemigo
                           1690 ; ---------------------------------
   08B0                    1691 _moverEnemigo::
                           1692 ;src/main.c:354: if(!enemy->muerto){
   08B0 D1            [10] 1693 	pop	de
   08B1 C1            [10] 1694 	pop	bc
   08B2 C5            [11] 1695 	push	bc
   08B3 D5            [11] 1696 	push	de
   08B4 C5            [11] 1697 	push	bc
   08B5 FD E1         [14] 1698 	pop	iy
   08B7 FD 7E 08      [19] 1699 	ld	a,8 (iy)
   08BA B7            [ 4] 1700 	or	a, a
   08BB C0            [11] 1701 	ret	NZ
                           1702 ;src/main.c:355: if(!checkEnemyCollision(enemy->mira, enemy)){
   08BC 21 07 00      [10] 1703 	ld	hl,#0x0007
   08BF 09            [11] 1704 	add	hl,bc
   08C0 56            [ 7] 1705 	ld	d,(hl)
   08C1 E5            [11] 1706 	push	hl
   08C2 C5            [11] 1707 	push	bc
   08C3 C5            [11] 1708 	push	bc
   08C4 D5            [11] 1709 	push	de
   08C5 33            [ 6] 1710 	inc	sp
   08C6 CDr55r04      [17] 1711 	call	_checkEnemyCollision
   08C9 F1            [10] 1712 	pop	af
   08CA 33            [ 6] 1713 	inc	sp
   08CB 7D            [ 4] 1714 	ld	a,l
   08CC C1            [10] 1715 	pop	bc
   08CD E1            [10] 1716 	pop	hl
   08CE B7            [ 4] 1717 	or	a, a
   08CF C0            [11] 1718 	ret	NZ
                           1719 ;src/main.c:357: switch (enemy->mira) {
   08D0 5E            [ 7] 1720 	ld	e,(hl)
   08D1 3E 03         [ 7] 1721 	ld	a,#0x03
   08D3 93            [ 4] 1722 	sub	a, e
   08D4 D8            [11] 1723 	ret	C
   08D5 16 00         [ 7] 1724 	ld	d,#0x00
   08D7 21rDDr08      [10] 1725 	ld	hl,#00124$
   08DA 19            [11] 1726 	add	hl,de
   08DB 19            [11] 1727 	add	hl,de
                           1728 ;src/main.c:359: case 0:
   08DC E9            [ 4] 1729 	jp	(hl)
   08DD                    1730 00124$:
   08DD 18 06         [12] 1731 	jr	00101$
   08DF 18 0A         [12] 1732 	jr	00102$
   08E1 18 0E         [12] 1733 	jr	00103$
   08E3 18 12         [12] 1734 	jr	00104$
   08E5                    1735 00101$:
                           1736 ;src/main.c:360: moverEnemigoDerecha(enemy);
   08E5 C5            [11] 1737 	push	bc
   08E6 CDr8Er08      [17] 1738 	call	_moverEnemigoDerecha
   08E9 F1            [10] 1739 	pop	af
                           1740 ;src/main.c:361: break;
   08EA C9            [10] 1741 	ret
                           1742 ;src/main.c:362: case 1:
   08EB                    1743 00102$:
                           1744 ;src/main.c:363: moverEnemigoIzquierda(enemy);
   08EB C5            [11] 1745 	push	bc
   08EC CDr9Er08      [17] 1746 	call	_moverEnemigoIzquierda
   08EF F1            [10] 1747 	pop	af
                           1748 ;src/main.c:364: break;
   08F0 C9            [10] 1749 	ret
                           1750 ;src/main.c:365: case 2:
   08F1                    1751 00103$:
                           1752 ;src/main.c:366: moverEnemigoArriba(enemy);
   08F1 C5            [11] 1753 	push	bc
   08F2 CDr50r08      [17] 1754 	call	_moverEnemigoArriba
   08F5 F1            [10] 1755 	pop	af
                           1756 ;src/main.c:367: break;
   08F6 C9            [10] 1757 	ret
                           1758 ;src/main.c:368: case 3:
   08F7                    1759 00104$:
                           1760 ;src/main.c:369: moverEnemigoAbajo(enemy);
   08F7 C5            [11] 1761 	push	bc
   08F8 CDr6Fr08      [17] 1762 	call	_moverEnemigoAbajo
   08FB F1            [10] 1763 	pop	af
                           1764 ;src/main.c:371: }
   08FC C9            [10] 1765 	ret
                           1766 ;src/main.c:376: void inicializarEnemy() {
                           1767 ;	---------------------------------
                           1768 ; Function inicializarEnemy
                           1769 ; ---------------------------------
   08FD                    1770 _inicializarEnemy::
   08FD DD E5         [15] 1771 	push	ix
   08FF DD 21 00 00   [14] 1772 	ld	ix,#0
   0903 DD 39         [15] 1773 	add	ix,sp
   0905 3B            [ 6] 1774 	dec	sp
                           1775 ;src/main.c:377: u8 i = (2 + num_mapa) + 1; //sacar distinto numero dependiendo del mapa
   0906 3Ar02r00      [13] 1776 	ld	a,(#_num_mapa + 0)
   0909 C6 03         [ 7] 1777 	add	a, #0x03
   090B DD 77 FF      [19] 1778 	ld	-1 (ix),a
                           1779 ;src/main.c:382: actual = enemy;
   090E 11r00r00      [10] 1780 	ld	de,#_enemy+0
                           1781 ;src/main.c:383: while(--i){
   0911                    1782 00101$:
   0911 DD 35 FF      [23] 1783 	dec	-1 (ix)
   0914 DD 7E FF      [19] 1784 	ld	a,-1 (ix)
   0917 B7            [ 4] 1785 	or	a, a
   0918 28 61         [12] 1786 	jr	Z,00104$
                           1787 ;src/main.c:384: actual->x = actual->px = spawnX[i];
   091A 4B            [ 4] 1788 	ld	c, e
   091B 42            [ 4] 1789 	ld	b, d
   091C 03            [ 6] 1790 	inc	bc
   091D 03            [ 6] 1791 	inc	bc
   091E 3Er1C         [ 7] 1792 	ld	a,#<(_spawnX)
   0920 DD 86 FF      [19] 1793 	add	a, -1 (ix)
   0923 6F            [ 4] 1794 	ld	l,a
   0924 3Es00         [ 7] 1795 	ld	a,#>(_spawnX)
   0926 CE 00         [ 7] 1796 	adc	a, #0x00
   0928 67            [ 4] 1797 	ld	h,a
   0929 7E            [ 7] 1798 	ld	a,(hl)
   092A 02            [ 7] 1799 	ld	(bc),a
   092B 12            [ 7] 1800 	ld	(de),a
                           1801 ;src/main.c:385: actual->y = actual->py = spawnY[i];
   092C D5            [11] 1802 	push	de
   092D FD E1         [14] 1803 	pop	iy
   092F FD 23         [10] 1804 	inc	iy
   0931 4B            [ 4] 1805 	ld	c, e
   0932 42            [ 4] 1806 	ld	b, d
   0933 03            [ 6] 1807 	inc	bc
   0934 03            [ 6] 1808 	inc	bc
   0935 03            [ 6] 1809 	inc	bc
   0936 3Er21         [ 7] 1810 	ld	a,#<(_spawnY)
   0938 DD 86 FF      [19] 1811 	add	a, -1 (ix)
   093B 6F            [ 4] 1812 	ld	l,a
   093C 3Es00         [ 7] 1813 	ld	a,#>(_spawnY)
   093E CE 00         [ 7] 1814 	adc	a, #0x00
   0940 67            [ 4] 1815 	ld	h,a
   0941 7E            [ 7] 1816 	ld	a,(hl)
   0942 02            [ 7] 1817 	ld	(bc),a
   0943 FD 77 00      [19] 1818 	ld	0 (iy), a
                           1819 ;src/main.c:386: actual->mover  = NO;
   0946 21 06 00      [10] 1820 	ld	hl,#0x0006
   0949 19            [11] 1821 	add	hl,de
   094A 36 00         [10] 1822 	ld	(hl),#0x00
                           1823 ;src/main.c:387: actual->mira   = M_abajo;
   094C 21 07 00      [10] 1824 	ld	hl,#0x0007
   094F 19            [11] 1825 	add	hl,de
   0950 36 03         [10] 1826 	ld	(hl),#0x03
                           1827 ;src/main.c:388: actual->sprite = g_enemy;
   0952 21 04 00      [10] 1828 	ld	hl,#0x0004
   0955 19            [11] 1829 	add	hl,de
   0956 36r00         [10] 1830 	ld	(hl),#<(_g_enemy)
   0958 23            [ 6] 1831 	inc	hl
   0959 36s00         [10] 1832 	ld	(hl),#>(_g_enemy)
                           1833 ;src/main.c:389: actual->muerto = NO;
   095B 21 08 00      [10] 1834 	ld	hl,#0x0008
   095E 19            [11] 1835 	add	hl,de
   095F 36 00         [10] 1836 	ld	(hl),#0x00
                           1837 ;src/main.c:390: actual->muertes = 0;
   0961 21 0C 00      [10] 1838 	ld	hl,#0x000C
   0964 19            [11] 1839 	add	hl,de
   0965 36 00         [10] 1840 	ld	(hl),#0x00
                           1841 ;src/main.c:391: actual->patroling = SI;
   0967 21 09 00      [10] 1842 	ld	hl,#0x0009
   096A 19            [11] 1843 	add	hl,de
   096B 36 01         [10] 1844 	ld	(hl),#0x01
                           1845 ;src/main.c:393: dibujarEnemigo(actual);
   096D D5            [11] 1846 	push	de
   096E D5            [11] 1847 	push	de
   096F CDrB0r02      [17] 1848 	call	_dibujarEnemigo
   0972 F1            [10] 1849 	pop	af
   0973 D1            [10] 1850 	pop	de
                           1851 ;src/main.c:395: ++actual;
   0974 21 0D 00      [10] 1852 	ld	hl,#0x000D
   0977 19            [11] 1853 	add	hl,de
   0978 EB            [ 4] 1854 	ex	de,hl
   0979 18 96         [12] 1855 	jr	00101$
   097B                    1856 00104$:
   097B 33            [ 6] 1857 	inc	sp
   097C DD E1         [14] 1858 	pop	ix
   097E C9            [10] 1859 	ret
                           1860 ;src/main.c:399: void avanzarMapa() {
                           1861 ;	---------------------------------
                           1862 ; Function avanzarMapa
                           1863 ; ---------------------------------
   097F                    1864 _avanzarMapa::
                           1865 ;src/main.c:400: if(num_mapa < NUM_MAPAS -1) {
   097F 3Ar02r00      [13] 1866 	ld	a,(#_num_mapa + 0)
   0982 D6 02         [ 7] 1867 	sub	a, #0x02
   0984 30 34         [12] 1868 	jr	NC,00102$
                           1869 ;src/main.c:401: mapa = mapas[++num_mapa];
   0986 01r16r00      [10] 1870 	ld	bc,#_mapas+0
   0989 21r02r00      [10] 1871 	ld	hl, #_num_mapa+0
   098C 34            [11] 1872 	inc	(hl)
   098D FD 21r02r00   [14] 1873 	ld	iy,#_num_mapa
   0991 FD 6E 00      [19] 1874 	ld	l,0 (iy)
   0994 26 00         [ 7] 1875 	ld	h,#0x00
   0996 29            [11] 1876 	add	hl, hl
   0997 09            [11] 1877 	add	hl,bc
   0998 7E            [ 7] 1878 	ld	a,(hl)
   0999 FD 21r00r00   [14] 1879 	ld	iy,#_mapa
   099D FD 77 00      [19] 1880 	ld	0 (iy),a
   09A0 23            [ 6] 1881 	inc	hl
   09A1 7E            [ 7] 1882 	ld	a,(hl)
   09A2 32r01r00      [13] 1883 	ld	(#_mapa + 1),a
                           1884 ;src/main.c:402: prota.x = prota.px = 2;
   09A5 21r36r00      [10] 1885 	ld	hl,#(_prota + 0x0002)
   09A8 36 02         [10] 1886 	ld	(hl),#0x02
   09AA 21r34r00      [10] 1887 	ld	hl,#_prota
   09AD 36 02         [10] 1888 	ld	(hl),#0x02
                           1889 ;src/main.c:403: prota.mover = SI;
   09AF 21r3Ar00      [10] 1890 	ld	hl,#(_prota + 0x0006)
   09B2 36 01         [10] 1891 	ld	(hl),#0x01
                           1892 ;src/main.c:404: dibujarMapa();
   09B4 CDr00r00      [17] 1893 	call	_dibujarMapa
                           1894 ;src/main.c:405: inicializarEnemy();
   09B7 C3rFDr08      [10] 1895 	jp  _inicializarEnemy
   09BA                    1896 00102$:
                           1897 ;src/main.c:408: menuFin(puntuacion);
   09BA FD 21r03r00   [14] 1898 	ld	iy,#_puntuacion
   09BE FD 6E 00      [19] 1899 	ld	l,0 (iy)
   09C1 26 00         [ 7] 1900 	ld	h,#0x00
   09C3 C3r00r00      [10] 1901 	jp  _menuFin
                           1902 ;src/main.c:412: void moverIzquierda() {
                           1903 ;	---------------------------------
                           1904 ; Function moverIzquierda
                           1905 ; ---------------------------------
   09C6                    1906 _moverIzquierda::
                           1907 ;src/main.c:413: prota.mira = M_izquierda;
   09C6 01r34r00      [10] 1908 	ld	bc,#_prota+0
   09C9 21r3Br00      [10] 1909 	ld	hl,#(_prota + 0x0007)
   09CC 36 01         [10] 1910 	ld	(hl),#0x01
                           1911 ;src/main.c:414: if (!checkCollision(M_izquierda)) {
   09CE C5            [11] 1912 	push	bc
   09CF 3E 01         [ 7] 1913 	ld	a,#0x01
   09D1 F5            [11] 1914 	push	af
   09D2 33            [ 6] 1915 	inc	sp
   09D3 CDr3Br01      [17] 1916 	call	_checkCollision
   09D6 33            [ 6] 1917 	inc	sp
   09D7 C1            [10] 1918 	pop	bc
   09D8 7D            [ 4] 1919 	ld	a,l
   09D9 B7            [ 4] 1920 	or	a, a
   09DA C0            [11] 1921 	ret	NZ
                           1922 ;src/main.c:415: prota.x--;
   09DB 0A            [ 7] 1923 	ld	a,(bc)
   09DC C6 FF         [ 7] 1924 	add	a,#0xFF
   09DE 02            [ 7] 1925 	ld	(bc),a
                           1926 ;src/main.c:416: prota.mover = SI;
   09DF 21r3Ar00      [10] 1927 	ld	hl,#(_prota + 0x0006)
   09E2 36 01         [10] 1928 	ld	(hl),#0x01
                           1929 ;src/main.c:417: prota.sprite = g_hero_left;
   09E4 21r00r00      [10] 1930 	ld	hl,#_g_hero_left
   09E7 22r38r00      [16] 1931 	ld	((_prota + 0x0004)), hl
   09EA C9            [10] 1932 	ret
                           1933 ;src/main.c:421: void moverDerecha() {
                           1934 ;	---------------------------------
                           1935 ; Function moverDerecha
                           1936 ; ---------------------------------
   09EB                    1937 _moverDerecha::
                           1938 ;src/main.c:422: prota.mira = M_derecha;
   09EB 21r3Br00      [10] 1939 	ld	hl,#(_prota + 0x0007)
   09EE 36 00         [10] 1940 	ld	(hl),#0x00
                           1941 ;src/main.c:423: if (!checkCollision(M_derecha) && ( prota.x + G_HERO_W < 80)) {
   09F0 AF            [ 4] 1942 	xor	a, a
   09F1 F5            [11] 1943 	push	af
   09F2 33            [ 6] 1944 	inc	sp
   09F3 CDr3Br01      [17] 1945 	call	_checkCollision
   09F6 33            [ 6] 1946 	inc	sp
   09F7 45            [ 4] 1947 	ld	b,l
   09F8 21r34r00      [10] 1948 	ld	hl, #_prota + 0
   09FB 4E            [ 7] 1949 	ld	c,(hl)
   09FC 59            [ 4] 1950 	ld	e,c
   09FD 16 00         [ 7] 1951 	ld	d,#0x00
   09FF 21 07 00      [10] 1952 	ld	hl,#0x0007
   0A02 19            [11] 1953 	add	hl,de
   0A03 11 50 80      [10] 1954 	ld	de, #0x8050
   0A06 29            [11] 1955 	add	hl, hl
   0A07 3F            [ 4] 1956 	ccf
   0A08 CB 1C         [ 8] 1957 	rr	h
   0A0A CB 1D         [ 8] 1958 	rr	l
   0A0C ED 52         [15] 1959 	sbc	hl, de
   0A0E 3E 00         [ 7] 1960 	ld	a,#0x00
   0A10 17            [ 4] 1961 	rla
   0A11 5F            [ 4] 1962 	ld	e,a
   0A12 78            [ 4] 1963 	ld	a,b
   0A13 B7            [ 4] 1964 	or	a,a
   0A14 20 14         [12] 1965 	jr	NZ,00104$
   0A16 B3            [ 4] 1966 	or	a,e
   0A17 28 11         [12] 1967 	jr	Z,00104$
                           1968 ;src/main.c:424: prota.x++;
   0A19 0C            [ 4] 1969 	inc	c
   0A1A 21r34r00      [10] 1970 	ld	hl,#_prota
   0A1D 71            [ 7] 1971 	ld	(hl),c
                           1972 ;src/main.c:425: prota.mover = SI;
   0A1E 21r3Ar00      [10] 1973 	ld	hl,#(_prota + 0x0006)
   0A21 36 01         [10] 1974 	ld	(hl),#0x01
                           1975 ;src/main.c:426: prota.sprite = g_hero;
   0A23 21r00r00      [10] 1976 	ld	hl,#_g_hero
   0A26 22r38r00      [16] 1977 	ld	((_prota + 0x0004)), hl
   0A29 C9            [10] 1978 	ret
   0A2A                    1979 00104$:
                           1980 ;src/main.c:428: }else if( prota.x + G_HERO_W >= 80){
   0A2A 7B            [ 4] 1981 	ld	a,e
   0A2B B7            [ 4] 1982 	or	a, a
   0A2C C0            [11] 1983 	ret	NZ
                           1984 ;src/main.c:429: avanzarMapa();
   0A2D C3r7Fr09      [10] 1985 	jp  _avanzarMapa
                           1986 ;src/main.c:433: void moverArriba() {
                           1987 ;	---------------------------------
                           1988 ; Function moverArriba
                           1989 ; ---------------------------------
   0A30                    1990 _moverArriba::
                           1991 ;src/main.c:434: prota.mira = M_arriba;
   0A30 21r3Br00      [10] 1992 	ld	hl,#(_prota + 0x0007)
   0A33 36 02         [10] 1993 	ld	(hl),#0x02
                           1994 ;src/main.c:435: if (!checkCollision(M_arriba)) { 
   0A35 3E 02         [ 7] 1995 	ld	a,#0x02
   0A37 F5            [11] 1996 	push	af
   0A38 33            [ 6] 1997 	inc	sp
   0A39 CDr3Br01      [17] 1998 	call	_checkCollision
   0A3C 33            [ 6] 1999 	inc	sp
   0A3D 7D            [ 4] 2000 	ld	a,l
   0A3E B7            [ 4] 2001 	or	a, a
   0A3F C0            [11] 2002 	ret	NZ
                           2003 ;src/main.c:436: prota.y--;
   0A40 21r35r00      [10] 2004 	ld	hl,#_prota + 1
   0A43 4E            [ 7] 2005 	ld	c,(hl)
   0A44 0D            [ 4] 2006 	dec	c
   0A45 71            [ 7] 2007 	ld	(hl),c
                           2008 ;src/main.c:437: prota.y--;
   0A46 0D            [ 4] 2009 	dec	c
   0A47 71            [ 7] 2010 	ld	(hl),c
                           2011 ;src/main.c:438: prota.mover  = SI;
   0A48 21r3Ar00      [10] 2012 	ld	hl,#(_prota + 0x0006)
   0A4B 36 01         [10] 2013 	ld	(hl),#0x01
                           2014 ;src/main.c:439: prota.sprite = g_hero_up;
   0A4D 21r00r00      [10] 2015 	ld	hl,#_g_hero_up
   0A50 22r38r00      [16] 2016 	ld	((_prota + 0x0004)), hl
   0A53 C9            [10] 2017 	ret
                           2018 ;src/main.c:443: void moverAbajo() {
                           2019 ;	---------------------------------
                           2020 ; Function moverAbajo
                           2021 ; ---------------------------------
   0A54                    2022 _moverAbajo::
                           2023 ;src/main.c:444: prota.mira = M_abajo;
   0A54 21r3Br00      [10] 2024 	ld	hl,#(_prota + 0x0007)
   0A57 36 03         [10] 2025 	ld	(hl),#0x03
                           2026 ;src/main.c:445: if (!checkCollision(M_abajo) ) { 
   0A59 3E 03         [ 7] 2027 	ld	a,#0x03
   0A5B F5            [11] 2028 	push	af
   0A5C 33            [ 6] 2029 	inc	sp
   0A5D CDr3Br01      [17] 2030 	call	_checkCollision
   0A60 33            [ 6] 2031 	inc	sp
   0A61 7D            [ 4] 2032 	ld	a,l
   0A62 B7            [ 4] 2033 	or	a, a
   0A63 C0            [11] 2034 	ret	NZ
                           2035 ;src/main.c:446: prota.y++;
   0A64 01r35r00      [10] 2036 	ld	bc,#_prota + 1
   0A67 0A            [ 7] 2037 	ld	a,(bc)
   0A68 3C            [ 4] 2038 	inc	a
   0A69 02            [ 7] 2039 	ld	(bc),a
                           2040 ;src/main.c:447: prota.y++;
   0A6A 3C            [ 4] 2041 	inc	a
   0A6B 02            [ 7] 2042 	ld	(bc),a
                           2043 ;src/main.c:448: prota.mover  = SI;
   0A6C 21r3Ar00      [10] 2044 	ld	hl,#(_prota + 0x0006)
   0A6F 36 01         [10] 2045 	ld	(hl),#0x01
                           2046 ;src/main.c:449: prota.sprite = g_hero_down;
   0A71 21r00r00      [10] 2047 	ld	hl,#_g_hero_down
   0A74 22r38r00      [16] 2048 	ld	((_prota + 0x0004)), hl
   0A77 C9            [10] 2049 	ret
                           2050 ;src/main.c:456: void intHandler() {
                           2051 ;	---------------------------------
                           2052 ; Function intHandler
                           2053 ; ---------------------------------
   0A78                    2054 _intHandler::
                           2055 ;src/main.c:457: if (++i == 6) {
   0A78 21r46r00      [10] 2056 	ld	hl, #_i+0
   0A7B 34            [11] 2057 	inc	(hl)
   0A7C 3Ar46r00      [13] 2058 	ld	a,(#_i + 0)
   0A7F D6 06         [ 7] 2059 	sub	a, #0x06
   0A81 C0            [11] 2060 	ret	NZ
                           2061 ;src/main.c:458: play();
   0A82 CDr00r00      [17] 2062 	call	_play
                           2063 ;src/main.c:459: i=0;
   0A85 21r46r00      [10] 2064 	ld	hl,#_i + 0
   0A88 36 00         [10] 2065 	ld	(hl), #0x00
   0A8A C9            [10] 2066 	ret
                           2067 ;src/main.c:463: void inicializarCPC() {
                           2068 ;	---------------------------------
                           2069 ; Function inicializarCPC
                           2070 ; ---------------------------------
   0A8B                    2071 _inicializarCPC::
                           2072 ;src/main.c:464: cpct_disableFirmware();
   0A8B CDr00r00      [17] 2073 	call	_cpct_disableFirmware
                           2074 ;src/main.c:465: cpct_setVideoMode(0);
   0A8E 2E 00         [ 7] 2075 	ld	l,#0x00
   0A90 CDr00r00      [17] 2076 	call	_cpct_setVideoMode
                           2077 ;src/main.c:466: cpct_setBorder(HW_BLACK);
   0A93 21 10 14      [10] 2078 	ld	hl,#0x1410
   0A96 E5            [11] 2079 	push	hl
   0A97 CDr00r00      [17] 2080 	call	_cpct_setPALColour
                           2081 ;src/main.c:467: cpct_setPalette(g_palette, 16);
   0A9A 21 10 00      [10] 2082 	ld	hl,#0x0010
   0A9D E5            [11] 2083 	push	hl
   0A9E 21r00r00      [10] 2084 	ld	hl,#_g_palette
   0AA1 E5            [11] 2085 	push	hl
   0AA2 CDr00r00      [17] 2086 	call	_cpct_setPalette
                           2087 ;src/main.c:468: cpct_akp_musicInit(g_song);
   0AA5 21r00r00      [10] 2088 	ld	hl,#_g_song
   0AA8 E5            [11] 2089 	push	hl
   0AA9 CDr00r00      [17] 2090 	call	_cpct_akp_musicInit
   0AAC F1            [10] 2091 	pop	af
                           2092 ;src/main.c:469: cpct_setInterruptHandler(intHandler);
   0AAD 21r78r0A      [10] 2093 	ld	hl,#_intHandler
   0AB0 CDr00r00      [17] 2094 	call	_cpct_setInterruptHandler
   0AB3 C9            [10] 2095 	ret
                           2096 ;src/main.c:472: void inicializarJuego() {
                           2097 ;	---------------------------------
                           2098 ; Function inicializarJuego
                           2099 ; ---------------------------------
   0AB4                    2100 _inicializarJuego::
                           2101 ;src/main.c:474: num_mapa = 0;
   0AB4 21r02r00      [10] 2102 	ld	hl,#_num_mapa + 0
   0AB7 36 00         [10] 2103 	ld	(hl), #0x00
                           2104 ;src/main.c:475: mapa = mapas[num_mapa];
   0AB9 21r16r00      [10] 2105 	ld	hl, #_mapas + 0
   0ABC 7E            [ 7] 2106 	ld	a,(hl)
   0ABD FD 21r00r00   [14] 2107 	ld	iy,#_mapa
   0AC1 FD 77 00      [19] 2108 	ld	0 (iy),a
   0AC4 23            [ 6] 2109 	inc	hl
   0AC5 7E            [ 7] 2110 	ld	a,(hl)
   0AC6 32r01r00      [13] 2111 	ld	(#_mapa + 1),a
                           2112 ;src/main.c:476: cpct_etm_setTileset2x4(g_tileset);
   0AC9 21r00r00      [10] 2113 	ld	hl,#_g_tileset
   0ACC CDr00r00      [17] 2114 	call	_cpct_etm_setTileset2x4
                           2115 ;src/main.c:478: dibujarMapa();
   0ACF CDr00r00      [17] 2116 	call	_dibujarMapa
                           2117 ;src/main.c:481: barraPuntuacionInicial();
   0AD2 CDr00r00      [17] 2118 	call	_barraPuntuacionInicial
                           2119 ;src/main.c:484: prota.x = prota.px = 4;
   0AD5 21r36r00      [10] 2120 	ld	hl,#(_prota + 0x0002)
   0AD8 36 04         [10] 2121 	ld	(hl),#0x04
   0ADA 21r34r00      [10] 2122 	ld	hl,#_prota
   0ADD 36 04         [10] 2123 	ld	(hl),#0x04
                           2124 ;src/main.c:485: prota.y = prota.py = 80 + ORIGEN_MAPA_Y;
   0ADF 21r37r00      [10] 2125 	ld	hl,#(_prota + 0x0003)
   0AE2 36 68         [10] 2126 	ld	(hl),#0x68
   0AE4 21r35r00      [10] 2127 	ld	hl,#(_prota + 0x0001)
   0AE7 36 68         [10] 2128 	ld	(hl),#0x68
                           2129 ;src/main.c:486: prota.mover  = NO;
   0AE9 21r3Ar00      [10] 2130 	ld	hl,#(_prota + 0x0006)
   0AEC 36 00         [10] 2131 	ld	(hl),#0x00
                           2132 ;src/main.c:487: prota.mira=M_derecha;
   0AEE 21r3Br00      [10] 2133 	ld	hl,#(_prota + 0x0007)
   0AF1 36 00         [10] 2134 	ld	(hl),#0x00
                           2135 ;src/main.c:488: prota.sprite = g_hero;
   0AF3 21r00r00      [10] 2136 	ld	hl,#_g_hero
   0AF6 22r38r00      [16] 2137 	ld	((_prota + 0x0004)), hl
                           2138 ;src/main.c:492: cu.x = cu.px = 0;
   0AF9 21r3Er00      [10] 2139 	ld	hl,#(_cu + 0x0002)
   0AFC 36 00         [10] 2140 	ld	(hl),#0x00
   0AFE 21r3Cr00      [10] 2141 	ld	hl,#_cu
   0B01 36 00         [10] 2142 	ld	(hl),#0x00
                           2143 ;src/main.c:493: cu.y = cu.py = 0;
   0B03 21r3Fr00      [10] 2144 	ld	hl,#(_cu + 0x0003)
   0B06 36 00         [10] 2145 	ld	(hl),#0x00
   0B08 21r3Dr00      [10] 2146 	ld	hl,#(_cu + 0x0001)
   0B0B 36 00         [10] 2147 	ld	(hl),#0x00
                           2148 ;src/main.c:494: cu.lanzado = NO;
   0B0D 21r42r00      [10] 2149 	ld	hl,#(_cu + 0x0006)
   0B10 36 00         [10] 2150 	ld	(hl),#0x00
                           2151 ;src/main.c:495: cu.mover = NO;
   0B12 21r45r00      [10] 2152 	ld	hl,#(_cu + 0x0009)
   0B15 36 00         [10] 2153 	ld	(hl),#0x00
                           2154 ;src/main.c:497: inicializarEnemy();
   0B17 CDrFDr08      [17] 2155 	call	_inicializarEnemy
                           2156 ;src/main.c:499: dibujarProta();
   0B1A C3r26r00      [10] 2157 	jp  _dibujarProta
                           2158 ;src/main.c:502: void main(void) {
                           2159 ;	---------------------------------
                           2160 ; Function main
                           2161 ; ---------------------------------
   0B1D                    2162 _main::
   0B1D DD E5         [15] 2163 	push	ix
   0B1F DD 21 00 00   [14] 2164 	ld	ix,#0
   0B23 DD 39         [15] 2165 	add	ix,sp
   0B25 3B            [ 6] 2166 	dec	sp
                           2167 ;src/main.c:507: inicializarCPC();
   0B26 CDr8Br0A      [17] 2168 	call	_inicializarCPC
                           2169 ;src/main.c:509: menuInicio();
   0B29 CDr00r00      [17] 2170 	call	_menuInicio
                           2171 ;src/main.c:511: inicializarJuego();
   0B2C CDrB4r0A      [17] 2172 	call	_inicializarJuego
                           2173 ;src/main.c:515: while (1) {
   0B2F                    2174 00122$:
                           2175 ;src/main.c:517: i = (2 + num_mapa) + 1;
   0B2F 3Ar02r00      [13] 2176 	ld	a,(#_num_mapa + 0)
   0B32 C6 03         [ 7] 2177 	add	a, #0x03
   0B34 DD 77 FF      [19] 2178 	ld	-1 (ix),a
                           2179 ;src/main.c:518: actual = enemy;
                           2180 ;src/main.c:520: comprobarTeclado(&cu, &prota, mapa, g_tablatrans);
   0B37 21r00r2E      [10] 2181 	ld	hl,#_g_tablatrans
   0B3A E5            [11] 2182 	push	hl
   0B3B 2Ar00r00      [16] 2183 	ld	hl,(_mapa)
   0B3E E5            [11] 2184 	push	hl
   0B3F 21r34r00      [10] 2185 	ld	hl,#_prota
   0B42 E5            [11] 2186 	push	hl
   0B43 21r3Cr00      [10] 2187 	ld	hl,#_cu
   0B46 E5            [11] 2188 	push	hl
   0B47 CDrD4r00      [17] 2189 	call	_comprobarTeclado
   0B4A 21 08 00      [10] 2190 	ld	hl,#8
   0B4D 39            [11] 2191 	add	hl,sp
   0B4E F9            [ 6] 2192 	ld	sp,hl
                           2193 ;src/main.c:521: moverCuchillo(&cu, mapa);
   0B4F 2Ar00r00      [16] 2194 	ld	hl,(_mapa)
   0B52 E5            [11] 2195 	push	hl
   0B53 21r3Cr00      [10] 2196 	ld	hl,#_cu
   0B56 E5            [11] 2197 	push	hl
   0B57 CDr00r00      [17] 2198 	call	_moverCuchillo
   0B5A F1            [10] 2199 	pop	af
   0B5B F1            [10] 2200 	pop	af
                           2201 ;src/main.c:523: while(--i){
   0B5C 21r00r00      [10] 2202 	ld	hl,#_enemy
   0B5F DD 4E FF      [19] 2203 	ld	c,-1 (ix)
   0B62                    2204 00101$:
   0B62 0D            [ 4] 2205 	dec	c
   0B63 79            [ 4] 2206 	ld	a,c
   0B64 B7            [ 4] 2207 	or	a, a
   0B65 28 0F         [12] 2208 	jr	Z,00103$
                           2209 ;src/main.c:524: moverEnemigo(actual);
   0B67 E5            [11] 2210 	push	hl
   0B68 C5            [11] 2211 	push	bc
   0B69 E5            [11] 2212 	push	hl
   0B6A CDrB0r08      [17] 2213 	call	_moverEnemigo
   0B6D F1            [10] 2214 	pop	af
   0B6E C1            [10] 2215 	pop	bc
   0B6F E1            [10] 2216 	pop	hl
                           2217 ;src/main.c:525: ++actual;
   0B70 11 0D 00      [10] 2218 	ld	de,#0x000D
   0B73 19            [11] 2219 	add	hl,de
   0B74 18 EC         [12] 2220 	jr	00101$
   0B76                    2221 00103$:
                           2222 ;src/main.c:528: actual = enemy;
   0B76 01r00r00      [10] 2223 	ld	bc,#_enemy
                           2224 ;src/main.c:530: cpct_waitVSYNC();
   0B79 C5            [11] 2225 	push	bc
   0B7A CDr00r00      [17] 2226 	call	_cpct_waitVSYNC
   0B7D C1            [10] 2227 	pop	bc
                           2228 ;src/main.c:533: if (prota.mover) {
   0B7E 3Ar3Ar00      [13] 2229 	ld	a, (#(_prota + 0x0006) + 0)
   0B81 B7            [ 4] 2230 	or	a, a
   0B82 28 0A         [12] 2231 	jr	Z,00105$
                           2232 ;src/main.c:534: redibujarProta();
   0B84 C5            [11] 2233 	push	bc
   0B85 CDrC0r00      [17] 2234 	call	_redibujarProta
   0B88 C1            [10] 2235 	pop	bc
                           2236 ;src/main.c:535: prota.mover = NO;
   0B89 21r3Ar00      [10] 2237 	ld	hl,#(_prota + 0x0006)
   0B8C 36 00         [10] 2238 	ld	(hl),#0x00
   0B8E                    2239 00105$:
                           2240 ;src/main.c:537: if(cu.lanzado && cu.mover){
   0B8E 21r42r00      [10] 2241 	ld	hl, #(_cu + 0x0006) + 0
   0B91 5E            [ 7] 2242 	ld	e,(hl)
   0B92 7B            [ 4] 2243 	ld	a,e
   0B93 B7            [ 4] 2244 	or	a, a
   0B94 28 1E         [12] 2245 	jr	Z,00110$
   0B96 3Ar45r00      [13] 2246 	ld	a, (#(_cu + 0x0009) + 0)
   0B99 B7            [ 4] 2247 	or	a, a
   0B9A 28 18         [12] 2248 	jr	Z,00110$
                           2249 ;src/main.c:538: redibujarCuchillo(&cu, g_tablatrans, mapa);
   0B9C C5            [11] 2250 	push	bc
   0B9D 2Ar00r00      [16] 2251 	ld	hl,(_mapa)
   0BA0 E5            [11] 2252 	push	hl
   0BA1 21r00r2E      [10] 2253 	ld	hl,#_g_tablatrans
   0BA4 E5            [11] 2254 	push	hl
   0BA5 21r3Cr00      [10] 2255 	ld	hl,#_cu
   0BA8 E5            [11] 2256 	push	hl
   0BA9 CDr00r00      [17] 2257 	call	_redibujarCuchillo
   0BAC 21 06 00      [10] 2258 	ld	hl,#6
   0BAF 39            [11] 2259 	add	hl,sp
   0BB0 F9            [ 6] 2260 	ld	sp,hl
   0BB1 C1            [10] 2261 	pop	bc
   0BB2 18 23         [12] 2262 	jr	00137$
   0BB4                    2263 00110$:
                           2264 ;src/main.c:539: }else if (cu.lanzado && !cu.mover){
   0BB4 7B            [ 4] 2265 	ld	a,e
   0BB5 B7            [ 4] 2266 	or	a, a
   0BB6 28 1F         [12] 2267 	jr	Z,00137$
   0BB8 3Ar45r00      [13] 2268 	ld	a, (#(_cu + 0x0009) + 0)
   0BBB B7            [ 4] 2269 	or	a, a
   0BBC 20 19         [12] 2270 	jr	NZ,00137$
                           2271 ;src/main.c:540: borrarCuchillo(&cu, mapa);
   0BBE C5            [11] 2272 	push	bc
   0BBF 2Ar00r00      [16] 2273 	ld	hl,(_mapa)
   0BC2 E5            [11] 2274 	push	hl
   0BC3 21r3Cr00      [10] 2275 	ld	hl,#_cu
   0BC6 E5            [11] 2276 	push	hl
   0BC7 CDr00r00      [17] 2277 	call	_borrarCuchillo
   0BCA F1            [10] 2278 	pop	af
   0BCB F1            [10] 2279 	pop	af
   0BCC C1            [10] 2280 	pop	bc
                           2281 ;src/main.c:541: cu.x = 0;
   0BCD 21r3Cr00      [10] 2282 	ld	hl,#_cu
   0BD0 36 00         [10] 2283 	ld	(hl),#0x00
                           2284 ;src/main.c:542: cu.y = 0;
   0BD2 21r3Dr00      [10] 2285 	ld	hl,#(_cu + 0x0001)
   0BD5 36 00         [10] 2286 	ld	(hl),#0x00
                           2287 ;src/main.c:545: while(--i){
   0BD7                    2288 00137$:
   0BD7 DD 36 FF 05   [19] 2289 	ld	-1 (ix),#0x05
   0BDB                    2290 00118$:
   0BDB DD 35 FF      [23] 2291 	dec	-1 (ix)
   0BDE DD 7E FF      [19] 2292 	ld	a,-1 (ix)
   0BE1 B7            [ 4] 2293 	or	a, a
   0BE2 28 71         [12] 2294 	jr	Z,00120$
                           2295 ;src/main.c:546: if(actual->mover){
   0BE4 C5            [11] 2296 	push	bc
   0BE5 FD E1         [14] 2297 	pop	iy
   0BE7 FD 7E 06      [19] 2298 	ld	a,6 (iy)
   0BEA B7            [ 4] 2299 	or	a, a
   0BEB 28 07         [12] 2300 	jr	Z,00114$
                           2301 ;src/main.c:547: redibujarEnemigo(actual);
   0BED C5            [11] 2302 	push	bc
   0BEE C5            [11] 2303 	push	bc
   0BEF CDr24r04      [17] 2304 	call	_redibujarEnemigo
   0BF2 F1            [10] 2305 	pop	af
   0BF3 C1            [10] 2306 	pop	bc
   0BF4                    2307 00114$:
                           2308 ;src/main.c:549: if (actual->muerto && actual->muertes == 0){
   0BF4 C5            [11] 2309 	push	bc
   0BF5 FD E1         [14] 2310 	pop	iy
   0BF7 FD 7E 08      [19] 2311 	ld	a,8 (iy)
   0BFA B7            [ 4] 2312 	or	a, a
   0BFB 28 50         [12] 2313 	jr	Z,00116$
   0BFD 21 0C 00      [10] 2314 	ld	hl,#0x000C
   0C00 09            [11] 2315 	add	hl,bc
   0C01 EB            [ 4] 2316 	ex	de,hl
   0C02 1A            [ 7] 2317 	ld	a,(de)
   0C03 B7            [ 4] 2318 	or	a, a
   0C04 20 47         [12] 2319 	jr	NZ,00116$
                           2320 ;src/main.c:550: borrarEnemigo(actual);
   0C06 C5            [11] 2321 	push	bc
   0C07 D5            [11] 2322 	push	de
   0C08 C5            [11] 2323 	push	bc
   0C09 CDr90r03      [17] 2324 	call	_borrarEnemigo
   0C0C F1            [10] 2325 	pop	af
   0C0D D1            [10] 2326 	pop	de
   0C0E C1            [10] 2327 	pop	bc
                           2328 ;src/main.c:551: dibujarExplosion(actual);
   0C0F C5            [11] 2329 	push	bc
   0C10 D5            [11] 2330 	push	de
   0C11 C5            [11] 2331 	push	bc
   0C12 CDrE8r02      [17] 2332 	call	_dibujarExplosion
   0C15 F1            [10] 2333 	pop	af
   0C16 D1            [10] 2334 	pop	de
   0C17 C1            [10] 2335 	pop	bc
                           2336 ;src/main.c:552: puntuacion_aux = puntuacion;
   0C18 FD 21r03r00   [14] 2337 	ld	iy,#_puntuacion
   0C1C FD 6E 00      [19] 2338 	ld	l,0 (iy)
   0C1F 26 00         [ 7] 2339 	ld	h,#0x00
                           2340 ;src/main.c:553: puntuacion = aumentarPuntuacion(puntuacion_aux);
   0C21 C5            [11] 2341 	push	bc
   0C22 D5            [11] 2342 	push	de
   0C23 E5            [11] 2343 	push	hl
   0C24 CDr00r00      [17] 2344 	call	_aumentarPuntuacion
   0C27 F1            [10] 2345 	pop	af
   0C28 D1            [10] 2346 	pop	de
   0C29 C1            [10] 2347 	pop	bc
   0C2A FD 21r03r00   [14] 2348 	ld	iy,#_puntuacion
   0C2E FD 75 00      [19] 2349 	ld	0 (iy),l
                           2350 ;src/main.c:554: modificarPuntuacion(puntuacion);
   0C31 FD 21r03r00   [14] 2351 	ld	iy,#_puntuacion
   0C35 FD 6E 00      [19] 2352 	ld	l,0 (iy)
   0C38 26 00         [ 7] 2353 	ld	h,#0x00
   0C3A C5            [11] 2354 	push	bc
   0C3B D5            [11] 2355 	push	de
   0C3C E5            [11] 2356 	push	hl
   0C3D CDr00r00      [17] 2357 	call	_modificarPuntuacion
   0C40 F1            [10] 2358 	pop	af
   0C41 D1            [10] 2359 	pop	de
   0C42 C1            [10] 2360 	pop	bc
                           2361 ;src/main.c:556: actual->muertes++;
   0C43 1A            [ 7] 2362 	ld	a,(de)
   0C44 3C            [ 4] 2363 	inc	a
   0C45 12            [ 7] 2364 	ld	(de),a
                           2365 ;src/main.c:557: actual->x = 0;
   0C46 AF            [ 4] 2366 	xor	a, a
   0C47 02            [ 7] 2367 	ld	(bc),a
                           2368 ;src/main.c:558: actual->y = 0;
   0C48 59            [ 4] 2369 	ld	e, c
   0C49 50            [ 4] 2370 	ld	d, b
   0C4A 13            [ 6] 2371 	inc	de
   0C4B AF            [ 4] 2372 	xor	a, a
   0C4C 12            [ 7] 2373 	ld	(de),a
   0C4D                    2374 00116$:
                           2375 ;src/main.c:560: ++actual;
   0C4D 21 0D 00      [10] 2376 	ld	hl,#0x000D
   0C50 09            [11] 2377 	add	hl,bc
   0C51 4D            [ 4] 2378 	ld	c,l
   0C52 44            [ 4] 2379 	ld	b,h
   0C53 18 86         [12] 2380 	jr	00118$
   0C55                    2381 00120$:
                           2382 ;src/main.c:562: cpct_waitVSYNC();
   0C55 CDr00r00      [17] 2383 	call	_cpct_waitVSYNC
   0C58 C3r2Fr0B      [10] 2384 	jp	00122$
   0C5B 33            [ 6] 2385 	inc	sp
   0C5C DD E1         [14] 2386 	pop	ix
   0C5E C9            [10] 2387 	ret
                           2388 	.area _CODE
                           2389 	.area _INITIALIZER
   0000                    2390 __xinit__mapa:
   0000 00 00              2391 	.dw #0x0000
   0002                    2392 __xinit__num_mapa:
   0002 00                 2393 	.db #0x00	; 0
   0003                    2394 __xinit__puntuacion:
   0003 00                 2395 	.db #0x00	; 0
   0004                    2396 __xinit__vidas:
   0004 05                 2397 	.db #0x05	; 5
                           2398 	.area _CABS (ABS)
