                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.5 #9498 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module main
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _G_song
                             12 	.globl _main
                             13 	.globl _inicializarJuego
                             14 	.globl _inicializarEnemy
                             15 	.globl _inicializarCPC
                             16 	.globl _menuInicio
                             17 	.globl _borrarPantallaArriba
                             18 	.globl _barraPuntuacionInicial
                             19 	.globl _moverCuchillo
                             20 	.globl _checkKnifeCollision
                             21 	.globl _comprobarTeclado
                             22 	.globl _lanzarCuchillo
                             23 	.globl _redibujarCuchillo
                             24 	.globl _borrarCuchillo
                             25 	.globl _dibujarCuchillo
                             26 	.globl _moverAbajo
                             27 	.globl _moverArriba
                             28 	.globl _moverDerecha
                             29 	.globl _moverIzquierda
                             30 	.globl _avanzarMapa
                             31 	.globl _updateEnemies
                             32 	.globl _engage
                             33 	.globl _seek
                             34 	.globl _patrol
                             35 	.globl _lookFor
                             36 	.globl _moverEnemigo
                             37 	.globl _moverEnemigoPathfinding
                             38 	.globl _moverEnemigoIzquierda
                             39 	.globl _moverEnemigoDerecha
                             40 	.globl _moverEnemigoAbajo
                             41 	.globl _moverEnemigoArriba
                             42 	.globl _checkEnemyCollision
                             43 	.globl _redibujarEnemigo
                             44 	.globl _borrarEnemigo
                             45 	.globl _borrarExplosion
                             46 	.globl _dibujarExplosion
                             47 	.globl _dibujarEnemigo
                             48 	.globl _checkCollision
                             49 	.globl _getTilePtr
                             50 	.globl _redibujarProta
                             51 	.globl _menuFin
                             52 	.globl _borrarProta
                             53 	.globl _dibujarProta
                             54 	.globl _dibujarMapa
                             55 	.globl _pathFinding
                             56 	.globl _abs
                             57 	.globl _cpct_etm_setTileset2x4
                             58 	.globl _cpct_etm_drawTileBox2x4
                             59 	.globl _cpct_akp_musicPlay
                             60 	.globl _cpct_akp_musicInit
                             61 	.globl _cpct_getScreenPtr
                             62 	.globl _cpct_setPALColour
                             63 	.globl _cpct_setPalette
                             64 	.globl _cpct_waitVSYNC
                             65 	.globl _cpct_setVideoMode
                             66 	.globl _cpct_drawStringM0
                             67 	.globl _cpct_drawSpriteMaskedAlignedTable
                             68 	.globl _cpct_drawSolidBox
                             69 	.globl _cpct_drawSprite
                             70 	.globl _cpct_isAnyKeyPressed
                             71 	.globl _cpct_isKeyPressed
                             72 	.globl _cpct_scanKeyboard_if
                             73 	.globl _cpct_scanKeyboard_f
                             74 	.globl _cpct_memset
                             75 	.globl _cpct_disableFirmware
                             76 	.globl _num_mapa
                             77 	.globl _mapa
                             78 	.globl _iter
                             79 	.globl _cu
                             80 	.globl _prota
                             81 	.globl _enemy
                             82 	.globl _EEje
                             83 	.globl _EMirar
                             84 	.globl _spawnY
                             85 	.globl _spawnX
                             86 	.globl _mapas
                             87 ;--------------------------------------------------------
                             88 ; special function registers
                             89 ;--------------------------------------------------------
                             90 ;--------------------------------------------------------
                             91 ; ram data
                             92 ;--------------------------------------------------------
                             93 	.area _DATA
   0000                      94 _EMirar::
   0000                      95 	.ds 1
   0001                      96 _EEje::
   0001                      97 	.ds 1
   0002                      98 _enemy::
   0002                      99 	.ds 1296
   0512                     100 _prota::
   0512                     101 	.ds 8
   051A                     102 _cu::
   051A                     103 	.ds 10
   0524                     104 _iter::
   0524                     105 	.ds 1
   0525                     106 _mapa::
   0525                     107 	.ds 2
   0527                     108 _num_mapa::
   0527                     109 	.ds 1
                            110 ;--------------------------------------------------------
                            111 ; ram data
                            112 ;--------------------------------------------------------
                            113 	.area _INITIALIZED
                            114 ;--------------------------------------------------------
                            115 ; absolute external ram data
                            116 ;--------------------------------------------------------
                            117 	.area _DABS (ABS)
                            118 ;--------------------------------------------------------
                            119 ; global & static initialisations
                            120 ;--------------------------------------------------------
                            121 	.area _HOME
                            122 	.area _GSINIT
                            123 	.area _GSFINAL
                            124 	.area _GSINIT
                            125 ;--------------------------------------------------------
                            126 ; Home
                            127 ;--------------------------------------------------------
                            128 	.area _HOME
                            129 	.area _HOME
                            130 ;--------------------------------------------------------
                            131 ; code
                            132 ;--------------------------------------------------------
                            133 	.area _CODE
                            134 ;src/main.c:109: cpctm_createTransparentMaskTable(g_tablatrans, 0x0E00, M0, 0); // es el color 8 - 4D - FF00FF
                            135 ;	---------------------------------
                            136 ; Function dummy_cpct_transparentMaskTable0M0_container
                            137 ; ---------------------------------
   0000                     138 _dummy_cpct_transparentMaskTable0M0_container::
                            139 	.area _g_tablatrans_ (ABS) 
   0E00                     140 	.org 0x0E00 
   0E00                     141 	 _g_tablatrans::
   0E00 FF AA 55 00 AA AA   142 	.db 0xFF, 0xAA, 0x55, 0x00, 0xAA, 0xAA, 0x00, 0x00 
        00 00
   0E08 55 00 55 00 00 00   143 	.db 0x55, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E10 AA AA 00 00 AA AA   144 	.db 0xAA, 0xAA, 0x00, 0x00, 0xAA, 0xAA, 0x00, 0x00 
        00 00
   0E18 00 00 00 00 00 00   145 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E20 55 00 55 00 00 00   146 	.db 0x55, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E28 55 00 55 00 00 00   147 	.db 0x55, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E30 00 00 00 00 00 00   148 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E38 00 00 00 00 00 00   149 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E40 AA AA 00 00 AA AA   150 	.db 0xAA, 0xAA, 0x00, 0x00, 0xAA, 0xAA, 0x00, 0x00 
        00 00
   0E48 00 00 00 00 00 00   151 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E50 AA AA 00 00 AA AA   152 	.db 0xAA, 0xAA, 0x00, 0x00, 0xAA, 0xAA, 0x00, 0x00 
        00 00
   0E58 00 00 00 00 00 00   153 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E60 00 00 00 00 00 00   154 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E68 00 00 00 00 00 00   155 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E70 00 00 00 00 00 00   156 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E78 00 00 00 00 00 00   157 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E80 55 00 55 00 00 00   158 	.db 0x55, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E88 55 00 55 00 00 00   159 	.db 0x55, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E90 00 00 00 00 00 00   160 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0E98 00 00 00 00 00 00   161 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0EA0 55 00 55 00 00 00   162 	.db 0x55, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0EA8 55 00 55 00 00 00   163 	.db 0x55, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0EB0 00 00 00 00 00 00   164 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0EB8 00 00 00 00 00 00   165 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0EC0 00 00 00 00 00 00   166 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0EC8 00 00 00 00 00 00   167 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0ED0 00 00 00 00 00 00   168 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0ED8 00 00 00 00 00 00   169 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0EE0 00 00 00 00 00 00   170 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0EE8 00 00 00 00 00 00   171 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0EF0 00 00 00 00 00 00   172 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
   0EF8 00 00 00 00 00 00   173 	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
        00 00
                            174 	.area _CSEG (REL, CON) 
                            175 ;src/main.c:112: void dibujarMapa() {
                            176 ;	---------------------------------
                            177 ; Function dibujarMapa
                            178 ; ---------------------------------
   0000                     179 _dibujarMapa::
                            180 ;src/main.c:113: cpct_etm_drawTilemap2x4 (g_map1_W, g_map1_H, ORIGEN_MAPA, mapa);
   0000 2Ar25r05      [16]  181 	ld	hl,(_mapa)
   0003 E5            [11]  182 	push	hl
   0004 21 F0 C0      [10]  183 	ld	hl,#0xC0F0
   0007 E5            [11]  184 	push	hl
   0008 21 2C 28      [10]  185 	ld	hl,#0x282C
   000B E5            [11]  186 	push	hl
   000C 2E 00         [ 7]  187 	ld	l, #0x00
   000E E5            [11]  188 	push	hl
   000F AF            [ 4]  189 	xor	a, a
   0010 F5            [11]  190 	push	af
   0011 33            [ 6]  191 	inc	sp
   0012 CDr00r00      [17]  192 	call	_cpct_etm_drawTileBox2x4
   0015 C9            [10]  193 	ret
   0016                     194 _mapas:
   0016r00r00               195 	.dw _g_map1
   0018r00r00               196 	.dw _g_map2
   001Ar00r00               197 	.dw _g_map3
   001C                     198 _spawnX:
   001C 00                  199 	.db #0x00	; 0
   001D 3C                  200 	.db #0x3C	; 60
   001E 47                  201 	.db #0x47	; 71	'G'
   001F 14                  202 	.db #0x14	; 20
   0020 3C                  203 	.db #0x3C	; 60
   0021                     204 _spawnY:
   0021 00                  205 	.db #0x00	; 0
   0022 2C                  206 	.db #0x2C	; 44
   0023 72                  207 	.db #0x72	; 114	'r'
   0024 8A                  208 	.db #0x8A	; 138
   0025 8A                  209 	.db #0x8A	; 138
                            210 ;src/main.c:116: void dibujarProta() {
                            211 ;	---------------------------------
                            212 ; Function dibujarProta
                            213 ; ---------------------------------
   0026                     214 _dibujarProta::
                            215 ;src/main.c:117: u8* pvmem = cpct_getScreenPtr(CPCT_VMEM_START, prota.x, prota.y);
   0026 21r13r05      [10]  216 	ld	hl, #_prota + 1
   0029 56            [ 7]  217 	ld	d,(hl)
   002A 21r12r05      [10]  218 	ld	hl, #_prota + 0
   002D 46            [ 7]  219 	ld	b,(hl)
   002E D5            [11]  220 	push	de
   002F 33            [ 6]  221 	inc	sp
   0030 C5            [11]  222 	push	bc
   0031 33            [ 6]  223 	inc	sp
   0032 21 00 C0      [10]  224 	ld	hl,#0xC000
   0035 E5            [11]  225 	push	hl
   0036 CDr00r00      [17]  226 	call	_cpct_getScreenPtr
   0039 EB            [ 4]  227 	ex	de,hl
                            228 ;src/main.c:118: cpct_drawSpriteMaskedAlignedTable (prota.sprite, pvmem, G_HERO_W, G_HERO_H, g_tablatrans);
   003A ED 4Br16r05   [20]  229 	ld	bc, (#_prota + 4)
   003E 21r00r0E      [10]  230 	ld	hl,#_g_tablatrans
   0041 E5            [11]  231 	push	hl
   0042 21 07 16      [10]  232 	ld	hl,#0x1607
   0045 E5            [11]  233 	push	hl
   0046 D5            [11]  234 	push	de
   0047 C5            [11]  235 	push	bc
   0048 CDr00r00      [17]  236 	call	_cpct_drawSpriteMaskedAlignedTable
   004B C9            [10]  237 	ret
                            238 ;src/main.c:121: void borrarProta() {
                            239 ;	---------------------------------
                            240 ; Function borrarProta
                            241 ; ---------------------------------
   004C                     242 _borrarProta::
   004C DD E5         [15]  243 	push	ix
   004E DD 21 00 00   [14]  244 	ld	ix,#0
   0052 DD 39         [15]  245 	add	ix,sp
   0054 F5            [11]  246 	push	af
   0055 3B            [ 6]  247 	dec	sp
                            248 ;src/main.c:123: u8 w = 4 + (prota.px & 1);
   0056 21r14r05      [10]  249 	ld	hl, #_prota + 2
   0059 4E            [ 7]  250 	ld	c,(hl)
   005A 79            [ 4]  251 	ld	a,c
   005B E6 01         [ 7]  252 	and	a, #0x01
   005D 47            [ 4]  253 	ld	b,a
   005E 04            [ 4]  254 	inc	b
   005F 04            [ 4]  255 	inc	b
   0060 04            [ 4]  256 	inc	b
   0061 04            [ 4]  257 	inc	b
                            258 ;src/main.c:126: u8 h = 6 + (prota.py & 2 ? 1 : 0);
   0062 21r15r05      [10]  259 	ld	hl, #_prota + 3
   0065 5E            [ 7]  260 	ld	e,(hl)
   0066 CB 4B         [ 8]  261 	bit	1, e
   0068 28 04         [12]  262 	jr	Z,00103$
   006A 3E 01         [ 7]  263 	ld	a,#0x01
   006C 18 02         [12]  264 	jr	00104$
   006E                     265 00103$:
   006E 3E 00         [ 7]  266 	ld	a,#0x00
   0070                     267 00104$:
   0070 C6 06         [ 7]  268 	add	a, #0x06
   0072 DD 77 FD      [19]  269 	ld	-3 (ix),a
                            270 ;src/main.c:128: cpct_etm_drawTileBox2x4 (prota.px / 2, (prota.py - ORIGEN_MAPA_Y)/4, w, h, g_map1_W, ORIGEN_MAPA, mapa);
   0075 FD 2Ar25r05   [20]  271 	ld	iy,(_mapa)
   0079 16 00         [ 7]  272 	ld	d,#0x00
   007B 7B            [ 4]  273 	ld	a,e
   007C C6 E8         [ 7]  274 	add	a,#0xE8
   007E DD 77 FE      [19]  275 	ld	-2 (ix),a
   0081 7A            [ 4]  276 	ld	a,d
   0082 CE FF         [ 7]  277 	adc	a,#0xFF
   0084 DD 77 FF      [19]  278 	ld	-1 (ix),a
   0087 DD 6E FE      [19]  279 	ld	l,-2 (ix)
   008A DD 66 FF      [19]  280 	ld	h,-1 (ix)
   008D DD CB FF 7E   [20]  281 	bit	7, -1 (ix)
   0091 28 04         [12]  282 	jr	Z,00105$
   0093 21 EB FF      [10]  283 	ld	hl,#0xFFEB
   0096 19            [11]  284 	add	hl,de
   0097                     285 00105$:
   0097 CB 2C         [ 8]  286 	sra	h
   0099 CB 1D         [ 8]  287 	rr	l
   009B CB 2C         [ 8]  288 	sra	h
   009D CB 1D         [ 8]  289 	rr	l
   009F 55            [ 4]  290 	ld	d,l
   00A0 CB 39         [ 8]  291 	srl	c
   00A2 FD E5         [15]  292 	push	iy
   00A4 21 F0 C0      [10]  293 	ld	hl,#0xC0F0
   00A7 E5            [11]  294 	push	hl
   00A8 3E 28         [ 7]  295 	ld	a,#0x28
   00AA F5            [11]  296 	push	af
   00AB 33            [ 6]  297 	inc	sp
   00AC DD 7E FD      [19]  298 	ld	a,-3 (ix)
   00AF F5            [11]  299 	push	af
   00B0 33            [ 6]  300 	inc	sp
   00B1 C5            [11]  301 	push	bc
   00B2 33            [ 6]  302 	inc	sp
   00B3 D5            [11]  303 	push	de
   00B4 33            [ 6]  304 	inc	sp
   00B5 79            [ 4]  305 	ld	a,c
   00B6 F5            [11]  306 	push	af
   00B7 33            [ 6]  307 	inc	sp
   00B8 CDr00r00      [17]  308 	call	_cpct_etm_drawTileBox2x4
   00BB DD F9         [10]  309 	ld	sp, ix
   00BD DD E1         [14]  310 	pop	ix
   00BF C9            [10]  311 	ret
                            312 ;src/main.c:131: void menuFin(){
                            313 ;	---------------------------------
                            314 ; Function menuFin
                            315 ; ---------------------------------
   00C0                     316 _menuFin::
                            317 ;src/main.c:134: cpct_clearScreen(0);
   00C0 21 00 40      [10]  318 	ld	hl,#0x4000
   00C3 E5            [11]  319 	push	hl
   00C4 AF            [ 4]  320 	xor	a, a
   00C5 F5            [11]  321 	push	af
   00C6 33            [ 6]  322 	inc	sp
   00C7 26 C0         [ 7]  323 	ld	h, #0xC0
   00C9 E5            [11]  324 	push	hl
   00CA CDr00r00      [17]  325 	call	_cpct_memset
                            326 ;src/main.c:136: memptr = cpct_getScreenPtr(CPCT_VMEM_START, 24, 90); // centrado en horizontal y arriba en vertical
   00CD 21 18 5A      [10]  327 	ld	hl,#0x5A18
   00D0 E5            [11]  328 	push	hl
   00D1 21 00 C0      [10]  329 	ld	hl,#0xC000
   00D4 E5            [11]  330 	push	hl
   00D5 CDr00r00      [17]  331 	call	_cpct_getScreenPtr
   00D8 4D            [ 4]  332 	ld	c,l
   00D9 44            [ 4]  333 	ld	b,h
                            334 ;src/main.c:137: cpct_drawStringM0("GAME OVER", memptr, 2, 0);
   00DA 21 02 00      [10]  335 	ld	hl,#0x0002
   00DD E5            [11]  336 	push	hl
   00DE C5            [11]  337 	push	bc
   00DF 21rEDr00      [10]  338 	ld	hl,#___str_0
   00E2 E5            [11]  339 	push	hl
   00E3 CDr00r00      [17]  340 	call	_cpct_drawStringM0
   00E6 21 06 00      [10]  341 	ld	hl,#6
   00E9 39            [11]  342 	add	hl,sp
   00EA F9            [ 6]  343 	ld	sp,hl
                            344 ;src/main.c:139: while(1){}
   00EB                     345 00102$:
   00EB 18 FE         [12]  346 	jr	00102$
   00ED                     347 ___str_0:
   00ED 47 41 4D 45 20 4F   348 	.ascii "GAME OVER"
        56 45 52
   00F6 00                  349 	.db 0x00
                            350 ;src/main.c:142: void redibujarProta() {
                            351 ;	---------------------------------
                            352 ; Function redibujarProta
                            353 ; ---------------------------------
   00F7                     354 _redibujarProta::
                            355 ;src/main.c:143: borrarProta();
   00F7 CDr4Cr00      [17]  356 	call	_borrarProta
                            357 ;src/main.c:144: prota.px = prota.x;
   00FA 01r14r05      [10]  358 	ld	bc,#_prota + 2
   00FD 3Ar12r05      [13]  359 	ld	a, (#_prota + 0)
   0100 02            [ 7]  360 	ld	(bc),a
                            361 ;src/main.c:145: prota.py = prota.y;
   0101 01r15r05      [10]  362 	ld	bc,#_prota + 3
   0104 3Ar13r05      [13]  363 	ld	a, (#_prota + 1)
   0107 02            [ 7]  364 	ld	(bc),a
                            365 ;src/main.c:146: dibujarProta();
   0108 C3r26r00      [10]  366 	jp  _dibujarProta
                            367 ;src/main.c:149: u8* getTilePtr(u8 x, u8 y) {
                            368 ;	---------------------------------
                            369 ; Function getTilePtr
                            370 ; ---------------------------------
   010B                     371 _getTilePtr::
   010B DD E5         [15]  372 	push	ix
   010D DD 21 00 00   [14]  373 	ld	ix,#0
   0111 DD 39         [15]  374 	add	ix,sp
                            375 ;src/main.c:150: return mapa + ((y-ORIGEN_MAPA_Y)/4)*g_map1_W + x/2;
   0113 DD 4E 05      [19]  376 	ld	c,5 (ix)
   0116 06 00         [ 7]  377 	ld	b,#0x00
   0118 79            [ 4]  378 	ld	a,c
   0119 C6 E8         [ 7]  379 	add	a,#0xE8
   011B 5F            [ 4]  380 	ld	e,a
   011C 78            [ 4]  381 	ld	a,b
   011D CE FF         [ 7]  382 	adc	a,#0xFF
   011F 57            [ 4]  383 	ld	d,a
   0120 6B            [ 4]  384 	ld	l, e
   0121 62            [ 4]  385 	ld	h, d
   0122 CB 7A         [ 8]  386 	bit	7, d
   0124 28 04         [12]  387 	jr	Z,00103$
   0126 21 EB FF      [10]  388 	ld	hl,#0xFFEB
   0129 09            [11]  389 	add	hl,bc
   012A                     390 00103$:
   012A CB 2C         [ 8]  391 	sra	h
   012C CB 1D         [ 8]  392 	rr	l
   012E CB 2C         [ 8]  393 	sra	h
   0130 CB 1D         [ 8]  394 	rr	l
   0132 4D            [ 4]  395 	ld	c, l
   0133 44            [ 4]  396 	ld	b, h
   0134 29            [11]  397 	add	hl, hl
   0135 29            [11]  398 	add	hl, hl
   0136 09            [11]  399 	add	hl, bc
   0137 29            [11]  400 	add	hl, hl
   0138 29            [11]  401 	add	hl, hl
   0139 29            [11]  402 	add	hl, hl
   013A 4D            [ 4]  403 	ld	c,l
   013B 44            [ 4]  404 	ld	b,h
   013C 2Ar25r05      [16]  405 	ld	hl,(_mapa)
   013F 09            [11]  406 	add	hl,bc
   0140 DD 4E 04      [19]  407 	ld	c,4 (ix)
   0143 CB 39         [ 8]  408 	srl	c
   0145 59            [ 4]  409 	ld	e,c
   0146 16 00         [ 7]  410 	ld	d,#0x00
   0148 19            [11]  411 	add	hl,de
   0149 DD E1         [14]  412 	pop	ix
   014B C9            [10]  413 	ret
                            414 ;src/main.c:153: u8 checkCollision(int direction) { // check optimization
                            415 ;	---------------------------------
                            416 ; Function checkCollision
                            417 ; ---------------------------------
   014C                     418 _checkCollision::
   014C DD E5         [15]  419 	push	ix
   014E DD 21 00 00   [14]  420 	ld	ix,#0
   0152 DD 39         [15]  421 	add	ix,sp
   0154 F5            [11]  422 	push	af
                            423 ;src/main.c:154: u8 *headTile=0, *feetTile=0, *waistTile=0;
   0155 21 00 00      [10]  424 	ld	hl,#0x0000
   0158 E3            [19]  425 	ex	(sp), hl
   0159 11 00 00      [10]  426 	ld	de,#0x0000
   015C 01 00 00      [10]  427 	ld	bc,#0x0000
                            428 ;src/main.c:156: switch (direction) {
   015F DD CB 05 7E   [20]  429 	bit	7, 5 (ix)
   0163 C2r80r02      [10]  430 	jp	NZ,00105$
   0166 3E 03         [ 7]  431 	ld	a,#0x03
   0168 DD BE 04      [19]  432 	cp	a, 4 (ix)
   016B 3E 00         [ 7]  433 	ld	a,#0x00
   016D DD 9E 05      [19]  434 	sbc	a, 5 (ix)
   0170 E2r75r01      [10]  435 	jp	PO, 00128$
   0173 EE 80         [ 7]  436 	xor	a, #0x80
   0175                     437 00128$:
   0175 FAr80r02      [10]  438 	jp	M,00105$
   0178 DD 5E 04      [19]  439 	ld	e,4 (ix)
   017B 16 00         [ 7]  440 	ld	d,#0x00
   017D 21r84r01      [10]  441 	ld	hl,#00129$
   0180 19            [11]  442 	add	hl,de
   0181 19            [11]  443 	add	hl,de
   0182 19            [11]  444 	add	hl,de
   0183 E9            [ 4]  445 	jp	(hl)
   0184                     446 00129$:
   0184 C3r90r01      [10]  447 	jp	00101$
   0187 C3rDBr01      [10]  448 	jp	00102$
   018A C3r1Cr02      [10]  449 	jp	00103$
   018D C3r4Fr02      [10]  450 	jp	00104$
                            451 ;src/main.c:157: case 0:
   0190                     452 00101$:
                            453 ;src/main.c:158: headTile  = getTilePtr(prota.x + G_HERO_W - 3, prota.y);
   0190 21r13r05      [10]  454 	ld	hl, #(_prota + 0x0001) + 0
   0193 5E            [ 7]  455 	ld	e,(hl)
   0194 21r12r05      [10]  456 	ld	hl, #_prota + 0
   0197 4E            [ 7]  457 	ld	c,(hl)
   0198 0C            [ 4]  458 	inc	c
   0199 0C            [ 4]  459 	inc	c
   019A 0C            [ 4]  460 	inc	c
   019B 0C            [ 4]  461 	inc	c
   019C 7B            [ 4]  462 	ld	a,e
   019D F5            [11]  463 	push	af
   019E 33            [ 6]  464 	inc	sp
   019F 79            [ 4]  465 	ld	a,c
   01A0 F5            [11]  466 	push	af
   01A1 33            [ 6]  467 	inc	sp
   01A2 CDr0Br01      [17]  468 	call	_getTilePtr
   01A5 F1            [10]  469 	pop	af
   01A6 33            [ 6]  470 	inc	sp
   01A7 33            [ 6]  471 	inc	sp
   01A8 E5            [11]  472 	push	hl
                            473 ;src/main.c:159: feetTile  = getTilePtr(prota.x + G_HERO_W - 3, prota.y + ALTO_PROTA - 2);
   01A9 3Ar13r05      [13]  474 	ld	a, (#(_prota + 0x0001) + 0)
   01AC C6 14         [ 7]  475 	add	a, #0x14
   01AE 4F            [ 4]  476 	ld	c,a
   01AF 21r12r05      [10]  477 	ld	hl, #_prota + 0
   01B2 46            [ 7]  478 	ld	b,(hl)
   01B3 04            [ 4]  479 	inc	b
   01B4 04            [ 4]  480 	inc	b
   01B5 04            [ 4]  481 	inc	b
   01B6 04            [ 4]  482 	inc	b
   01B7 79            [ 4]  483 	ld	a,c
   01B8 F5            [11]  484 	push	af
   01B9 33            [ 6]  485 	inc	sp
   01BA C5            [11]  486 	push	bc
   01BB 33            [ 6]  487 	inc	sp
   01BC CDr0Br01      [17]  488 	call	_getTilePtr
   01BF F1            [10]  489 	pop	af
   01C0 EB            [ 4]  490 	ex	de,hl
                            491 ;src/main.c:160: waistTile = getTilePtr(prota.x + G_HERO_W - 3, prota.y + ALTO_PROTA/2);
   01C1 3Ar13r05      [13]  492 	ld	a, (#(_prota + 0x0001) + 0)
   01C4 C6 0B         [ 7]  493 	add	a, #0x0B
   01C6 47            [ 4]  494 	ld	b,a
   01C7 3Ar12r05      [13]  495 	ld	a, (#_prota + 0)
   01CA C6 04         [ 7]  496 	add	a, #0x04
   01CC D5            [11]  497 	push	de
   01CD C5            [11]  498 	push	bc
   01CE 33            [ 6]  499 	inc	sp
   01CF F5            [11]  500 	push	af
   01D0 33            [ 6]  501 	inc	sp
   01D1 CDr0Br01      [17]  502 	call	_getTilePtr
   01D4 F1            [10]  503 	pop	af
   01D5 4D            [ 4]  504 	ld	c,l
   01D6 44            [ 4]  505 	ld	b,h
   01D7 D1            [10]  506 	pop	de
                            507 ;src/main.c:161: break;
   01D8 C3r80r02      [10]  508 	jp	00105$
                            509 ;src/main.c:162: case 1:
   01DB                     510 00102$:
                            511 ;src/main.c:163: headTile  = getTilePtr(prota.x - 1, prota.y);
   01DB 21r13r05      [10]  512 	ld	hl, #(_prota + 0x0001) + 0
   01DE 56            [ 7]  513 	ld	d,(hl)
   01DF 21r12r05      [10]  514 	ld	hl, #_prota + 0
   01E2 46            [ 7]  515 	ld	b,(hl)
   01E3 05            [ 4]  516 	dec	b
   01E4 D5            [11]  517 	push	de
   01E5 33            [ 6]  518 	inc	sp
   01E6 C5            [11]  519 	push	bc
   01E7 33            [ 6]  520 	inc	sp
   01E8 CDr0Br01      [17]  521 	call	_getTilePtr
   01EB F1            [10]  522 	pop	af
   01EC 33            [ 6]  523 	inc	sp
   01ED 33            [ 6]  524 	inc	sp
   01EE E5            [11]  525 	push	hl
                            526 ;src/main.c:164: feetTile  = getTilePtr(prota.x - 1, prota.y + ALTO_PROTA - 2);
   01EF 3Ar13r05      [13]  527 	ld	a, (#(_prota + 0x0001) + 0)
   01F2 C6 14         [ 7]  528 	add	a, #0x14
   01F4 57            [ 4]  529 	ld	d,a
   01F5 21r12r05      [10]  530 	ld	hl, #_prota + 0
   01F8 46            [ 7]  531 	ld	b,(hl)
   01F9 05            [ 4]  532 	dec	b
   01FA D5            [11]  533 	push	de
   01FB 33            [ 6]  534 	inc	sp
   01FC C5            [11]  535 	push	bc
   01FD 33            [ 6]  536 	inc	sp
   01FE CDr0Br01      [17]  537 	call	_getTilePtr
   0201 F1            [10]  538 	pop	af
   0202 EB            [ 4]  539 	ex	de,hl
                            540 ;src/main.c:165: waistTile = getTilePtr(prota.x - 1, prota.y + ALTO_PROTA/2);
   0203 3Ar13r05      [13]  541 	ld	a, (#(_prota + 0x0001) + 0)
   0206 C6 0B         [ 7]  542 	add	a, #0x0B
   0208 47            [ 4]  543 	ld	b,a
   0209 3Ar12r05      [13]  544 	ld	a, (#_prota + 0)
   020C C6 FF         [ 7]  545 	add	a,#0xFF
   020E D5            [11]  546 	push	de
   020F C5            [11]  547 	push	bc
   0210 33            [ 6]  548 	inc	sp
   0211 F5            [11]  549 	push	af
   0212 33            [ 6]  550 	inc	sp
   0213 CDr0Br01      [17]  551 	call	_getTilePtr
   0216 F1            [10]  552 	pop	af
   0217 4D            [ 4]  553 	ld	c,l
   0218 44            [ 4]  554 	ld	b,h
   0219 D1            [10]  555 	pop	de
                            556 ;src/main.c:166: break;
   021A 18 64         [12]  557 	jr	00105$
                            558 ;src/main.c:167: case 2:
   021C                     559 00103$:
                            560 ;src/main.c:168: headTile   = getTilePtr(prota.x, prota.y - 2);
   021C 3Ar13r05      [13]  561 	ld	a, (#(_prota + 0x0001) + 0)
   021F C6 FE         [ 7]  562 	add	a,#0xFE
   0221 21r12r05      [10]  563 	ld	hl, #_prota + 0
   0224 56            [ 7]  564 	ld	d,(hl)
   0225 C5            [11]  565 	push	bc
   0226 F5            [11]  566 	push	af
   0227 33            [ 6]  567 	inc	sp
   0228 D5            [11]  568 	push	de
   0229 33            [ 6]  569 	inc	sp
   022A CDr0Br01      [17]  570 	call	_getTilePtr
   022D F1            [10]  571 	pop	af
   022E C1            [10]  572 	pop	bc
   022F 33            [ 6]  573 	inc	sp
   0230 33            [ 6]  574 	inc	sp
   0231 E5            [11]  575 	push	hl
                            576 ;src/main.c:169: feetTile   = getTilePtr(prota.x + G_HERO_W - 4, prota.y - 2);
   0232 21r13r05      [10]  577 	ld	hl, #(_prota + 0x0001) + 0
   0235 56            [ 7]  578 	ld	d,(hl)
   0236 15            [ 4]  579 	dec	d
   0237 15            [ 4]  580 	dec	d
   0238 3Ar12r05      [13]  581 	ld	a, (#_prota + 0)
   023B C6 03         [ 7]  582 	add	a, #0x03
   023D C5            [11]  583 	push	bc
   023E D5            [11]  584 	push	de
   023F 33            [ 6]  585 	inc	sp
   0240 F5            [11]  586 	push	af
   0241 33            [ 6]  587 	inc	sp
   0242 CDr0Br01      [17]  588 	call	_getTilePtr
   0245 F1            [10]  589 	pop	af
   0246 EB            [ 4]  590 	ex	de,hl
   0247 C1            [10]  591 	pop	bc
                            592 ;src/main.c:170: *waistTile = 0;
   0248 21 00 00      [10]  593 	ld	hl,#0x0000
   024B 36 00         [10]  594 	ld	(hl),#0x00
                            595 ;src/main.c:171: break;
   024D 18 31         [12]  596 	jr	00105$
                            597 ;src/main.c:172: case 3:
   024F                     598 00104$:
                            599 ;src/main.c:173: headTile  = getTilePtr(prota.x, prota.y + ALTO_PROTA  );
   024F 3Ar13r05      [13]  600 	ld	a, (#(_prota + 0x0001) + 0)
   0252 C6 16         [ 7]  601 	add	a, #0x16
   0254 21r12r05      [10]  602 	ld	hl, #_prota + 0
   0257 56            [ 7]  603 	ld	d,(hl)
   0258 C5            [11]  604 	push	bc
   0259 F5            [11]  605 	push	af
   025A 33            [ 6]  606 	inc	sp
   025B D5            [11]  607 	push	de
   025C 33            [ 6]  608 	inc	sp
   025D CDr0Br01      [17]  609 	call	_getTilePtr
   0260 F1            [10]  610 	pop	af
   0261 C1            [10]  611 	pop	bc
   0262 33            [ 6]  612 	inc	sp
   0263 33            [ 6]  613 	inc	sp
   0264 E5            [11]  614 	push	hl
                            615 ;src/main.c:174: feetTile  = getTilePtr(prota.x + G_HERO_W - 4, prota.y + ALTO_PROTA );
   0265 3Ar13r05      [13]  616 	ld	a, (#(_prota + 0x0001) + 0)
   0268 C6 16         [ 7]  617 	add	a, #0x16
   026A 57            [ 4]  618 	ld	d,a
   026B 3Ar12r05      [13]  619 	ld	a, (#_prota + 0)
   026E C6 03         [ 7]  620 	add	a, #0x03
   0270 C5            [11]  621 	push	bc
   0271 D5            [11]  622 	push	de
   0272 33            [ 6]  623 	inc	sp
   0273 F5            [11]  624 	push	af
   0274 33            [ 6]  625 	inc	sp
   0275 CDr0Br01      [17]  626 	call	_getTilePtr
   0278 F1            [10]  627 	pop	af
   0279 EB            [ 4]  628 	ex	de,hl
   027A C1            [10]  629 	pop	bc
                            630 ;src/main.c:175: *waistTile = 0;
   027B 21 00 00      [10]  631 	ld	hl,#0x0000
   027E 36 00         [10]  632 	ld	(hl),#0x00
                            633 ;src/main.c:177: }
   0280                     634 00105$:
                            635 ;src/main.c:179: if (*headTile > 2 || *feetTile > 2 || *waistTile > 2)
   0280 E1            [10]  636 	pop	hl
   0281 E5            [11]  637 	push	hl
   0282 6E            [ 7]  638 	ld	l,(hl)
   0283 3E 02         [ 7]  639 	ld	a,#0x02
   0285 95            [ 4]  640 	sub	a, l
   0286 38 0E         [12]  641 	jr	C,00106$
   0288 1A            [ 7]  642 	ld	a,(de)
   0289 5F            [ 4]  643 	ld	e,a
   028A 3E 02         [ 7]  644 	ld	a,#0x02
   028C 93            [ 4]  645 	sub	a, e
   028D 38 07         [12]  646 	jr	C,00106$
   028F 0A            [ 7]  647 	ld	a,(bc)
   0290 4F            [ 4]  648 	ld	c,a
   0291 3E 02         [ 7]  649 	ld	a,#0x02
   0293 91            [ 4]  650 	sub	a, c
   0294 30 04         [12]  651 	jr	NC,00107$
   0296                     652 00106$:
                            653 ;src/main.c:180: return 1;
   0296 2E 01         [ 7]  654 	ld	l,#0x01
   0298 18 02         [12]  655 	jr	00110$
   029A                     656 00107$:
                            657 ;src/main.c:182: return 0;
   029A 2E 00         [ 7]  658 	ld	l,#0x00
   029C                     659 00110$:
   029C DD F9         [10]  660 	ld	sp, ix
   029E DD E1         [14]  661 	pop	ix
   02A0 C9            [10]  662 	ret
                            663 ;src/main.c:185: void dibujarEnemigo(TEnemy *enemy) {
                            664 ;	---------------------------------
                            665 ; Function dibujarEnemigo
                            666 ; ---------------------------------
   02A1                     667 _dibujarEnemigo::
   02A1 DD E5         [15]  668 	push	ix
   02A3 DD 21 00 00   [14]  669 	ld	ix,#0
   02A7 DD 39         [15]  670 	add	ix,sp
                            671 ;src/main.c:186: u8* pvmem = cpct_getScreenPtr(CPCT_VMEM_START, enemy->x, enemy->y);
   02A9 DD 4E 04      [19]  672 	ld	c,4 (ix)
   02AC DD 46 05      [19]  673 	ld	b,5 (ix)
   02AF 69            [ 4]  674 	ld	l, c
   02B0 60            [ 4]  675 	ld	h, b
   02B1 23            [ 6]  676 	inc	hl
   02B2 56            [ 7]  677 	ld	d,(hl)
   02B3 0A            [ 7]  678 	ld	a,(bc)
   02B4 C5            [11]  679 	push	bc
   02B5 D5            [11]  680 	push	de
   02B6 33            [ 6]  681 	inc	sp
   02B7 F5            [11]  682 	push	af
   02B8 33            [ 6]  683 	inc	sp
   02B9 21 00 C0      [10]  684 	ld	hl,#0xC000
   02BC E5            [11]  685 	push	hl
   02BD CDr00r00      [17]  686 	call	_cpct_getScreenPtr
   02C0 EB            [ 4]  687 	ex	de,hl
                            688 ;src/main.c:187: cpct_drawSpriteMaskedAlignedTable (enemy->sprite, pvmem, G_ENEMY_W, G_ENEMY_H, g_tablatrans);
   02C1 E1            [10]  689 	pop	hl
   02C2 01 04 00      [10]  690 	ld	bc, #0x0004
   02C5 09            [11]  691 	add	hl, bc
   02C6 4E            [ 7]  692 	ld	c,(hl)
   02C7 23            [ 6]  693 	inc	hl
   02C8 46            [ 7]  694 	ld	b,(hl)
   02C9 21r00r0E      [10]  695 	ld	hl,#_g_tablatrans
   02CC E5            [11]  696 	push	hl
   02CD 21 04 16      [10]  697 	ld	hl,#0x1604
   02D0 E5            [11]  698 	push	hl
   02D1 D5            [11]  699 	push	de
   02D2 C5            [11]  700 	push	bc
   02D3 CDr00r00      [17]  701 	call	_cpct_drawSpriteMaskedAlignedTable
   02D6 DD E1         [14]  702 	pop	ix
   02D8 C9            [10]  703 	ret
                            704 ;src/main.c:190: void dibujarExplosion(TEnemy *enemy) {
                            705 ;	---------------------------------
                            706 ; Function dibujarExplosion
                            707 ; ---------------------------------
   02D9                     708 _dibujarExplosion::
   02D9 DD E5         [15]  709 	push	ix
   02DB DD 21 00 00   [14]  710 	ld	ix,#0
   02DF DD 39         [15]  711 	add	ix,sp
                            712 ;src/main.c:191: u8* pvmem = cpct_getScreenPtr(CPCT_VMEM_START, enemy->x, enemy->y);
   02E1 DD 4E 04      [19]  713 	ld	c,4 (ix)
   02E4 DD 46 05      [19]  714 	ld	b,5 (ix)
   02E7 69            [ 4]  715 	ld	l, c
   02E8 60            [ 4]  716 	ld	h, b
   02E9 23            [ 6]  717 	inc	hl
   02EA 56            [ 7]  718 	ld	d,(hl)
   02EB 0A            [ 7]  719 	ld	a,(bc)
   02EC 47            [ 4]  720 	ld	b,a
   02ED D5            [11]  721 	push	de
   02EE 33            [ 6]  722 	inc	sp
   02EF C5            [11]  723 	push	bc
   02F0 33            [ 6]  724 	inc	sp
   02F1 21 00 C0      [10]  725 	ld	hl,#0xC000
   02F4 E5            [11]  726 	push	hl
   02F5 CDr00r00      [17]  727 	call	_cpct_getScreenPtr
   02F8 4D            [ 4]  728 	ld	c,l
   02F9 44            [ 4]  729 	ld	b,h
                            730 ;src/main.c:192: cpct_drawSpriteMaskedAlignedTable (g_explosion, pvmem, G_EXPLOSION_W, G_EXPLOSION_H, g_tablatrans);
   02FA 11r00r0E      [10]  731 	ld	de,#_g_tablatrans+0
   02FD D5            [11]  732 	push	de
   02FE 21 04 16      [10]  733 	ld	hl,#0x1604
   0301 E5            [11]  734 	push	hl
   0302 C5            [11]  735 	push	bc
   0303 21r00r00      [10]  736 	ld	hl,#_g_explosion
   0306 E5            [11]  737 	push	hl
   0307 CDr00r00      [17]  738 	call	_cpct_drawSpriteMaskedAlignedTable
   030A DD E1         [14]  739 	pop	ix
   030C C9            [10]  740 	ret
                            741 ;src/main.c:195: void borrarExplosion() {
                            742 ;	---------------------------------
                            743 ; Function borrarExplosion
                            744 ; ---------------------------------
   030D                     745 _borrarExplosion::
   030D DD E5         [15]  746 	push	ix
   030F DD 21 00 00   [14]  747 	ld	ix,#0
   0313 DD 39         [15]  748 	add	ix,sp
   0315 F5            [11]  749 	push	af
   0316 3B            [ 6]  750 	dec	sp
                            751 ;src/main.c:196: u8 w = 4 + (enemy->px & 1);
   0317 21r04r00      [10]  752 	ld	hl, #_enemy + 2
   031A 4E            [ 7]  753 	ld	c,(hl)
   031B 79            [ 4]  754 	ld	a,c
   031C E6 01         [ 7]  755 	and	a, #0x01
   031E 47            [ 4]  756 	ld	b,a
   031F 04            [ 4]  757 	inc	b
   0320 04            [ 4]  758 	inc	b
   0321 04            [ 4]  759 	inc	b
   0322 04            [ 4]  760 	inc	b
                            761 ;src/main.c:199: u8 h = 7 + (enemy->py & 2 ? 1 : 0);
   0323 21r05r00      [10]  762 	ld	hl, #_enemy + 3
   0326 5E            [ 7]  763 	ld	e,(hl)
   0327 CB 4B         [ 8]  764 	bit	1, e
   0329 28 04         [12]  765 	jr	Z,00103$
   032B 3E 01         [ 7]  766 	ld	a,#0x01
   032D 18 02         [12]  767 	jr	00104$
   032F                     768 00103$:
   032F 3E 00         [ 7]  769 	ld	a,#0x00
   0331                     770 00104$:
   0331 C6 07         [ 7]  771 	add	a, #0x07
   0333 DD 77 FD      [19]  772 	ld	-3 (ix),a
                            773 ;src/main.c:201: cpct_etm_drawTileBox2x4 (enemy->px / 2, (enemy->py - ORIGEN_MAPA_Y)/4, w, h, g_map1_W, ORIGEN_MAPA, mapa);
   0336 FD 2Ar25r05   [20]  774 	ld	iy,(_mapa)
   033A 16 00         [ 7]  775 	ld	d,#0x00
   033C 7B            [ 4]  776 	ld	a,e
   033D C6 E8         [ 7]  777 	add	a,#0xE8
   033F DD 77 FE      [19]  778 	ld	-2 (ix),a
   0342 7A            [ 4]  779 	ld	a,d
   0343 CE FF         [ 7]  780 	adc	a,#0xFF
   0345 DD 77 FF      [19]  781 	ld	-1 (ix),a
   0348 DD 6E FE      [19]  782 	ld	l,-2 (ix)
   034B DD 66 FF      [19]  783 	ld	h,-1 (ix)
   034E DD CB FF 7E   [20]  784 	bit	7, -1 (ix)
   0352 28 04         [12]  785 	jr	Z,00105$
   0354 21 EB FF      [10]  786 	ld	hl,#0xFFEB
   0357 19            [11]  787 	add	hl,de
   0358                     788 00105$:
   0358 CB 2C         [ 8]  789 	sra	h
   035A CB 1D         [ 8]  790 	rr	l
   035C CB 2C         [ 8]  791 	sra	h
   035E CB 1D         [ 8]  792 	rr	l
   0360 55            [ 4]  793 	ld	d,l
   0361 CB 39         [ 8]  794 	srl	c
   0363 FD E5         [15]  795 	push	iy
   0365 21 F0 C0      [10]  796 	ld	hl,#0xC0F0
   0368 E5            [11]  797 	push	hl
   0369 3E 28         [ 7]  798 	ld	a,#0x28
   036B F5            [11]  799 	push	af
   036C 33            [ 6]  800 	inc	sp
   036D DD 7E FD      [19]  801 	ld	a,-3 (ix)
   0370 F5            [11]  802 	push	af
   0371 33            [ 6]  803 	inc	sp
   0372 C5            [11]  804 	push	bc
   0373 33            [ 6]  805 	inc	sp
   0374 D5            [11]  806 	push	de
   0375 33            [ 6]  807 	inc	sp
   0376 79            [ 4]  808 	ld	a,c
   0377 F5            [11]  809 	push	af
   0378 33            [ 6]  810 	inc	sp
   0379 CDr00r00      [17]  811 	call	_cpct_etm_drawTileBox2x4
   037C DD F9         [10]  812 	ld	sp, ix
   037E DD E1         [14]  813 	pop	ix
   0380 C9            [10]  814 	ret
                            815 ;src/main.c:205: void borrarEnemigo(TEnemy *enemy) {
                            816 ;	---------------------------------
                            817 ; Function borrarEnemigo
                            818 ; ---------------------------------
   0381                     819 _borrarEnemigo::
   0381 DD E5         [15]  820 	push	ix
   0383 DD 21 00 00   [14]  821 	ld	ix,#0
   0387 DD 39         [15]  822 	add	ix,sp
   0389 21 FA FF      [10]  823 	ld	hl,#-6
   038C 39            [11]  824 	add	hl,sp
   038D F9            [ 6]  825 	ld	sp,hl
                            826 ;src/main.c:207: u8 w = 4 + (enemy->px & 1);
   038E DD 4E 04      [19]  827 	ld	c,4 (ix)
   0391 DD 46 05      [19]  828 	ld	b,5 (ix)
   0394 69            [ 4]  829 	ld	l, c
   0395 60            [ 4]  830 	ld	h, b
   0396 23            [ 6]  831 	inc	hl
   0397 23            [ 6]  832 	inc	hl
   0398 5E            [ 7]  833 	ld	e,(hl)
   0399 7B            [ 4]  834 	ld	a,e
   039A E6 01         [ 7]  835 	and	a, #0x01
   039C C6 04         [ 7]  836 	add	a, #0x04
   039E DD 77 FA      [19]  837 	ld	-6 (ix),a
                            838 ;src/main.c:210: u8 h = 7 + (enemy->py & 2 ? 1 : 0);
   03A1 69            [ 4]  839 	ld	l, c
   03A2 60            [ 4]  840 	ld	h, b
   03A3 23            [ 6]  841 	inc	hl
   03A4 23            [ 6]  842 	inc	hl
   03A5 23            [ 6]  843 	inc	hl
   03A6 56            [ 7]  844 	ld	d,(hl)
   03A7 CB 4A         [ 8]  845 	bit	1, d
   03A9 28 04         [12]  846 	jr	Z,00103$
   03AB 3E 01         [ 7]  847 	ld	a,#0x01
   03AD 18 02         [12]  848 	jr	00104$
   03AF                     849 00103$:
   03AF 3E 00         [ 7]  850 	ld	a,#0x00
   03B1                     851 00104$:
   03B1 C6 07         [ 7]  852 	add	a, #0x07
   03B3 DD 77 FB      [19]  853 	ld	-5 (ix),a
                            854 ;src/main.c:212: cpct_etm_drawTileBox2x4 (enemy->px / 2, (enemy->py - ORIGEN_MAPA_Y)/4, w, h, g_map1_W, ORIGEN_MAPA, mapa);
   03B6 FD 2Ar25r05   [20]  855 	ld	iy,(_mapa)
   03BA DD 72 FE      [19]  856 	ld	-2 (ix),d
   03BD DD 36 FF 00   [19]  857 	ld	-1 (ix),#0x00
   03C1 DD 7E FE      [19]  858 	ld	a,-2 (ix)
   03C4 C6 E8         [ 7]  859 	add	a,#0xE8
   03C6 DD 77 FC      [19]  860 	ld	-4 (ix),a
   03C9 DD 7E FF      [19]  861 	ld	a,-1 (ix)
   03CC CE FF         [ 7]  862 	adc	a,#0xFF
   03CE DD 77 FD      [19]  863 	ld	-3 (ix),a
   03D1 DD 56 FC      [19]  864 	ld	d,-4 (ix)
   03D4 DD 6E FD      [19]  865 	ld	l,-3 (ix)
   03D7 DD CB FD 7E   [20]  866 	bit	7, -3 (ix)
   03DB 28 0C         [12]  867 	jr	Z,00105$
   03DD DD 7E FE      [19]  868 	ld	a,-2 (ix)
   03E0 C6 EB         [ 7]  869 	add	a, #0xEB
   03E2 57            [ 4]  870 	ld	d,a
   03E3 DD 7E FF      [19]  871 	ld	a,-1 (ix)
   03E6 CE FF         [ 7]  872 	adc	a, #0xFF
   03E8 6F            [ 4]  873 	ld	l,a
   03E9                     874 00105$:
   03E9 CB 2D         [ 8]  875 	sra	l
   03EB CB 1A         [ 8]  876 	rr	d
   03ED CB 2D         [ 8]  877 	sra	l
   03EF CB 1A         [ 8]  878 	rr	d
   03F1 CB 3B         [ 8]  879 	srl	e
   03F3 C5            [11]  880 	push	bc
   03F4 FD E5         [15]  881 	push	iy
   03F6 21 F0 C0      [10]  882 	ld	hl,#0xC0F0
   03F9 E5            [11]  883 	push	hl
   03FA 3E 28         [ 7]  884 	ld	a,#0x28
   03FC F5            [11]  885 	push	af
   03FD 33            [ 6]  886 	inc	sp
   03FE DD 66 FB      [19]  887 	ld	h,-5 (ix)
   0401 DD 6E FA      [19]  888 	ld	l,-6 (ix)
   0404 E5            [11]  889 	push	hl
   0405 D5            [11]  890 	push	de
   0406 CDr00r00      [17]  891 	call	_cpct_etm_drawTileBox2x4
   0409 C1            [10]  892 	pop	bc
                            893 ;src/main.c:214: enemy->mover = NO;
   040A 21 06 00      [10]  894 	ld	hl,#0x0006
   040D 09            [11]  895 	add	hl,bc
   040E 36 00         [10]  896 	ld	(hl),#0x00
   0410 DD F9         [10]  897 	ld	sp, ix
   0412 DD E1         [14]  898 	pop	ix
   0414 C9            [10]  899 	ret
                            900 ;src/main.c:217: void redibujarEnemigo(TEnemy *enemy) {
                            901 ;	---------------------------------
                            902 ; Function redibujarEnemigo
                            903 ; ---------------------------------
   0415                     904 _redibujarEnemigo::
   0415 DD E5         [15]  905 	push	ix
   0417 DD 21 00 00   [14]  906 	ld	ix,#0
   041B DD 39         [15]  907 	add	ix,sp
                            908 ;src/main.c:218: borrarEnemigo(enemy);
   041D DD 6E 04      [19]  909 	ld	l,4 (ix)
   0420 DD 66 05      [19]  910 	ld	h,5 (ix)
   0423 E5            [11]  911 	push	hl
   0424 CDr81r03      [17]  912 	call	_borrarEnemigo
   0427 F1            [10]  913 	pop	af
                            914 ;src/main.c:219: enemy->px = enemy->x;
   0428 DD 4E 04      [19]  915 	ld	c,4 (ix)
   042B DD 46 05      [19]  916 	ld	b,5 (ix)
   042E 59            [ 4]  917 	ld	e, c
   042F 50            [ 4]  918 	ld	d, b
   0430 13            [ 6]  919 	inc	de
   0431 13            [ 6]  920 	inc	de
   0432 0A            [ 7]  921 	ld	a,(bc)
   0433 12            [ 7]  922 	ld	(de),a
                            923 ;src/main.c:220: enemy->py = enemy->y;
   0434 59            [ 4]  924 	ld	e, c
   0435 50            [ 4]  925 	ld	d, b
   0436 13            [ 6]  926 	inc	de
   0437 13            [ 6]  927 	inc	de
   0438 13            [ 6]  928 	inc	de
   0439 69            [ 4]  929 	ld	l, c
   043A 60            [ 4]  930 	ld	h, b
   043B 23            [ 6]  931 	inc	hl
   043C 7E            [ 7]  932 	ld	a,(hl)
   043D 12            [ 7]  933 	ld	(de),a
                            934 ;src/main.c:221: dibujarEnemigo(enemy);
   043E C5            [11]  935 	push	bc
   043F CDrA1r02      [17]  936 	call	_dibujarEnemigo
   0442 F1            [10]  937 	pop	af
   0443 DD E1         [14]  938 	pop	ix
   0445 C9            [10]  939 	ret
                            940 ;src/main.c:224: u8 checkEnemyCollision(int direction, TEnemy *enemy){
                            941 ;	---------------------------------
                            942 ; Function checkEnemyCollision
                            943 ; ---------------------------------
   0446                     944 _checkEnemyCollision::
   0446 DD E5         [15]  945 	push	ix
   0448 DD 21 00 00   [14]  946 	ld	ix,#0
   044C DD 39         [15]  947 	add	ix,sp
   044E 21 F7 FF      [10]  948 	ld	hl,#-9
   0451 39            [11]  949 	add	hl,sp
   0452 F9            [ 6]  950 	ld	sp,hl
                            951 ;src/main.c:226: u8 colisiona = 1;
   0453 DD 36 F7 01   [19]  952 	ld	-9 (ix),#0x01
                            953 ;src/main.c:228: switch (direction) {
   0457 DD CB 05 7E   [20]  954 	bit	7, 5 (ix)
   045B C2r0Er08      [10]  955 	jp	NZ,00165$
   045E 3E 03         [ 7]  956 	ld	a,#0x03
   0460 DD BE 04      [19]  957 	cp	a, 4 (ix)
   0463 3E 00         [ 7]  958 	ld	a,#0x00
   0465 DD 9E 05      [19]  959 	sbc	a, 5 (ix)
   0468 E2r6Dr04      [10]  960 	jp	PO, 00272$
   046B EE 80         [ 7]  961 	xor	a, #0x80
   046D                     962 00272$:
   046D FAr0Er08      [10]  963 	jp	M,00165$
                            964 ;src/main.c:230: if( *getTilePtr(enemy->x + G_ENEMY_W + 1, enemy->y) <= 2
   0470 DD 4E 06      [19]  965 	ld	c,6 (ix)
   0473 DD 46 07      [19]  966 	ld	b,7 (ix)
   0476 0A            [ 7]  967 	ld	a,(bc)
   0477 5F            [ 4]  968 	ld	e,a
   0478 21 01 00      [10]  969 	ld	hl,#0x0001
   047B 09            [11]  970 	add	hl,bc
   047C DD 75 F8      [19]  971 	ld	-8 (ix),l
   047F DD 74 F9      [19]  972 	ld	-7 (ix),h
   0482 DD 6E F8      [19]  973 	ld	l,-8 (ix)
   0485 DD 66 F9      [19]  974 	ld	h,-7 (ix)
   0488 56            [ 7]  975 	ld	d,(hl)
                            976 ;src/main.c:243: enemy->muerto = SI;
   0489 21 08 00      [10]  977 	ld	hl,#0x0008
   048C 09            [11]  978 	add	hl,bc
   048D DD 75 FA      [19]  979 	ld	-6 (ix),l
   0490 DD 74 FB      [19]  980 	ld	-5 (ix),h
                            981 ;src/main.c:250: enemy->mira = M_izquierda;
   0493 21 07 00      [10]  982 	ld	hl,#0x0007
   0496 09            [11]  983 	add	hl,bc
   0497 DD 75 FC      [19]  984 	ld	-4 (ix),l
   049A DD 74 FD      [19]  985 	ld	-3 (ix),h
                            986 ;src/main.c:228: switch (direction) {
   049D D5            [11]  987 	push	de
   049E DD 5E 04      [19]  988 	ld	e,4 (ix)
   04A1 16 00         [ 7]  989 	ld	d,#0x00
   04A3 21rABr04      [10]  990 	ld	hl,#00273$
   04A6 19            [11]  991 	add	hl,de
   04A7 19            [11]  992 	add	hl,de
   04A8 19            [11]  993 	add	hl,de
   04A9 D1            [10]  994 	pop	de
   04AA E9            [ 4]  995 	jp	(hl)
   04AB                     996 00273$:
   04AB C3rB7r04      [10]  997 	jp	00101$
   04AE C3r90r05      [10]  998 	jp	00117$
   04B1 C3r65r06      [10]  999 	jp	00133$
   04B4 C3r34r07      [10] 1000 	jp	00149$
                           1001 ;src/main.c:229: case 0:
   04B7                    1002 00101$:
                           1003 ;src/main.c:230: if( *getTilePtr(enemy->x + G_ENEMY_W + 1, enemy->y) <= 2
   04B7 7B            [ 4] 1004 	ld	a,e
   04B8 C6 05         [ 7] 1005 	add	a, #0x05
   04BA C5            [11] 1006 	push	bc
   04BB D5            [11] 1007 	push	de
   04BC 33            [ 6] 1008 	inc	sp
   04BD F5            [11] 1009 	push	af
   04BE 33            [ 6] 1010 	inc	sp
   04BF CDr0Br01      [17] 1011 	call	_getTilePtr
   04C2 F1            [10] 1012 	pop	af
   04C3 C1            [10] 1013 	pop	bc
   04C4 5E            [ 7] 1014 	ld	e,(hl)
   04C5 3E 02         [ 7] 1015 	ld	a,#0x02
   04C7 93            [ 4] 1016 	sub	a, e
   04C8 DAr85r05      [10] 1017 	jp	C,00113$
                           1018 ;src/main.c:231: && *getTilePtr(enemy->x + G_ENEMY_W + 1, enemy->y + G_ENEMY_H/2) <= 2
   04CB DD 6E F8      [19] 1019 	ld	l,-8 (ix)
   04CE DD 66 F9      [19] 1020 	ld	h,-7 (ix)
   04D1 7E            [ 7] 1021 	ld	a,(hl)
   04D2 C6 0B         [ 7] 1022 	add	a, #0x0B
   04D4 57            [ 4] 1023 	ld	d,a
   04D5 0A            [ 7] 1024 	ld	a,(bc)
   04D6 C6 05         [ 7] 1025 	add	a, #0x05
   04D8 C5            [11] 1026 	push	bc
   04D9 D5            [11] 1027 	push	de
   04DA 33            [ 6] 1028 	inc	sp
   04DB F5            [11] 1029 	push	af
   04DC 33            [ 6] 1030 	inc	sp
   04DD CDr0Br01      [17] 1031 	call	_getTilePtr
   04E0 F1            [10] 1032 	pop	af
   04E1 C1            [10] 1033 	pop	bc
   04E2 5E            [ 7] 1034 	ld	e,(hl)
   04E3 3E 02         [ 7] 1035 	ld	a,#0x02
   04E5 93            [ 4] 1036 	sub	a, e
   04E6 DAr85r05      [10] 1037 	jp	C,00113$
                           1038 ;src/main.c:232: && *getTilePtr(enemy->x + G_ENEMY_W + 1, enemy->y + G_ENEMY_H) <= 2)
   04E9 DD 6E F8      [19] 1039 	ld	l,-8 (ix)
   04EC DD 66 F9      [19] 1040 	ld	h,-7 (ix)
   04EF 7E            [ 7] 1041 	ld	a,(hl)
   04F0 C6 16         [ 7] 1042 	add	a, #0x16
   04F2 57            [ 4] 1043 	ld	d,a
   04F3 0A            [ 7] 1044 	ld	a,(bc)
   04F4 C6 05         [ 7] 1045 	add	a, #0x05
   04F6 C5            [11] 1046 	push	bc
   04F7 D5            [11] 1047 	push	de
   04F8 33            [ 6] 1048 	inc	sp
   04F9 F5            [11] 1049 	push	af
   04FA 33            [ 6] 1050 	inc	sp
   04FB CDr0Br01      [17] 1051 	call	_getTilePtr
   04FE F1            [10] 1052 	pop	af
   04FF C1            [10] 1053 	pop	bc
   0500 5E            [ 7] 1054 	ld	e,(hl)
   0501 3E 02         [ 7] 1055 	ld	a,#0x02
   0503 93            [ 4] 1056 	sub	a, e
   0504 DAr85r05      [10] 1057 	jp	C,00113$
                           1058 ;src/main.c:234: if( (cu.y + G_KNIFEX_0_H) < enemy->y || cu.y  > (enemy->y + G_ENEMY_H) ){
   0507 21r1Br05      [10] 1059 	ld	hl, #_cu + 1
   050A 5E            [ 7] 1060 	ld	e,(hl)
   050B 16 00         [ 7] 1061 	ld	d,#0x00
   050D 21 04 00      [10] 1062 	ld	hl,#0x0004
   0510 19            [11] 1063 	add	hl,de
   0511 DD 75 FE      [19] 1064 	ld	-2 (ix),l
   0514 DD 74 FF      [19] 1065 	ld	-1 (ix),h
   0517 DD 6E F8      [19] 1066 	ld	l,-8 (ix)
   051A DD 66 F9      [19] 1067 	ld	h,-7 (ix)
   051D 6E            [ 7] 1068 	ld	l,(hl)
   051E 26 00         [ 7] 1069 	ld	h,#0x00
   0520 DD 7E FE      [19] 1070 	ld	a,-2 (ix)
   0523 95            [ 4] 1071 	sub	a, l
   0524 DD 7E FF      [19] 1072 	ld	a,-1 (ix)
   0527 9C            [ 4] 1073 	sbc	a, h
   0528 E2r2Dr05      [10] 1074 	jp	PO, 00274$
   052B EE 80         [ 7] 1075 	xor	a, #0x80
   052D                    1076 00274$:
   052D FAr42r05      [10] 1077 	jp	M,00108$
   0530 D5            [11] 1078 	push	de
   0531 11 16 00      [10] 1079 	ld	de,#0x0016
   0534 19            [11] 1080 	add	hl, de
   0535 D1            [10] 1081 	pop	de
   0536 7D            [ 4] 1082 	ld	a,l
   0537 93            [ 4] 1083 	sub	a, e
   0538 7C            [ 4] 1084 	ld	a,h
   0539 9A            [ 4] 1085 	sbc	a, d
   053A E2r3Fr05      [10] 1086 	jp	PO, 00275$
   053D EE 80         [ 7] 1087 	xor	a, #0x80
   053F                    1088 00275$:
   053F F2r49r05      [10] 1089 	jp	P,00109$
   0542                    1090 00108$:
                           1091 ;src/main.c:235: colisiona = 0;
   0542 DD 36 F7 00   [19] 1092 	ld	-9 (ix),#0x00
   0546 C3r0Er08      [10] 1093 	jp	00165$
   0549                    1094 00109$:
                           1095 ;src/main.c:238: if(cu.x > enemy->x){ //si el cu esta abajo
   0549 21r1Ar05      [10] 1096 	ld	hl, #_cu + 0
   054C 5E            [ 7] 1097 	ld	e,(hl)
   054D 0A            [ 7] 1098 	ld	a,(bc)
   054E 4F            [ 4] 1099 	ld	c,a
   054F 93            [ 4] 1100 	sub	a, e
   0550 30 2C         [12] 1101 	jr	NC,00106$
                           1102 ;src/main.c:239: if( cu.x - (enemy->x + G_ENEMY_W) > 1){ // si hay espacio entre el enemigo y el cu
   0552 6B            [ 4] 1103 	ld	l,e
   0553 26 00         [ 7] 1104 	ld	h,#0x00
   0555 06 00         [ 7] 1105 	ld	b,#0x00
   0557 03            [ 6] 1106 	inc	bc
   0558 03            [ 6] 1107 	inc	bc
   0559 03            [ 6] 1108 	inc	bc
   055A 03            [ 6] 1109 	inc	bc
   055B BF            [ 4] 1110 	cp	a, a
   055C ED 42         [15] 1111 	sbc	hl, bc
   055E 3E 01         [ 7] 1112 	ld	a,#0x01
   0560 BD            [ 4] 1113 	cp	a, l
   0561 3E 00         [ 7] 1114 	ld	a,#0x00
   0563 9C            [ 4] 1115 	sbc	a, h
   0564 E2r69r05      [10] 1116 	jp	PO, 00276$
   0567 EE 80         [ 7] 1117 	xor	a, #0x80
   0569                    1118 00276$:
   0569 F2r73r05      [10] 1119 	jp	P,00103$
                           1120 ;src/main.c:240: colisiona = 0;
   056C DD 36 F7 00   [19] 1121 	ld	-9 (ix),#0x00
   0570 C3r0Er08      [10] 1122 	jp	00165$
   0573                    1123 00103$:
                           1124 ;src/main.c:243: enemy->muerto = SI;
   0573 DD 6E FA      [19] 1125 	ld	l,-6 (ix)
   0576 DD 66 FB      [19] 1126 	ld	h,-5 (ix)
   0579 36 01         [10] 1127 	ld	(hl),#0x01
   057B C3r0Er08      [10] 1128 	jp	00165$
   057E                    1129 00106$:
                           1130 ;src/main.c:246: colisiona = 0;
   057E DD 36 F7 00   [19] 1131 	ld	-9 (ix),#0x00
   0582 C3r0Er08      [10] 1132 	jp	00165$
   0585                    1133 00113$:
                           1134 ;src/main.c:250: enemy->mira = M_izquierda;
   0585 DD 6E FC      [19] 1135 	ld	l,-4 (ix)
   0588 DD 66 FD      [19] 1136 	ld	h,-3 (ix)
   058B 36 01         [10] 1137 	ld	(hl),#0x01
                           1138 ;src/main.c:252: break;
   058D C3r0Er08      [10] 1139 	jp	00165$
                           1140 ;src/main.c:253: case 1:
   0590                    1141 00117$:
                           1142 ;src/main.c:254: if( *getTilePtr(enemy->x - 1, enemy->y) <= 2
   0590 1D            [ 4] 1143 	dec	e
   0591 C5            [11] 1144 	push	bc
   0592 D5            [11] 1145 	push	de
   0593 CDr0Br01      [17] 1146 	call	_getTilePtr
   0596 F1            [10] 1147 	pop	af
   0597 C1            [10] 1148 	pop	bc
   0598 5E            [ 7] 1149 	ld	e,(hl)
   0599 3E 02         [ 7] 1150 	ld	a,#0x02
   059B 93            [ 4] 1151 	sub	a, e
   059C DAr5Ar06      [10] 1152 	jp	C,00129$
                           1153 ;src/main.c:255: && *getTilePtr(enemy->x - 1, enemy->y + G_ENEMY_H/2) <= 2
   059F DD 6E F8      [19] 1154 	ld	l,-8 (ix)
   05A2 DD 66 F9      [19] 1155 	ld	h,-7 (ix)
   05A5 7E            [ 7] 1156 	ld	a,(hl)
   05A6 C6 0B         [ 7] 1157 	add	a, #0x0B
   05A8 57            [ 4] 1158 	ld	d,a
   05A9 0A            [ 7] 1159 	ld	a,(bc)
   05AA C6 FF         [ 7] 1160 	add	a,#0xFF
   05AC C5            [11] 1161 	push	bc
   05AD D5            [11] 1162 	push	de
   05AE 33            [ 6] 1163 	inc	sp
   05AF F5            [11] 1164 	push	af
   05B0 33            [ 6] 1165 	inc	sp
   05B1 CDr0Br01      [17] 1166 	call	_getTilePtr
   05B4 F1            [10] 1167 	pop	af
   05B5 C1            [10] 1168 	pop	bc
   05B6 5E            [ 7] 1169 	ld	e,(hl)
   05B7 3E 02         [ 7] 1170 	ld	a,#0x02
   05B9 93            [ 4] 1171 	sub	a, e
   05BA DAr5Ar06      [10] 1172 	jp	C,00129$
                           1173 ;src/main.c:256: && *getTilePtr(enemy->x - 1, enemy->y + G_ENEMY_H) <= 2)
   05BD DD 6E F8      [19] 1174 	ld	l,-8 (ix)
   05C0 DD 66 F9      [19] 1175 	ld	h,-7 (ix)
   05C3 7E            [ 7] 1176 	ld	a,(hl)
   05C4 C6 16         [ 7] 1177 	add	a, #0x16
   05C6 57            [ 4] 1178 	ld	d,a
   05C7 0A            [ 7] 1179 	ld	a,(bc)
   05C8 C6 FF         [ 7] 1180 	add	a,#0xFF
   05CA C5            [11] 1181 	push	bc
   05CB D5            [11] 1182 	push	de
   05CC 33            [ 6] 1183 	inc	sp
   05CD F5            [11] 1184 	push	af
   05CE 33            [ 6] 1185 	inc	sp
   05CF CDr0Br01      [17] 1186 	call	_getTilePtr
   05D2 F1            [10] 1187 	pop	af
   05D3 C1            [10] 1188 	pop	bc
   05D4 5E            [ 7] 1189 	ld	e,(hl)
   05D5 3E 02         [ 7] 1190 	ld	a,#0x02
   05D7 93            [ 4] 1191 	sub	a, e
   05D8 DAr5Ar06      [10] 1192 	jp	C,00129$
                           1193 ;src/main.c:258: if( (cu.y + G_KNIFEX_0_H) < enemy->y || cu.y  > (enemy->y + G_ENEMY_H) ){
   05DB 21r1Br05      [10] 1194 	ld	hl, #_cu + 1
   05DE 5E            [ 7] 1195 	ld	e,(hl)
   05DF 16 00         [ 7] 1196 	ld	d,#0x00
   05E1 21 04 00      [10] 1197 	ld	hl,#0x0004
   05E4 19            [11] 1198 	add	hl,de
   05E5 DD 75 FE      [19] 1199 	ld	-2 (ix),l
   05E8 DD 74 FF      [19] 1200 	ld	-1 (ix),h
   05EB DD 6E F8      [19] 1201 	ld	l,-8 (ix)
   05EE DD 66 F9      [19] 1202 	ld	h,-7 (ix)
   05F1 6E            [ 7] 1203 	ld	l,(hl)
   05F2 26 00         [ 7] 1204 	ld	h,#0x00
   05F4 DD 7E FE      [19] 1205 	ld	a,-2 (ix)
   05F7 95            [ 4] 1206 	sub	a, l
   05F8 DD 7E FF      [19] 1207 	ld	a,-1 (ix)
   05FB 9C            [ 4] 1208 	sbc	a, h
   05FC E2r01r06      [10] 1209 	jp	PO, 00277$
   05FF EE 80         [ 7] 1210 	xor	a, #0x80
   0601                    1211 00277$:
   0601 FAr16r06      [10] 1212 	jp	M,00124$
   0604 D5            [11] 1213 	push	de
   0605 11 16 00      [10] 1214 	ld	de,#0x0016
   0608 19            [11] 1215 	add	hl, de
   0609 D1            [10] 1216 	pop	de
   060A 7D            [ 4] 1217 	ld	a,l
   060B 93            [ 4] 1218 	sub	a, e
   060C 7C            [ 4] 1219 	ld	a,h
   060D 9A            [ 4] 1220 	sbc	a, d
   060E E2r13r06      [10] 1221 	jp	PO, 00278$
   0611 EE 80         [ 7] 1222 	xor	a, #0x80
   0613                    1223 00278$:
   0613 F2r1Dr06      [10] 1224 	jp	P,00125$
   0616                    1225 00124$:
                           1226 ;src/main.c:259: colisiona = 0;
   0616 DD 36 F7 00   [19] 1227 	ld	-9 (ix),#0x00
   061A C3r0Er08      [10] 1228 	jp	00165$
   061D                    1229 00125$:
                           1230 ;src/main.c:262: if(enemy->x > cu.x){ //si el cu esta abajo
   061D 0A            [ 7] 1231 	ld	a,(bc)
   061E 5F            [ 4] 1232 	ld	e,a
   061F 21r1Ar05      [10] 1233 	ld	hl, #_cu + 0
   0622 4E            [ 7] 1234 	ld	c,(hl)
   0623 79            [ 4] 1235 	ld	a,c
   0624 93            [ 4] 1236 	sub	a, e
   0625 30 2C         [12] 1237 	jr	NC,00122$
                           1238 ;src/main.c:263: if( enemy->x - (cu.x + G_KNIFEX_0_W) > 1){ // si hay espacio entre el enemigo y el cu
   0627 6B            [ 4] 1239 	ld	l,e
   0628 26 00         [ 7] 1240 	ld	h,#0x00
   062A 06 00         [ 7] 1241 	ld	b,#0x00
   062C 03            [ 6] 1242 	inc	bc
   062D 03            [ 6] 1243 	inc	bc
   062E 03            [ 6] 1244 	inc	bc
   062F 03            [ 6] 1245 	inc	bc
   0630 BF            [ 4] 1246 	cp	a, a
   0631 ED 42         [15] 1247 	sbc	hl, bc
   0633 3E 01         [ 7] 1248 	ld	a,#0x01
   0635 BD            [ 4] 1249 	cp	a, l
   0636 3E 00         [ 7] 1250 	ld	a,#0x00
   0638 9C            [ 4] 1251 	sbc	a, h
   0639 E2r3Er06      [10] 1252 	jp	PO, 00279$
   063C EE 80         [ 7] 1253 	xor	a, #0x80
   063E                    1254 00279$:
   063E F2r48r06      [10] 1255 	jp	P,00119$
                           1256 ;src/main.c:264: colisiona = 0;
   0641 DD 36 F7 00   [19] 1257 	ld	-9 (ix),#0x00
   0645 C3r0Er08      [10] 1258 	jp	00165$
   0648                    1259 00119$:
                           1260 ;src/main.c:267: enemy->muerto = SI;
   0648 DD 6E FA      [19] 1261 	ld	l,-6 (ix)
   064B DD 66 FB      [19] 1262 	ld	h,-5 (ix)
   064E 36 01         [10] 1263 	ld	(hl),#0x01
   0650 C3r0Er08      [10] 1264 	jp	00165$
   0653                    1265 00122$:
                           1266 ;src/main.c:270: colisiona = 0;
   0653 DD 36 F7 00   [19] 1267 	ld	-9 (ix),#0x00
   0657 C3r0Er08      [10] 1268 	jp	00165$
   065A                    1269 00129$:
                           1270 ;src/main.c:274: enemy->mira = M_derecha;
   065A DD 6E FC      [19] 1271 	ld	l,-4 (ix)
   065D DD 66 FD      [19] 1272 	ld	h,-3 (ix)
   0660 36 00         [10] 1273 	ld	(hl),#0x00
                           1274 ;src/main.c:276: break;
   0662 C3r0Er08      [10] 1275 	jp	00165$
                           1276 ;src/main.c:277: case 2:
   0665                    1277 00133$:
                           1278 ;src/main.c:278: if( *getTilePtr(enemy->x, enemy->y - 2) <= 2
   0665 15            [ 4] 1279 	dec	d
   0666 15            [ 4] 1280 	dec	d
   0667 C5            [11] 1281 	push	bc
   0668 D5            [11] 1282 	push	de
   0669 CDr0Br01      [17] 1283 	call	_getTilePtr
   066C F1            [10] 1284 	pop	af
   066D C1            [10] 1285 	pop	bc
   066E 5E            [ 7] 1286 	ld	e,(hl)
   066F 3E 02         [ 7] 1287 	ld	a,#0x02
   0671 93            [ 4] 1288 	sub	a, e
   0672 DAr2Cr07      [10] 1289 	jp	C,00145$
                           1290 ;src/main.c:279: && *getTilePtr(enemy->x + G_ENEMY_W / 2, enemy->y - 2) <= 2
   0675 DD 6E F8      [19] 1291 	ld	l,-8 (ix)
   0678 DD 66 F9      [19] 1292 	ld	h,-7 (ix)
   067B 56            [ 7] 1293 	ld	d,(hl)
   067C 15            [ 4] 1294 	dec	d
   067D 15            [ 4] 1295 	dec	d
   067E 0A            [ 7] 1296 	ld	a,(bc)
   067F C6 02         [ 7] 1297 	add	a, #0x02
   0681 C5            [11] 1298 	push	bc
   0682 D5            [11] 1299 	push	de
   0683 33            [ 6] 1300 	inc	sp
   0684 F5            [11] 1301 	push	af
   0685 33            [ 6] 1302 	inc	sp
   0686 CDr0Br01      [17] 1303 	call	_getTilePtr
   0689 F1            [10] 1304 	pop	af
   068A C1            [10] 1305 	pop	bc
   068B 5E            [ 7] 1306 	ld	e,(hl)
   068C 3E 02         [ 7] 1307 	ld	a,#0x02
   068E 93            [ 4] 1308 	sub	a, e
   068F DAr2Cr07      [10] 1309 	jp	C,00145$
                           1310 ;src/main.c:280: && *getTilePtr(enemy->x + G_ENEMY_W, enemy->y - 2) <= 2)
   0692 DD 6E F8      [19] 1311 	ld	l,-8 (ix)
   0695 DD 66 F9      [19] 1312 	ld	h,-7 (ix)
   0698 56            [ 7] 1313 	ld	d,(hl)
   0699 15            [ 4] 1314 	dec	d
   069A 15            [ 4] 1315 	dec	d
   069B 0A            [ 7] 1316 	ld	a,(bc)
   069C C6 04         [ 7] 1317 	add	a, #0x04
   069E C5            [11] 1318 	push	bc
   069F D5            [11] 1319 	push	de
   06A0 33            [ 6] 1320 	inc	sp
   06A1 F5            [11] 1321 	push	af
   06A2 33            [ 6] 1322 	inc	sp
   06A3 CDr0Br01      [17] 1323 	call	_getTilePtr
   06A6 F1            [10] 1324 	pop	af
   06A7 C1            [10] 1325 	pop	bc
   06A8 5E            [ 7] 1326 	ld	e,(hl)
   06A9 3E 02         [ 7] 1327 	ld	a,#0x02
   06AB 93            [ 4] 1328 	sub	a, e
   06AC DAr2Cr07      [10] 1329 	jp	C,00145$
                           1330 ;src/main.c:282: if((cu.x + G_KNIFEY_0_W) < enemy->x || cu.x  > (enemy->x + G_ENEMY_W)){
   06AF 21r1Ar05      [10] 1331 	ld	hl, #_cu + 0
   06B2 5E            [ 7] 1332 	ld	e,(hl)
   06B3 16 00         [ 7] 1333 	ld	d,#0x00
   06B5 21 02 00      [10] 1334 	ld	hl,#0x0002
   06B8 19            [11] 1335 	add	hl,de
   06B9 DD 75 FE      [19] 1336 	ld	-2 (ix),l
   06BC DD 74 FF      [19] 1337 	ld	-1 (ix),h
   06BF 0A            [ 7] 1338 	ld	a,(bc)
   06C0 6F            [ 4] 1339 	ld	l,a
   06C1 26 00         [ 7] 1340 	ld	h,#0x00
   06C3 DD 7E FE      [19] 1341 	ld	a,-2 (ix)
   06C6 95            [ 4] 1342 	sub	a, l
   06C7 DD 7E FF      [19] 1343 	ld	a,-1 (ix)
   06CA 9C            [ 4] 1344 	sbc	a, h
   06CB E2rD0r06      [10] 1345 	jp	PO, 00280$
   06CE EE 80         [ 7] 1346 	xor	a, #0x80
   06D0                    1347 00280$:
   06D0 FArE3r06      [10] 1348 	jp	M,00140$
   06D3 23            [ 6] 1349 	inc	hl
   06D4 23            [ 6] 1350 	inc	hl
   06D5 23            [ 6] 1351 	inc	hl
   06D6 23            [ 6] 1352 	inc	hl
   06D7 7D            [ 4] 1353 	ld	a,l
   06D8 93            [ 4] 1354 	sub	a, e
   06D9 7C            [ 4] 1355 	ld	a,h
   06DA 9A            [ 4] 1356 	sbc	a, d
   06DB E2rE0r06      [10] 1357 	jp	PO, 00281$
   06DE EE 80         [ 7] 1358 	xor	a, #0x80
   06E0                    1359 00281$:
   06E0 F2rE9r06      [10] 1360 	jp	P,00141$
   06E3                    1361 00140$:
                           1362 ;src/main.c:284: colisiona = 0;
   06E3 DD 36 F7 00   [19] 1363 	ld	-9 (ix),#0x00
   06E7 18 4B         [12] 1364 	jr	00149$
   06E9                    1365 00141$:
                           1366 ;src/main.c:287: if(enemy->y>cu.y){
   06E9 DD 6E F8      [19] 1367 	ld	l,-8 (ix)
   06EC DD 66 F9      [19] 1368 	ld	h,-7 (ix)
   06EF 5E            [ 7] 1369 	ld	e,(hl)
   06F0 21r1Br05      [10] 1370 	ld	hl, #(_cu + 0x0001) + 0
   06F3 6E            [ 7] 1371 	ld	l,(hl)
   06F4 7D            [ 4] 1372 	ld	a,l
   06F5 93            [ 4] 1373 	sub	a, e
   06F6 30 2E         [12] 1374 	jr	NC,00138$
                           1375 ;src/main.c:288: if(enemy->y - (cu.y + G_KNIFEY_0_H)  > 2){
   06F8 16 00         [ 7] 1376 	ld	d,#0x00
   06FA 26 00         [ 7] 1377 	ld	h,#0x00
   06FC D5            [11] 1378 	push	de
   06FD 11 08 00      [10] 1379 	ld	de,#0x0008
   0700 19            [11] 1380 	add	hl, de
   0701 D1            [10] 1381 	pop	de
   0702 7B            [ 4] 1382 	ld	a,e
   0703 95            [ 4] 1383 	sub	a, l
   0704 5F            [ 4] 1384 	ld	e,a
   0705 7A            [ 4] 1385 	ld	a,d
   0706 9C            [ 4] 1386 	sbc	a, h
   0707 57            [ 4] 1387 	ld	d,a
   0708 3E 02         [ 7] 1388 	ld	a,#0x02
   070A BB            [ 4] 1389 	cp	a, e
   070B 3E 00         [ 7] 1390 	ld	a,#0x00
   070D 9A            [ 4] 1391 	sbc	a, d
   070E E2r13r07      [10] 1392 	jp	PO, 00282$
   0711 EE 80         [ 7] 1393 	xor	a, #0x80
   0713                    1394 00282$:
   0713 F2r1Cr07      [10] 1395 	jp	P,00135$
                           1396 ;src/main.c:289: colisiona = 0;
   0716 DD 36 F7 00   [19] 1397 	ld	-9 (ix),#0x00
   071A 18 18         [12] 1398 	jr	00149$
   071C                    1399 00135$:
                           1400 ;src/main.c:292: enemy->muerto = SI;
   071C DD 6E FA      [19] 1401 	ld	l,-6 (ix)
   071F DD 66 FB      [19] 1402 	ld	h,-5 (ix)
   0722 36 01         [10] 1403 	ld	(hl),#0x01
   0724 18 0E         [12] 1404 	jr	00149$
   0726                    1405 00138$:
                           1406 ;src/main.c:296: colisiona = 0;
   0726 DD 36 F7 00   [19] 1407 	ld	-9 (ix),#0x00
   072A 18 08         [12] 1408 	jr	00149$
   072C                    1409 00145$:
                           1410 ;src/main.c:302: enemy->mira = M_abajo;
   072C DD 6E FC      [19] 1411 	ld	l,-4 (ix)
   072F DD 66 FD      [19] 1412 	ld	h,-3 (ix)
   0732 36 03         [10] 1413 	ld	(hl),#0x03
                           1414 ;src/main.c:305: case 3:
   0734                    1415 00149$:
                           1416 ;src/main.c:308: if( *getTilePtr(enemy->x, enemy->y + G_ENEMY_H + 2) <= 2
   0734 DD 6E F8      [19] 1417 	ld	l,-8 (ix)
   0737 DD 66 F9      [19] 1418 	ld	h,-7 (ix)
   073A 7E            [ 7] 1419 	ld	a,(hl)
   073B C6 18         [ 7] 1420 	add	a, #0x18
   073D 57            [ 4] 1421 	ld	d,a
   073E 0A            [ 7] 1422 	ld	a,(bc)
   073F C5            [11] 1423 	push	bc
   0740 D5            [11] 1424 	push	de
   0741 33            [ 6] 1425 	inc	sp
   0742 F5            [11] 1426 	push	af
   0743 33            [ 6] 1427 	inc	sp
   0744 CDr0Br01      [17] 1428 	call	_getTilePtr
   0747 F1            [10] 1429 	pop	af
   0748 C1            [10] 1430 	pop	bc
   0749 5E            [ 7] 1431 	ld	e,(hl)
   074A 3E 02         [ 7] 1432 	ld	a,#0x02
   074C 93            [ 4] 1433 	sub	a, e
   074D DAr06r08      [10] 1434 	jp	C,00161$
                           1435 ;src/main.c:309: && *getTilePtr(enemy->x + G_ENEMY_W / 2, enemy->y + G_ENEMY_H + 2) <= 2
   0750 DD 6E F8      [19] 1436 	ld	l,-8 (ix)
   0753 DD 66 F9      [19] 1437 	ld	h,-7 (ix)
   0756 7E            [ 7] 1438 	ld	a,(hl)
   0757 C6 18         [ 7] 1439 	add	a, #0x18
   0759 57            [ 4] 1440 	ld	d,a
   075A 0A            [ 7] 1441 	ld	a,(bc)
   075B C6 02         [ 7] 1442 	add	a, #0x02
   075D C5            [11] 1443 	push	bc
   075E D5            [11] 1444 	push	de
   075F 33            [ 6] 1445 	inc	sp
   0760 F5            [11] 1446 	push	af
   0761 33            [ 6] 1447 	inc	sp
   0762 CDr0Br01      [17] 1448 	call	_getTilePtr
   0765 F1            [10] 1449 	pop	af
   0766 C1            [10] 1450 	pop	bc
   0767 5E            [ 7] 1451 	ld	e,(hl)
   0768 3E 02         [ 7] 1452 	ld	a,#0x02
   076A 93            [ 4] 1453 	sub	a, e
   076B DAr06r08      [10] 1454 	jp	C,00161$
                           1455 ;src/main.c:310: && *getTilePtr(enemy->x + G_ENEMY_W, enemy->y + G_ENEMY_H + 2) <= 2)
   076E DD 6E F8      [19] 1456 	ld	l,-8 (ix)
   0771 DD 66 F9      [19] 1457 	ld	h,-7 (ix)
   0774 7E            [ 7] 1458 	ld	a,(hl)
   0775 C6 18         [ 7] 1459 	add	a, #0x18
   0777 57            [ 4] 1460 	ld	d,a
   0778 0A            [ 7] 1461 	ld	a,(bc)
   0779 C6 04         [ 7] 1462 	add	a, #0x04
   077B C5            [11] 1463 	push	bc
   077C D5            [11] 1464 	push	de
   077D 33            [ 6] 1465 	inc	sp
   077E F5            [11] 1466 	push	af
   077F 33            [ 6] 1467 	inc	sp
   0780 CDr0Br01      [17] 1468 	call	_getTilePtr
   0783 F1            [10] 1469 	pop	af
   0784 C1            [10] 1470 	pop	bc
   0785 5E            [ 7] 1471 	ld	e,(hl)
   0786 3E 02         [ 7] 1472 	ld	a,#0x02
   0788 93            [ 4] 1473 	sub	a, e
   0789 38 7B         [12] 1474 	jr	C,00161$
                           1475 ;src/main.c:312: if( (cu.x + G_KNIFEY_0_W) < enemy->x || cu.x  > (enemy->x + G_ENEMY_W) ){
   078B 21r1Ar05      [10] 1476 	ld	hl, #_cu + 0
   078E 5E            [ 7] 1477 	ld	e,(hl)
   078F 16 00         [ 7] 1478 	ld	d,#0x00
   0791 21 02 00      [10] 1479 	ld	hl,#0x0002
   0794 19            [11] 1480 	add	hl,de
   0795 DD 75 FE      [19] 1481 	ld	-2 (ix),l
   0798 DD 74 FF      [19] 1482 	ld	-1 (ix),h
   079B 0A            [ 7] 1483 	ld	a,(bc)
   079C 4F            [ 4] 1484 	ld	c,a
   079D 06 00         [ 7] 1485 	ld	b,#0x00
   079F DD 7E FE      [19] 1486 	ld	a,-2 (ix)
   07A2 91            [ 4] 1487 	sub	a, c
   07A3 DD 7E FF      [19] 1488 	ld	a,-1 (ix)
   07A6 98            [ 4] 1489 	sbc	a, b
   07A7 E2rACr07      [10] 1490 	jp	PO, 00283$
   07AA EE 80         [ 7] 1491 	xor	a, #0x80
   07AC                    1492 00283$:
   07AC FArBFr07      [10] 1493 	jp	M,00156$
   07AF 03            [ 6] 1494 	inc	bc
   07B0 03            [ 6] 1495 	inc	bc
   07B1 03            [ 6] 1496 	inc	bc
   07B2 03            [ 6] 1497 	inc	bc
   07B3 79            [ 4] 1498 	ld	a,c
   07B4 93            [ 4] 1499 	sub	a, e
   07B5 78            [ 4] 1500 	ld	a,b
   07B6 9A            [ 4] 1501 	sbc	a, d
   07B7 E2rBCr07      [10] 1502 	jp	PO, 00284$
   07BA EE 80         [ 7] 1503 	xor	a, #0x80
   07BC                    1504 00284$:
   07BC F2rC5r07      [10] 1505 	jp	P,00157$
   07BF                    1506 00156$:
                           1507 ;src/main.c:313: colisiona = 0;
   07BF DD 36 F7 00   [19] 1508 	ld	-9 (ix),#0x00
   07C3 18 49         [12] 1509 	jr	00165$
   07C5                    1510 00157$:
                           1511 ;src/main.c:316: if(cu.y > enemy->y){ //si el cu esta abajo
   07C5 21r1Br05      [10] 1512 	ld	hl, #(_cu + 0x0001) + 0
   07C8 4E            [ 7] 1513 	ld	c,(hl)
   07C9 DD 6E F8      [19] 1514 	ld	l,-8 (ix)
   07CC DD 66 F9      [19] 1515 	ld	h,-7 (ix)
   07CF 5E            [ 7] 1516 	ld	e,(hl)
   07D0 7B            [ 4] 1517 	ld	a,e
   07D1 91            [ 4] 1518 	sub	a, c
   07D2 30 2C         [12] 1519 	jr	NC,00154$
                           1520 ;src/main.c:317: if( cu.y - (enemy->y + G_ENEMY_H)  > 2){ // si hay espacio entre el enemigo y el cu
   07D4 06 00         [ 7] 1521 	ld	b,#0x00
   07D6 16 00         [ 7] 1522 	ld	d,#0x00
   07D8 21 16 00      [10] 1523 	ld	hl,#0x0016
   07DB 19            [11] 1524 	add	hl,de
   07DC 79            [ 4] 1525 	ld	a,c
   07DD 95            [ 4] 1526 	sub	a, l
   07DE 4F            [ 4] 1527 	ld	c,a
   07DF 78            [ 4] 1528 	ld	a,b
   07E0 9C            [ 4] 1529 	sbc	a, h
   07E1 47            [ 4] 1530 	ld	b,a
   07E2 3E 02         [ 7] 1531 	ld	a,#0x02
   07E4 B9            [ 4] 1532 	cp	a, c
   07E5 3E 00         [ 7] 1533 	ld	a,#0x00
   07E7 98            [ 4] 1534 	sbc	a, b
   07E8 E2rEDr07      [10] 1535 	jp	PO, 00285$
   07EB EE 80         [ 7] 1536 	xor	a, #0x80
   07ED                    1537 00285$:
   07ED F2rF6r07      [10] 1538 	jp	P,00151$
                           1539 ;src/main.c:318: colisiona = 0;
   07F0 DD 36 F7 00   [19] 1540 	ld	-9 (ix),#0x00
   07F4 18 18         [12] 1541 	jr	00165$
   07F6                    1542 00151$:
                           1543 ;src/main.c:321: enemy->muerto = SI;
   07F6 DD 6E FA      [19] 1544 	ld	l,-6 (ix)
   07F9 DD 66 FB      [19] 1545 	ld	h,-5 (ix)
   07FC 36 01         [10] 1546 	ld	(hl),#0x01
   07FE 18 0E         [12] 1547 	jr	00165$
   0800                    1548 00154$:
                           1549 ;src/main.c:325: colisiona = 0;
   0800 DD 36 F7 00   [19] 1550 	ld	-9 (ix),#0x00
   0804 18 08         [12] 1551 	jr	00165$
   0806                    1552 00161$:
                           1553 ;src/main.c:329: enemy->mira = M_arriba;
   0806 DD 6E FC      [19] 1554 	ld	l,-4 (ix)
   0809 DD 66 FD      [19] 1555 	ld	h,-3 (ix)
   080C 36 02         [10] 1556 	ld	(hl),#0x02
                           1557 ;src/main.c:332: }
   080E                    1558 00165$:
                           1559 ;src/main.c:333: return colisiona;
   080E DD 6E F7      [19] 1560 	ld	l,-9 (ix)
   0811 DD F9         [10] 1561 	ld	sp, ix
   0813 DD E1         [14] 1562 	pop	ix
   0815 C9            [10] 1563 	ret
                           1564 ;src/main.c:336: void moverEnemigoArriba(TEnemy *enemy){
                           1565 ;	---------------------------------
                           1566 ; Function moverEnemigoArriba
                           1567 ; ---------------------------------
   0816                    1568 _moverEnemigoArriba::
   0816 DD E5         [15] 1569 	push	ix
   0818 DD 21 00 00   [14] 1570 	ld	ix,#0
   081C DD 39         [15] 1571 	add	ix,sp
                           1572 ;src/main.c:337: enemy->y--;
   081E DD 4E 04      [19] 1573 	ld	c,4 (ix)
   0821 DD 46 05      [19] 1574 	ld	b,5 (ix)
   0824 69            [ 4] 1575 	ld	l, c
   0825 60            [ 4] 1576 	ld	h, b
   0826 23            [ 6] 1577 	inc	hl
   0827 5E            [ 7] 1578 	ld	e,(hl)
   0828 1D            [ 4] 1579 	dec	e
   0829 73            [ 7] 1580 	ld	(hl),e
                           1581 ;src/main.c:338: enemy->y--;
   082A 1D            [ 4] 1582 	dec	e
   082B 73            [ 7] 1583 	ld	(hl),e
                           1584 ;src/main.c:339: enemy->mover = SI;
   082C 21 06 00      [10] 1585 	ld	hl,#0x0006
   082F 09            [11] 1586 	add	hl,bc
   0830 36 01         [10] 1587 	ld	(hl),#0x01
   0832 DD E1         [14] 1588 	pop	ix
   0834 C9            [10] 1589 	ret
                           1590 ;src/main.c:342: void moverEnemigoAbajo(TEnemy *enemy){
                           1591 ;	---------------------------------
                           1592 ; Function moverEnemigoAbajo
                           1593 ; ---------------------------------
   0835                    1594 _moverEnemigoAbajo::
   0835 DD E5         [15] 1595 	push	ix
   0837 DD 21 00 00   [14] 1596 	ld	ix,#0
   083B DD 39         [15] 1597 	add	ix,sp
                           1598 ;src/main.c:343: enemy->y++;
   083D DD 4E 04      [19] 1599 	ld	c,4 (ix)
   0840 DD 46 05      [19] 1600 	ld	b,5 (ix)
   0843 59            [ 4] 1601 	ld	e, c
   0844 50            [ 4] 1602 	ld	d, b
   0845 13            [ 6] 1603 	inc	de
   0846 1A            [ 7] 1604 	ld	a,(de)
   0847 3C            [ 4] 1605 	inc	a
   0848 12            [ 7] 1606 	ld	(de),a
                           1607 ;src/main.c:344: enemy->y++;
   0849 3C            [ 4] 1608 	inc	a
   084A 12            [ 7] 1609 	ld	(de),a
                           1610 ;src/main.c:345: enemy->mover = SI;
   084B 21 06 00      [10] 1611 	ld	hl,#0x0006
   084E 09            [11] 1612 	add	hl,bc
   084F 36 01         [10] 1613 	ld	(hl),#0x01
   0851 DD E1         [14] 1614 	pop	ix
   0853 C9            [10] 1615 	ret
                           1616 ;src/main.c:348: void moverEnemigoDerecha(TEnemy *enemy){
                           1617 ;	---------------------------------
                           1618 ; Function moverEnemigoDerecha
                           1619 ; ---------------------------------
   0854                    1620 _moverEnemigoDerecha::
                           1621 ;src/main.c:349: enemy->x++;
   0854 D1            [10] 1622 	pop	de
   0855 C1            [10] 1623 	pop	bc
   0856 C5            [11] 1624 	push	bc
   0857 D5            [11] 1625 	push	de
   0858 0A            [ 7] 1626 	ld	a,(bc)
   0859 3C            [ 4] 1627 	inc	a
   085A 02            [ 7] 1628 	ld	(bc),a
                           1629 ;src/main.c:350: enemy->x++;
   085B 3C            [ 4] 1630 	inc	a
   085C 02            [ 7] 1631 	ld	(bc),a
                           1632 ;src/main.c:351: enemy->mover = SI;
   085D 21 06 00      [10] 1633 	ld	hl,#0x0006
   0860 09            [11] 1634 	add	hl,bc
   0861 36 01         [10] 1635 	ld	(hl),#0x01
   0863 C9            [10] 1636 	ret
                           1637 ;src/main.c:354: void moverEnemigoIzquierda(TEnemy *enemy){
                           1638 ;	---------------------------------
                           1639 ; Function moverEnemigoIzquierda
                           1640 ; ---------------------------------
   0864                    1641 _moverEnemigoIzquierda::
                           1642 ;src/main.c:355: enemy->x--;
   0864 D1            [10] 1643 	pop	de
   0865 C1            [10] 1644 	pop	bc
   0866 C5            [11] 1645 	push	bc
   0867 D5            [11] 1646 	push	de
   0868 0A            [ 7] 1647 	ld	a,(bc)
   0869 C6 FF         [ 7] 1648 	add	a,#0xFF
   086B 02            [ 7] 1649 	ld	(bc),a
                           1650 ;src/main.c:356: enemy->x--;
   086C C6 FF         [ 7] 1651 	add	a,#0xFF
   086E 02            [ 7] 1652 	ld	(bc),a
                           1653 ;src/main.c:357: enemy->mover = SI;
   086F 21 06 00      [10] 1654 	ld	hl,#0x0006
   0872 09            [11] 1655 	add	hl,bc
   0873 36 01         [10] 1656 	ld	(hl),#0x01
   0875 C9            [10] 1657 	ret
                           1658 ;src/main.c:360: void moverEnemigoPathfinding(TEnemy *enemy){
                           1659 ;	---------------------------------
                           1660 ; Function moverEnemigoPathfinding
                           1661 ; ---------------------------------
   0876                    1662 _moverEnemigoPathfinding::
   0876 DD E5         [15] 1663 	push	ix
   0878 DD 21 00 00   [14] 1664 	ld	ix,#0
   087C DD 39         [15] 1665 	add	ix,sp
   087E 21 F3 FF      [10] 1666 	ld	hl,#-13
   0881 39            [11] 1667 	add	hl,sp
   0882 F9            [ 6] 1668 	ld	sp,hl
                           1669 ;src/main.c:361: if(!enemy->muerto){
   0883 DD 4E 04      [19] 1670 	ld	c,4 (ix)
   0886 DD 46 05      [19] 1671 	ld	b,5 (ix)
   0889 C5            [11] 1672 	push	bc
   088A FD E1         [14] 1673 	pop	iy
   088C FD 7E 08      [19] 1674 	ld	a,8 (iy)
   088F B7            [ 4] 1675 	or	a, a
   0890 C2r9Cr09      [10] 1676 	jp	NZ,00112$
                           1677 ;src/main.c:363: if (!enemy->reversePatrol) {
   0893 21 0D 00      [10] 1678 	ld	hl,#0x000D
   0896 09            [11] 1679 	add	hl,bc
   0897 E3            [19] 1680 	ex	(sp), hl
   0898 E1            [10] 1681 	pop	hl
   0899 E5            [11] 1682 	push	hl
   089A 7E            [ 7] 1683 	ld	a,(hl)
   089B DD 77 FF      [19] 1684 	ld	-1 (ix),a
                           1685 ;src/main.c:364: if(enemy->iter < enemy->longitud_camino - 8){
   089E 21 0F 00      [10] 1686 	ld	hl,#0x000F
   08A1 09            [11] 1687 	add	hl,bc
   08A2 EB            [ 4] 1688 	ex	de,hl
                           1689 ;src/main.c:365: enemy->x = enemy->camino[enemy->iter];
   08A3 21 17 00      [10] 1690 	ld	hl,#0x0017
   08A6 09            [11] 1691 	add	hl,bc
   08A7 DD 75 FD      [19] 1692 	ld	-3 (ix),l
   08AA DD 74 FE      [19] 1693 	ld	-2 (ix),h
                           1694 ;src/main.c:367: enemy->y = enemy->camino[enemy->iter];
   08AD 21 01 00      [10] 1695 	ld	hl,#0x0001
   08B0 09            [11] 1696 	add	hl,bc
   08B1 DD 75 FB      [19] 1697 	ld	-5 (ix),l
   08B4 DD 74 FC      [19] 1698 	ld	-4 (ix),h
                           1699 ;src/main.c:369: enemy->mover = SI;
   08B7 21 06 00      [10] 1700 	ld	hl,#0x0006
   08BA 09            [11] 1701 	add	hl,bc
   08BB DD 75 F9      [19] 1702 	ld	-7 (ix),l
   08BE DD 74 FA      [19] 1703 	ld	-6 (ix),h
                           1704 ;src/main.c:372: enemy->lastIter = enemy->iter - 1;
   08C1 21 10 00      [10] 1705 	ld	hl,#0x0010
   08C4 09            [11] 1706 	add	hl,bc
   08C5 DD 75 F7      [19] 1707 	ld	-9 (ix),l
   08C8 DD 74 F8      [19] 1708 	ld	-8 (ix),h
                           1709 ;src/main.c:363: if (!enemy->reversePatrol) {
   08CB DD 7E FF      [19] 1710 	ld	a,-1 (ix)
   08CE B7            [ 4] 1711 	or	a, a
   08CF 20 78         [12] 1712 	jr	NZ,00108$
                           1713 ;src/main.c:364: if(enemy->iter < enemy->longitud_camino - 8){
   08D1 1A            [ 7] 1714 	ld	a,(de)
   08D2 DD 77 FF      [19] 1715 	ld	-1 (ix),a
   08D5 69            [ 4] 1716 	ld	l, c
   08D6 60            [ 4] 1717 	ld	h, b
   08D7 C5            [11] 1718 	push	bc
   08D8 01 43 01      [10] 1719 	ld	bc, #0x0143
   08DB 09            [11] 1720 	add	hl, bc
   08DC C1            [10] 1721 	pop	bc
   08DD 6E            [ 7] 1722 	ld	l,(hl)
   08DE 26 00         [ 7] 1723 	ld	h,#0x00
   08E0 7D            [ 4] 1724 	ld	a,l
   08E1 C6 F8         [ 7] 1725 	add	a,#0xF8
   08E3 DD 77 F5      [19] 1726 	ld	-11 (ix),a
   08E6 7C            [ 4] 1727 	ld	a,h
   08E7 CE FF         [ 7] 1728 	adc	a,#0xFF
   08E9 DD 77 F6      [19] 1729 	ld	-10 (ix),a
   08EC DD 7E FF      [19] 1730 	ld	a, -1 (ix)
   08EF 26 00         [ 7] 1731 	ld	h, #0x00
   08F1 DD 96 F5      [19] 1732 	sub	a, -11 (ix)
   08F4 7C            [ 4] 1733 	ld	a,h
   08F5 DD 9E F6      [19] 1734 	sbc	a, -10 (ix)
   08F8 E2rFDr08      [10] 1735 	jp	PO, 00130$
   08FB EE 80         [ 7] 1736 	xor	a, #0x80
   08FD                    1737 00130$:
   08FD F2r38r09      [10] 1738 	jp	P,00102$
                           1739 ;src/main.c:365: enemy->x = enemy->camino[enemy->iter];
   0900 DD 6E FF      [19] 1740 	ld	l,-1 (ix)
   0903 26 00         [ 7] 1741 	ld	h,#0x00
   0905 DD 7E FD      [19] 1742 	ld	a,-3 (ix)
   0908 85            [ 4] 1743 	add	a, l
   0909 6F            [ 4] 1744 	ld	l,a
   090A DD 7E FE      [19] 1745 	ld	a,-2 (ix)
   090D 8C            [ 4] 1746 	adc	a, h
   090E 67            [ 4] 1747 	ld	h,a
   090F 7E            [ 7] 1748 	ld	a,(hl)
   0910 02            [ 7] 1749 	ld	(bc),a
                           1750 ;src/main.c:366: enemy->iter++;
   0911 1A            [ 7] 1751 	ld	a,(de)
   0912 4F            [ 4] 1752 	ld	c,a
   0913 0C            [ 4] 1753 	inc	c
   0914 79            [ 4] 1754 	ld	a,c
   0915 12            [ 7] 1755 	ld	(de),a
                           1756 ;src/main.c:367: enemy->y = enemy->camino[enemy->iter];
   0916 69            [ 4] 1757 	ld	l,c
   0917 26 00         [ 7] 1758 	ld	h,#0x00
   0919 DD 7E FD      [19] 1759 	ld	a,-3 (ix)
   091C 85            [ 4] 1760 	add	a, l
   091D 6F            [ 4] 1761 	ld	l,a
   091E DD 7E FE      [19] 1762 	ld	a,-2 (ix)
   0921 8C            [ 4] 1763 	adc	a, h
   0922 67            [ 4] 1764 	ld	h,a
   0923 46            [ 7] 1765 	ld	b,(hl)
   0924 DD 6E FB      [19] 1766 	ld	l,-5 (ix)
   0927 DD 66 FC      [19] 1767 	ld	h,-4 (ix)
   092A 70            [ 7] 1768 	ld	(hl),b
                           1769 ;src/main.c:368: enemy->iter++;
   092B 0C            [ 4] 1770 	inc	c
   092C 79            [ 4] 1771 	ld	a,c
   092D 12            [ 7] 1772 	ld	(de),a
                           1773 ;src/main.c:369: enemy->mover = SI;
   092E DD 6E F9      [19] 1774 	ld	l,-7 (ix)
   0931 DD 66 FA      [19] 1775 	ld	h,-6 (ix)
   0934 36 01         [10] 1776 	ld	(hl),#0x01
   0936 18 64         [12] 1777 	jr	00112$
   0938                    1778 00102$:
                           1779 ;src/main.c:372: enemy->lastIter = enemy->iter - 1;
   0938 DD 4E FF      [19] 1780 	ld	c,-1 (ix)
   093B 0D            [ 4] 1781 	dec	c
   093C DD 6E F7      [19] 1782 	ld	l,-9 (ix)
   093F DD 66 F8      [19] 1783 	ld	h,-8 (ix)
   0942 71            [ 7] 1784 	ld	(hl),c
                           1785 ;src/main.c:375: enemy->reversePatrol = 1;
   0943 E1            [10] 1786 	pop	hl
   0944 E5            [11] 1787 	push	hl
   0945 36 01         [10] 1788 	ld	(hl),#0x01
   0947 18 53         [12] 1789 	jr	00112$
   0949                    1790 00108$:
                           1791 ;src/main.c:378: if(enemy->lastIter > 1){
   0949 DD 6E F7      [19] 1792 	ld	l,-9 (ix)
   094C DD 66 F8      [19] 1793 	ld	h,-8 (ix)
   094F 6E            [ 7] 1794 	ld	l,(hl)
   0950 3E 01         [ 7] 1795 	ld	a,#0x01
   0952 95            [ 4] 1796 	sub	a, l
   0953 30 41         [12] 1797 	jr	NC,00105$
                           1798 ;src/main.c:379: enemy->y = enemy->camino[enemy->lastIter];
   0955 26 00         [ 7] 1799 	ld	h,#0x00
   0957 DD 5E FD      [19] 1800 	ld	e,-3 (ix)
   095A DD 56 FE      [19] 1801 	ld	d,-2 (ix)
   095D 19            [11] 1802 	add	hl,de
   095E 5E            [ 7] 1803 	ld	e,(hl)
   095F DD 6E FB      [19] 1804 	ld	l,-5 (ix)
   0962 DD 66 FC      [19] 1805 	ld	h,-4 (ix)
   0965 73            [ 7] 1806 	ld	(hl),e
                           1807 ;src/main.c:380: enemy->lastIter--;
   0966 DD 6E F7      [19] 1808 	ld	l,-9 (ix)
   0969 DD 66 F8      [19] 1809 	ld	h,-8 (ix)
   096C 5E            [ 7] 1810 	ld	e,(hl)
   096D 1D            [ 4] 1811 	dec	e
   096E DD 6E F7      [19] 1812 	ld	l,-9 (ix)
   0971 DD 66 F8      [19] 1813 	ld	h,-8 (ix)
   0974 73            [ 7] 1814 	ld	(hl),e
                           1815 ;src/main.c:381: enemy->x = enemy->camino[enemy->lastIter];
   0975 6B            [ 4] 1816 	ld	l,e
   0976 26 00         [ 7] 1817 	ld	h,#0x00
   0978 DD 7E FD      [19] 1818 	ld	a,-3 (ix)
   097B 85            [ 4] 1819 	add	a, l
   097C 6F            [ 4] 1820 	ld	l,a
   097D DD 7E FE      [19] 1821 	ld	a,-2 (ix)
   0980 8C            [ 4] 1822 	adc	a, h
   0981 67            [ 4] 1823 	ld	h,a
   0982 7E            [ 7] 1824 	ld	a,(hl)
   0983 02            [ 7] 1825 	ld	(bc),a
                           1826 ;src/main.c:382: enemy->lastIter--;
   0984 1D            [ 4] 1827 	dec	e
   0985 DD 6E F7      [19] 1828 	ld	l,-9 (ix)
   0988 DD 66 F8      [19] 1829 	ld	h,-8 (ix)
   098B 73            [ 7] 1830 	ld	(hl),e
                           1831 ;src/main.c:383: enemy->mover = SI;
   098C DD 6E F9      [19] 1832 	ld	l,-7 (ix)
   098F DD 66 FA      [19] 1833 	ld	h,-6 (ix)
   0992 36 01         [10] 1834 	ld	(hl),#0x01
   0994 18 06         [12] 1835 	jr	00112$
   0996                    1836 00105$:
                           1837 ;src/main.c:386: enemy->iter = 0;
   0996 AF            [ 4] 1838 	xor	a, a
   0997 12            [ 7] 1839 	ld	(de),a
                           1840 ;src/main.c:388: enemy->reversePatrol = 0;
   0998 E1            [10] 1841 	pop	hl
   0999 E5            [11] 1842 	push	hl
   099A 36 00         [10] 1843 	ld	(hl),#0x00
   099C                    1844 00112$:
   099C DD F9         [10] 1845 	ld	sp, ix
   099E DD E1         [14] 1846 	pop	ix
   09A0 C9            [10] 1847 	ret
                           1848 ;src/main.c:395: void moverEnemigo(TEnemy *enemy){
                           1849 ;	---------------------------------
                           1850 ; Function moverEnemigo
                           1851 ; ---------------------------------
   09A1                    1852 _moverEnemigo::
   09A1 DD E5         [15] 1853 	push	ix
   09A3 DD 21 00 00   [14] 1854 	ld	ix,#0
   09A7 DD 39         [15] 1855 	add	ix,sp
                           1856 ;src/main.c:396: if(!enemy->muerto){
   09A9 DD 4E 04      [19] 1857 	ld	c,4 (ix)
   09AC DD 46 05      [19] 1858 	ld	b,5 (ix)
   09AF C5            [11] 1859 	push	bc
   09B0 FD E1         [14] 1860 	pop	iy
   09B2 FD 7E 08      [19] 1861 	ld	a,8 (iy)
   09B5 B7            [ 4] 1862 	or	a, a
   09B6 20 46         [12] 1863 	jr	NZ,00110$
                           1864 ;src/main.c:397: if(!checkEnemyCollision(enemy->mira, enemy)){
   09B8 21 07 00      [10] 1865 	ld	hl,#0x0007
   09BB 09            [11] 1866 	add	hl,bc
   09BC 5E            [ 7] 1867 	ld	e,(hl)
   09BD 16 00         [ 7] 1868 	ld	d,#0x00
   09BF E5            [11] 1869 	push	hl
   09C0 C5            [11] 1870 	push	bc
   09C1 C5            [11] 1871 	push	bc
   09C2 D5            [11] 1872 	push	de
   09C3 CDr46r04      [17] 1873 	call	_checkEnemyCollision
   09C6 F1            [10] 1874 	pop	af
   09C7 F1            [10] 1875 	pop	af
   09C8 7D            [ 4] 1876 	ld	a,l
   09C9 C1            [10] 1877 	pop	bc
   09CA E1            [10] 1878 	pop	hl
   09CB B7            [ 4] 1879 	or	a, a
   09CC 20 30         [12] 1880 	jr	NZ,00110$
                           1881 ;src/main.c:399: switch (enemy->mira) {
   09CE 5E            [ 7] 1882 	ld	e,(hl)
   09CF 3E 03         [ 7] 1883 	ld	a,#0x03
   09D1 93            [ 4] 1884 	sub	a, e
   09D2 38 2A         [12] 1885 	jr	C,00110$
   09D4 16 00         [ 7] 1886 	ld	d,#0x00
   09D6 21rDCr09      [10] 1887 	ld	hl,#00124$
   09D9 19            [11] 1888 	add	hl,de
   09DA 19            [11] 1889 	add	hl,de
                           1890 ;src/main.c:401: case 0:
   09DB E9            [ 4] 1891 	jp	(hl)
   09DC                    1892 00124$:
   09DC 18 06         [12] 1893 	jr	00101$
   09DE 18 0B         [12] 1894 	jr	00102$
   09E0 18 10         [12] 1895 	jr	00103$
   09E2 18 15         [12] 1896 	jr	00104$
   09E4                    1897 00101$:
                           1898 ;src/main.c:402: moverEnemigoDerecha(enemy);
   09E4 C5            [11] 1899 	push	bc
   09E5 CDr54r08      [17] 1900 	call	_moverEnemigoDerecha
   09E8 F1            [10] 1901 	pop	af
                           1902 ;src/main.c:403: break;
   09E9 18 13         [12] 1903 	jr	00110$
                           1904 ;src/main.c:404: case 1:
   09EB                    1905 00102$:
                           1906 ;src/main.c:405: moverEnemigoIzquierda(enemy);
   09EB C5            [11] 1907 	push	bc
   09EC CDr64r08      [17] 1908 	call	_moverEnemigoIzquierda
   09EF F1            [10] 1909 	pop	af
                           1910 ;src/main.c:406: break;
   09F0 18 0C         [12] 1911 	jr	00110$
                           1912 ;src/main.c:407: case 2:
   09F2                    1913 00103$:
                           1914 ;src/main.c:408: moverEnemigoArriba(enemy);
   09F2 C5            [11] 1915 	push	bc
   09F3 CDr16r08      [17] 1916 	call	_moverEnemigoArriba
   09F6 F1            [10] 1917 	pop	af
                           1918 ;src/main.c:409: break;
   09F7 18 05         [12] 1919 	jr	00110$
                           1920 ;src/main.c:410: case 3:
   09F9                    1921 00104$:
                           1922 ;src/main.c:411: moverEnemigoAbajo(enemy);
   09F9 C5            [11] 1923 	push	bc
   09FA CDr35r08      [17] 1924 	call	_moverEnemigoAbajo
   09FD F1            [10] 1925 	pop	af
                           1926 ;src/main.c:413: }
   09FE                    1927 00110$:
   09FE DD E1         [14] 1928 	pop	ix
   0A00 C9            [10] 1929 	ret
                           1930 ;src/main.c:418: void lookFor(TEnemy* enemy){
                           1931 ;	---------------------------------
                           1932 ; Function lookFor
                           1933 ; ---------------------------------
   0A01                    1934 _lookFor::
   0A01 DD E5         [15] 1935 	push	ix
   0A03 DD 21 00 00   [14] 1936 	ld	ix,#0
   0A07 DD 39         [15] 1937 	add	ix,sp
   0A09 21 F6 FF      [10] 1938 	ld	hl,#-10
   0A0C 39            [11] 1939 	add	hl,sp
   0A0D F9            [ 6] 1940 	ld	sp,hl
                           1941 ;src/main.c:421: u8 interpone = NO;
   0A0E 0E 00         [ 7] 1942 	ld	c,#0x00
                           1943 ;src/main.c:425: u8 difx = abs(enemy->x - prota.x);
   0A10 DD 7E 04      [19] 1944 	ld	a,4 (ix)
   0A13 DD 77 FA      [19] 1945 	ld	-6 (ix),a
   0A16 DD 7E 05      [19] 1946 	ld	a,5 (ix)
   0A19 DD 77 FB      [19] 1947 	ld	-5 (ix),a
   0A1C DD 6E FA      [19] 1948 	ld	l,-6 (ix)
   0A1F DD 66 FB      [19] 1949 	ld	h,-5 (ix)
   0A22 46            [ 7] 1950 	ld	b,(hl)
   0A23 16 00         [ 7] 1951 	ld	d,#0x00
   0A25 21r12r05      [10] 1952 	ld	hl,#_prota+0
   0A28 6E            [ 7] 1953 	ld	l,(hl)
   0A29 26 00         [ 7] 1954 	ld	h,#0x00
   0A2B 78            [ 4] 1955 	ld	a,b
   0A2C 95            [ 4] 1956 	sub	a, l
   0A2D 5F            [ 4] 1957 	ld	e,a
   0A2E 7A            [ 4] 1958 	ld	a,d
   0A2F 9C            [ 4] 1959 	sbc	a, h
   0A30 57            [ 4] 1960 	ld	d,a
   0A31 C5            [11] 1961 	push	bc
   0A32 D5            [11] 1962 	push	de
   0A33 CDr00r00      [17] 1963 	call	_abs
   0A36 F1            [10] 1964 	pop	af
   0A37 C1            [10] 1965 	pop	bc
   0A38 45            [ 4] 1966 	ld	b,l
                           1967 ;src/main.c:426: u8 dify = abs(enemy->y - prota.y);
   0A39 DD 7E FA      [19] 1968 	ld	a,-6 (ix)
   0A3C C6 01         [ 7] 1969 	add	a, #0x01
   0A3E DD 77 F8      [19] 1970 	ld	-8 (ix),a
   0A41 DD 7E FB      [19] 1971 	ld	a,-5 (ix)
   0A44 CE 00         [ 7] 1972 	adc	a, #0x00
   0A46 DD 77 F9      [19] 1973 	ld	-7 (ix),a
   0A49 DD 6E F8      [19] 1974 	ld	l,-8 (ix)
   0A4C DD 66 F9      [19] 1975 	ld	h,-7 (ix)
   0A4F 5E            [ 7] 1976 	ld	e,(hl)
   0A50 16 00         [ 7] 1977 	ld	d,#0x00
   0A52 21r13r05      [10] 1978 	ld	hl, #(_prota + 0x0001) + 0
   0A55 6E            [ 7] 1979 	ld	l,(hl)
   0A56 26 00         [ 7] 1980 	ld	h,#0x00
   0A58 7B            [ 4] 1981 	ld	a,e
   0A59 95            [ 4] 1982 	sub	a, l
   0A5A 5F            [ 4] 1983 	ld	e,a
   0A5B 7A            [ 4] 1984 	ld	a,d
   0A5C 9C            [ 4] 1985 	sbc	a, h
   0A5D 57            [ 4] 1986 	ld	d,a
   0A5E C5            [11] 1987 	push	bc
   0A5F D5            [11] 1988 	push	de
   0A60 CDr00r00      [17] 1989 	call	_abs
   0A63 F1            [10] 1990 	pop	af
   0A64 C1            [10] 1991 	pop	bc
                           1992 ;src/main.c:427: dist = difx + dify; // manhattan
   0A65 78            [ 4] 1993 	ld	a,b
   0A66 85            [ 4] 1994 	add	a, l
   0A67 47            [ 4] 1995 	ld	b,a
                           1996 ;src/main.c:429: enemy->seen = NO;
   0A68 DD 7E FA      [19] 1997 	ld	a,-6 (ix)
   0A6B C6 12         [ 7] 1998 	add	a, #0x12
   0A6D DD 77 F6      [19] 1999 	ld	-10 (ix),a
   0A70 DD 7E FB      [19] 2000 	ld	a,-5 (ix)
   0A73 CE 00         [ 7] 2001 	adc	a, #0x00
   0A75 DD 77 F7      [19] 2002 	ld	-9 (ix),a
   0A78 E1            [10] 2003 	pop	hl
   0A79 E5            [11] 2004 	push	hl
   0A7A 36 00         [10] 2005 	ld	(hl),#0x00
                           2006 ;src/main.c:430: enemy->inRange = NO;
   0A7C DD 7E FA      [19] 2007 	ld	a,-6 (ix)
   0A7F C6 11         [ 7] 2008 	add	a, #0x11
   0A81 DD 77 FE      [19] 2009 	ld	-2 (ix),a
   0A84 DD 7E FB      [19] 2010 	ld	a,-5 (ix)
   0A87 CE 00         [ 7] 2011 	adc	a, #0x00
   0A89 DD 77 FF      [19] 2012 	ld	-1 (ix),a
   0A8C DD 6E FE      [19] 2013 	ld	l,-2 (ix)
   0A8F DD 66 FF      [19] 2014 	ld	h,-1 (ix)
   0A92 36 00         [10] 2015 	ld	(hl),#0x00
                           2016 ;src/main.c:432: if (dist <= 10) {// te detectan los sensores de proximidad
   0A94 3E 0A         [ 7] 2017 	ld	a,#0x0A
   0A96 90            [ 4] 2018 	sub	a, b
   0A97 38 0F         [12] 2019 	jr	C,00123$
                           2020 ;src/main.c:433: enemy->seen = 1;
   0A99 E1            [10] 2021 	pop	hl
   0A9A E5            [11] 2022 	push	hl
   0A9B 36 01         [10] 2023 	ld	(hl),#0x01
                           2024 ;src/main.c:434: enemy->inRange = 1;
   0A9D DD 6E FE      [19] 2025 	ld	l,-2 (ix)
   0AA0 DD 66 FF      [19] 2026 	ld	h,-1 (ix)
   0AA3 36 01         [10] 2027 	ld	(hl),#0x01
   0AA5 C3r9Fr0B      [10] 2028 	jp	00133$
   0AA8                    2029 00123$:
                           2030 ;src/main.c:435: } else if(enemy->x > prota.x - 50 && enemy->x < prota.x + 50  ){
   0AA8 DD 6E FA      [19] 2031 	ld	l,-6 (ix)
   0AAB DD 66 FB      [19] 2032 	ld	h,-5 (ix)
   0AAE 7E            [ 7] 2033 	ld	a,(hl)
   0AAF DD 77 FE      [19] 2034 	ld	-2 (ix),a
   0AB2 21r12r05      [10] 2035 	ld	hl, #_prota + 0
   0AB5 46            [ 7] 2036 	ld	b,(hl)
   0AB6 58            [ 4] 2037 	ld	e,b
   0AB7 16 00         [ 7] 2038 	ld	d,#0x00
   0AB9 7B            [ 4] 2039 	ld	a,e
   0ABA C6 CE         [ 7] 2040 	add	a,#0xCE
   0ABC DD 77 FC      [19] 2041 	ld	-4 (ix),a
   0ABF 7A            [ 4] 2042 	ld	a,d
   0AC0 CE FF         [ 7] 2043 	adc	a,#0xFF
   0AC2 DD 77 FD      [19] 2044 	ld	-3 (ix),a
   0AC5 DD 6E FE      [19] 2045 	ld	l,-2 (ix)
   0AC8 26 00         [ 7] 2046 	ld	h,#0x00
   0ACA DD 7E FC      [19] 2047 	ld	a,-4 (ix)
   0ACD 95            [ 4] 2048 	sub	a, l
   0ACE DD 7E FD      [19] 2049 	ld	a,-3 (ix)
   0AD1 9C            [ 4] 2050 	sbc	a, h
   0AD2 E2rD7r0A      [10] 2051 	jp	PO, 00205$
   0AD5 EE 80         [ 7] 2052 	xor	a, #0x80
   0AD7                    2053 00205$:
   0AD7 F2r9Fr0B      [10] 2054 	jp	P,00133$
   0ADA 7B            [ 4] 2055 	ld	a,e
   0ADB C6 32         [ 7] 2056 	add	a, #0x32
   0ADD 5F            [ 4] 2057 	ld	e,a
   0ADE 7A            [ 4] 2058 	ld	a,d
   0ADF CE 00         [ 7] 2059 	adc	a, #0x00
   0AE1 57            [ 4] 2060 	ld	d,a
   0AE2 7D            [ 4] 2061 	ld	a,l
   0AE3 93            [ 4] 2062 	sub	a, e
   0AE4 7C            [ 4] 2063 	ld	a,h
   0AE5 9A            [ 4] 2064 	sbc	a, d
   0AE6 E2rEBr0A      [10] 2065 	jp	PO, 00206$
   0AE9 EE 80         [ 7] 2066 	xor	a, #0x80
   0AEB                    2067 00206$:
   0AEB F2r9Fr0B      [10] 2068 	jp	P,00133$
                           2069 ;src/main.c:436: if(enemy->y > prota.y - 4 && enemy->y < prota.y + 4){
   0AEE DD 6E F8      [19] 2070 	ld	l,-8 (ix)
   0AF1 DD 66 F9      [19] 2071 	ld	h,-7 (ix)
   0AF4 5E            [ 7] 2072 	ld	e,(hl)
   0AF5 21r13r05      [10] 2073 	ld	hl, #(_prota + 0x0001) + 0
   0AF8 6E            [ 7] 2074 	ld	l,(hl)
   0AF9 26 00         [ 7] 2075 	ld	h,#0x00
   0AFB 7D            [ 4] 2076 	ld	a,l
   0AFC C6 FC         [ 7] 2077 	add	a,#0xFC
   0AFE DD 77 FC      [19] 2078 	ld	-4 (ix),a
   0B01 7C            [ 4] 2079 	ld	a,h
   0B02 CE FF         [ 7] 2080 	adc	a,#0xFF
   0B04 DD 77 FD      [19] 2081 	ld	-3 (ix),a
   0B07 16 00         [ 7] 2082 	ld	d,#0x00
   0B09 DD 7E FC      [19] 2083 	ld	a,-4 (ix)
   0B0C 93            [ 4] 2084 	sub	a, e
   0B0D DD 7E FD      [19] 2085 	ld	a,-3 (ix)
   0B10 9A            [ 4] 2086 	sbc	a, d
   0B11 E2r16r0B      [10] 2087 	jp	PO, 00207$
   0B14 EE 80         [ 7] 2088 	xor	a, #0x80
   0B16                    2089 00207$:
   0B16 F2r9Fr0B      [10] 2090 	jp	P,00133$
   0B19 23            [ 6] 2091 	inc	hl
   0B1A 23            [ 6] 2092 	inc	hl
   0B1B 23            [ 6] 2093 	inc	hl
   0B1C 23            [ 6] 2094 	inc	hl
   0B1D 7B            [ 4] 2095 	ld	a,e
   0B1E 95            [ 4] 2096 	sub	a, l
   0B1F 7A            [ 4] 2097 	ld	a,d
   0B20 9C            [ 4] 2098 	sbc	a, h
   0B21 E2r26r0B      [10] 2099 	jp	PO, 00208$
   0B24 EE 80         [ 7] 2100 	xor	a, #0x80
   0B26                    2101 00208$:
   0B26 F2r9Fr0B      [10] 2102 	jp	P,00133$
                           2103 ;src/main.c:437: if(enemy->x > prota.x){
   0B29 78            [ 4] 2104 	ld	a,b
   0B2A DD 96 FE      [19] 2105 	sub	a, -2 (ix)
   0B2D 3E 00         [ 7] 2106 	ld	a,#0x00
   0B2F 17            [ 4] 2107 	rla
   0B30 B7            [ 4] 2108 	or	a, a
   0B31 28 36         [12] 2109 	jr	Z,00114$
                           2110 ;src/main.c:438: i = prota.x;
   0B33 58            [ 4] 2111 	ld	e,b
                           2112 ;src/main.c:439: for (i; i<enemy->x && !interpone; i++){
   0B34                    2113 00127$:
   0B34 DD 6E FA      [19] 2114 	ld	l,-6 (ix)
   0B37 DD 66 FB      [19] 2115 	ld	h,-5 (ix)
   0B3A 46            [ 7] 2116 	ld	b,(hl)
   0B3B 7B            [ 4] 2117 	ld	a,e
   0B3C 90            [ 4] 2118 	sub	a, b
   0B3D 30 20         [12] 2119 	jr	NC,00103$
   0B3F 79            [ 4] 2120 	ld	a,c
   0B40 B7            [ 4] 2121 	or	a, a
   0B41 20 1C         [12] 2122 	jr	NZ,00103$
                           2123 ;src/main.c:440: if(*getTilePtr(i , prota.y) > 2){
   0B43 21r13r05      [10] 2124 	ld	hl, #(_prota + 0x0001) + 0
   0B46 46            [ 7] 2125 	ld	b,(hl)
   0B47 C5            [11] 2126 	push	bc
   0B48 D5            [11] 2127 	push	de
   0B49 C5            [11] 2128 	push	bc
   0B4A 33            [ 6] 2129 	inc	sp
   0B4B 7B            [ 4] 2130 	ld	a,e
   0B4C F5            [11] 2131 	push	af
   0B4D 33            [ 6] 2132 	inc	sp
   0B4E CDr0Br01      [17] 2133 	call	_getTilePtr
   0B51 F1            [10] 2134 	pop	af
   0B52 D1            [10] 2135 	pop	de
   0B53 C1            [10] 2136 	pop	bc
   0B54 46            [ 7] 2137 	ld	b,(hl)
   0B55 3E 02         [ 7] 2138 	ld	a,#0x02
   0B57 90            [ 4] 2139 	sub	a, b
   0B58 30 02         [12] 2140 	jr	NC,00128$
                           2141 ;src/main.c:441: interpone = SI;
   0B5A 0E 01         [ 7] 2142 	ld	c,#0x01
   0B5C                    2143 00128$:
                           2144 ;src/main.c:439: for (i; i<enemy->x && !interpone; i++){
   0B5C 1C            [ 4] 2145 	inc	e
   0B5D 18 D5         [12] 2146 	jr	00127$
   0B5F                    2147 00103$:
                           2148 ;src/main.c:444: if(!interpone){
   0B5F 79            [ 4] 2149 	ld	a,c
   0B60 B7            [ 4] 2150 	or	a, a
   0B61 20 3C         [12] 2151 	jr	NZ,00133$
                           2152 ;src/main.c:445: enemy->seen = SI;
   0B63 E1            [10] 2153 	pop	hl
   0B64 E5            [11] 2154 	push	hl
   0B65 36 01         [10] 2155 	ld	(hl),#0x01
   0B67 18 36         [12] 2156 	jr	00133$
   0B69                    2157 00114$:
                           2158 ;src/main.c:447: }else if(enemy->x > prota.x){
   0B69 B7            [ 4] 2159 	or	a, a
   0B6A 28 33         [12] 2160 	jr	Z,00133$
                           2161 ;src/main.c:448: i = enemy->x;
   0B6C DD 46 FE      [19] 2162 	ld	b,-2 (ix)
                           2163 ;src/main.c:449: for (i; i<prota.x && !interpone; i++){
   0B6F                    2164 00131$:
   0B6F 21r12r05      [10] 2165 	ld	hl, #_prota + 0
   0B72 5E            [ 7] 2166 	ld	e,(hl)
   0B73 78            [ 4] 2167 	ld	a,b
   0B74 93            [ 4] 2168 	sub	a, e
   0B75 30 20         [12] 2169 	jr	NC,00108$
   0B77 79            [ 4] 2170 	ld	a,c
   0B78 B7            [ 4] 2171 	or	a, a
   0B79 20 1C         [12] 2172 	jr	NZ,00108$
                           2173 ;src/main.c:450: if(*getTilePtr(i, enemy->y) > 2){
   0B7B DD 6E F8      [19] 2174 	ld	l,-8 (ix)
   0B7E DD 66 F9      [19] 2175 	ld	h,-7 (ix)
   0B81 56            [ 7] 2176 	ld	d,(hl)
   0B82 C5            [11] 2177 	push	bc
   0B83 D5            [11] 2178 	push	de
   0B84 33            [ 6] 2179 	inc	sp
   0B85 C5            [11] 2180 	push	bc
   0B86 33            [ 6] 2181 	inc	sp
   0B87 CDr0Br01      [17] 2182 	call	_getTilePtr
   0B8A F1            [10] 2183 	pop	af
   0B8B C1            [10] 2184 	pop	bc
   0B8C 5E            [ 7] 2185 	ld	e,(hl)
   0B8D 3E 02         [ 7] 2186 	ld	a,#0x02
   0B8F 93            [ 4] 2187 	sub	a, e
   0B90 30 02         [12] 2188 	jr	NC,00132$
                           2189 ;src/main.c:451: interpone = SI;
   0B92 0E 01         [ 7] 2190 	ld	c,#0x01
   0B94                    2191 00132$:
                           2192 ;src/main.c:449: for (i; i<prota.x && !interpone; i++){
   0B94 04            [ 4] 2193 	inc	b
   0B95 18 D8         [12] 2194 	jr	00131$
   0B97                    2195 00108$:
                           2196 ;src/main.c:454: if(!interpone){
   0B97 79            [ 4] 2197 	ld	a,c
   0B98 B7            [ 4] 2198 	or	a, a
   0B99 20 04         [12] 2199 	jr	NZ,00133$
                           2200 ;src/main.c:455: enemy->seen = SI;
   0B9B E1            [10] 2201 	pop	hl
   0B9C E5            [11] 2202 	push	hl
   0B9D 36 01         [10] 2203 	ld	(hl),#0x01
   0B9F                    2204 00133$:
   0B9F DD F9         [10] 2205 	ld	sp, ix
   0BA1 DD E1         [14] 2206 	pop	ix
   0BA3 C9            [10] 2207 	ret
                           2208 ;src/main.c:462: void patrol(TEnemy *enemy) {
                           2209 ;	---------------------------------
                           2210 ; Function patrol
                           2211 ; ---------------------------------
   0BA4                    2212 _patrol::
                           2213 ;src/main.c:463: if (enemy->onPathPatrol) {
   0BA4 D1            [10] 2214 	pop	de
   0BA5 C1            [10] 2215 	pop	bc
   0BA6 C5            [11] 2216 	push	bc
   0BA7 D5            [11] 2217 	push	de
   0BA8 C5            [11] 2218 	push	bc
   0BA9 FD E1         [14] 2219 	pop	iy
   0BAB FD 7E 0C      [19] 2220 	ld	a,12 (iy)
   0BAE B7            [ 4] 2221 	or	a, a
   0BAF C8            [11] 2222 	ret	Z
                           2223 ;src/main.c:464: moverEnemigoPathfinding(enemy);
   0BB0 C5            [11] 2224 	push	bc
   0BB1 CDr76r08      [17] 2225 	call	_moverEnemigoPathfinding
   0BB4 F1            [10] 2226 	pop	af
   0BB5 C9            [10] 2227 	ret
                           2228 ;src/main.c:468: void seek(TEnemy* actual){
                           2229 ;	---------------------------------
                           2230 ; Function seek
                           2231 ; ---------------------------------
   0BB6                    2232 _seek::
                           2233 ;src/main.c:469: moverEnemigoPathfinding(actual);
   0BB6 C1            [10] 2234 	pop	bc
   0BB7 E1            [10] 2235 	pop	hl
   0BB8 E5            [11] 2236 	push	hl
   0BB9 C5            [11] 2237 	push	bc
   0BBA E5            [11] 2238 	push	hl
   0BBB CDr76r08      [17] 2239 	call	_moverEnemigoPathfinding
   0BBE F1            [10] 2240 	pop	af
   0BBF C9            [10] 2241 	ret
                           2242 ;src/main.c:472: void engage(TEnemy *enemy, u8 dx, u8 dy) {
                           2243 ;	---------------------------------
                           2244 ; Function engage
                           2245 ; ---------------------------------
   0BC0                    2246 _engage::
   0BC0 DD E5         [15] 2247 	push	ix
   0BC2 DD 21 00 00   [14] 2248 	ld	ix,#0
   0BC6 DD 39         [15] 2249 	add	ix,sp
   0BC8 21 F3 FF      [10] 2250 	ld	hl,#-13
   0BCB 39            [11] 2251 	add	hl,sp
   0BCC F9            [ 6] 2252 	ld	sp,hl
                           2253 ;src/main.c:473: u8 difx = abs(enemy->x - prota.x); // calculo distancia para mantener una dist
   0BCD DD 7E 04      [19] 2254 	ld	a,4 (ix)
   0BD0 DD 77 F7      [19] 2255 	ld	-9 (ix),a
   0BD3 DD 7E 05      [19] 2256 	ld	a,5 (ix)
   0BD6 DD 77 F8      [19] 2257 	ld	-8 (ix),a
   0BD9 DD 6E F7      [19] 2258 	ld	l,-9 (ix)
   0BDC DD 66 F8      [19] 2259 	ld	h,-8 (ix)
   0BDF 4E            [ 7] 2260 	ld	c,(hl)
   0BE0 06 00         [ 7] 2261 	ld	b,#0x00
   0BE2 21r12r05      [10] 2262 	ld	hl,#_prota+0
   0BE5 5E            [ 7] 2263 	ld	e,(hl)
   0BE6 16 00         [ 7] 2264 	ld	d,#0x00
   0BE8 79            [ 4] 2265 	ld	a,c
   0BE9 93            [ 4] 2266 	sub	a, e
   0BEA 4F            [ 4] 2267 	ld	c,a
   0BEB 78            [ 4] 2268 	ld	a,b
   0BEC 9A            [ 4] 2269 	sbc	a, d
   0BED 47            [ 4] 2270 	ld	b,a
   0BEE C5            [11] 2271 	push	bc
   0BEF CDr00r00      [17] 2272 	call	_abs
   0BF2 F1            [10] 2273 	pop	af
   0BF3 4D            [ 4] 2274 	ld	c,l
                           2275 ;src/main.c:474: u8 dify = abs(enemy->y - prota.y);
   0BF4 DD 7E F7      [19] 2276 	ld	a,-9 (ix)
   0BF7 C6 01         [ 7] 2277 	add	a, #0x01
   0BF9 DD 77 F9      [19] 2278 	ld	-7 (ix),a
   0BFC DD 7E F8      [19] 2279 	ld	a,-8 (ix)
   0BFF CE 00         [ 7] 2280 	adc	a, #0x00
   0C01 DD 77 FA      [19] 2281 	ld	-6 (ix),a
   0C04 DD 6E F9      [19] 2282 	ld	l,-7 (ix)
   0C07 DD 66 FA      [19] 2283 	ld	h,-6 (ix)
   0C0A 5E            [ 7] 2284 	ld	e,(hl)
   0C0B 16 00         [ 7] 2285 	ld	d,#0x00
   0C0D 21r13r05      [10] 2286 	ld	hl,#_prota+1
   0C10 6E            [ 7] 2287 	ld	l,(hl)
   0C11 26 00         [ 7] 2288 	ld	h,#0x00
   0C13 7B            [ 4] 2289 	ld	a,e
   0C14 95            [ 4] 2290 	sub	a, l
   0C15 5F            [ 4] 2291 	ld	e,a
   0C16 7A            [ 4] 2292 	ld	a,d
   0C17 9C            [ 4] 2293 	sbc	a, h
   0C18 57            [ 4] 2294 	ld	d,a
   0C19 C5            [11] 2295 	push	bc
   0C1A D5            [11] 2296 	push	de
   0C1B CDr00r00      [17] 2297 	call	_abs
   0C1E F1            [10] 2298 	pop	af
   0C1F C1            [10] 2299 	pop	bc
                           2300 ;src/main.c:475: u8 dist = difx + dify; // manhattan
   0C20 09            [11] 2301 	add	hl, bc
   0C21 DD 75 F5      [19] 2302 	ld	-11 (ix),l
                           2303 ;src/main.c:477: u8 movX = 0;
   0C24 DD 36 F4 00   [19] 2304 	ld	-12 (ix),#0x00
                           2305 ;src/main.c:478: u8 movY = 0;
   0C28 DD 36 F6 00   [19] 2306 	ld	-10 (ix),#0x00
                           2307 ;src/main.c:479: u8 mov = 0;
   0C2C DD 36 F3 00   [19] 2308 	ld	-13 (ix),#0x00
                           2309 ;src/main.c:481: if (enemy->y == dy) { // alineado en el eje x
   0C30 DD 6E F9      [19] 2310 	ld	l,-7 (ix)
   0C33 DD 66 FA      [19] 2311 	ld	h,-6 (ix)
   0C36 7E            [ 7] 2312 	ld	a,(hl)
   0C37 DD 77 FB      [19] 2313 	ld	-5 (ix),a
                           2314 ;src/main.c:483: if (dist > 10) {
   0C3A 3E 0A         [ 7] 2315 	ld	a,#0x0A
   0C3C DD 96 F5      [19] 2316 	sub	a, -11 (ix)
   0C3F 3E 00         [ 7] 2317 	ld	a,#0x00
   0C41 17            [ 4] 2318 	rla
   0C42 DD 77 FC      [19] 2319 	ld	-4 (ix),a
                           2320 ;src/main.c:481: if (enemy->y == dy) { // alineado en el eje x
   0C45 DD 7E 07      [19] 2321 	ld	a,7 (ix)
   0C48 DD 96 FB      [19] 2322 	sub	a, -5 (ix)
   0C4B C2r2Fr0D      [10] 2323 	jp	NZ,00187$
                           2324 ;src/main.c:483: if (dist > 10) {
   0C4E DD 7E FC      [19] 2325 	ld	a,-4 (ix)
   0C51 B7            [ 4] 2326 	or	a, a
   0C52 CArF7r11      [10] 2327 	jp	Z,00189$
                           2328 ;src/main.c:484: if (dx < enemy->x) { // izquierda
   0C55 DD 6E F7      [19] 2329 	ld	l,-9 (ix)
   0C58 DD 66 F8      [19] 2330 	ld	h,-8 (ix)
   0C5B 46            [ 7] 2331 	ld	b,(hl)
   0C5C DD 7E 06      [19] 2332 	ld	a,6 (ix)
   0C5F 90            [ 4] 2333 	sub	a, b
   0C60 30 63         [12] 2334 	jr	NC,00110$
                           2335 ;src/main.c:485: if(*getTilePtr(enemy->x - 1, enemy->y) <= 2
   0C62 05            [ 4] 2336 	dec	b
   0C63 DD 7E FB      [19] 2337 	ld	a,-5 (ix)
   0C66 F5            [11] 2338 	push	af
   0C67 33            [ 6] 2339 	inc	sp
   0C68 C5            [11] 2340 	push	bc
   0C69 33            [ 6] 2341 	inc	sp
   0C6A CDr0Br01      [17] 2342 	call	_getTilePtr
   0C6D F1            [10] 2343 	pop	af
   0C6E 4E            [ 7] 2344 	ld	c,(hl)
   0C6F 3E 02         [ 7] 2345 	ld	a,#0x02
   0C71 91            [ 4] 2346 	sub	a, c
   0C72 DArF7r11      [10] 2347 	jp	C,00189$
                           2348 ;src/main.c:486: && *getTilePtr(enemy->x - 1, enemy->y + G_ENEMY_H/2) <= 2
   0C75 DD 6E F9      [19] 2349 	ld	l,-7 (ix)
   0C78 DD 66 FA      [19] 2350 	ld	h,-6 (ix)
   0C7B 7E            [ 7] 2351 	ld	a,(hl)
   0C7C C6 0B         [ 7] 2352 	add	a, #0x0B
   0C7E 57            [ 4] 2353 	ld	d,a
   0C7F DD 6E F7      [19] 2354 	ld	l,-9 (ix)
   0C82 DD 66 F8      [19] 2355 	ld	h,-8 (ix)
   0C85 46            [ 7] 2356 	ld	b,(hl)
   0C86 05            [ 4] 2357 	dec	b
   0C87 D5            [11] 2358 	push	de
   0C88 33            [ 6] 2359 	inc	sp
   0C89 C5            [11] 2360 	push	bc
   0C8A 33            [ 6] 2361 	inc	sp
   0C8B CDr0Br01      [17] 2362 	call	_getTilePtr
   0C8E F1            [10] 2363 	pop	af
   0C8F 4E            [ 7] 2364 	ld	c,(hl)
   0C90 3E 02         [ 7] 2365 	ld	a,#0x02
   0C92 91            [ 4] 2366 	sub	a, c
   0C93 DArF7r11      [10] 2367 	jp	C,00189$
                           2368 ;src/main.c:487: && *getTilePtr(enemy->x - 1, enemy->y + G_ENEMY_H) <= 2) {
   0C96 DD 6E F9      [19] 2369 	ld	l,-7 (ix)
   0C99 DD 66 FA      [19] 2370 	ld	h,-6 (ix)
   0C9C 7E            [ 7] 2371 	ld	a,(hl)
   0C9D C6 16         [ 7] 2372 	add	a, #0x16
   0C9F 57            [ 4] 2373 	ld	d,a
   0CA0 DD 6E F7      [19] 2374 	ld	l,-9 (ix)
   0CA3 DD 66 F8      [19] 2375 	ld	h,-8 (ix)
   0CA6 46            [ 7] 2376 	ld	b,(hl)
   0CA7 05            [ 4] 2377 	dec	b
   0CA8 D5            [11] 2378 	push	de
   0CA9 33            [ 6] 2379 	inc	sp
   0CAA C5            [11] 2380 	push	bc
   0CAB 33            [ 6] 2381 	inc	sp
   0CAC CDr0Br01      [17] 2382 	call	_getTilePtr
   0CAF F1            [10] 2383 	pop	af
   0CB0 4E            [ 7] 2384 	ld	c,(hl)
   0CB1 3E 02         [ 7] 2385 	ld	a,#0x02
   0CB3 91            [ 4] 2386 	sub	a, c
   0CB4 DArF7r11      [10] 2387 	jp	C,00189$
                           2388 ;src/main.c:488: moverEnemigoIzquierda(enemy);
   0CB7 DD 6E F7      [19] 2389 	ld	l,-9 (ix)
   0CBA DD 66 F8      [19] 2390 	ld	h,-8 (ix)
   0CBD E5            [11] 2391 	push	hl
   0CBE CDr64r08      [17] 2392 	call	_moverEnemigoIzquierda
   0CC1 F1            [10] 2393 	pop	af
                           2394 ;src/main.c:490: mov = 1;
   0CC2 C3rF7r11      [10] 2395 	jp	00189$
   0CC5                    2396 00110$:
                           2397 ;src/main.c:493: if(*getTilePtr(enemy->x + G_ENEMY_W + 1, enemy->y) <= 2
   0CC5 78            [ 4] 2398 	ld	a,b
   0CC6 C6 05         [ 7] 2399 	add	a, #0x05
   0CC8 47            [ 4] 2400 	ld	b,a
   0CC9 DD 7E FB      [19] 2401 	ld	a,-5 (ix)
   0CCC F5            [11] 2402 	push	af
   0CCD 33            [ 6] 2403 	inc	sp
   0CCE C5            [11] 2404 	push	bc
   0CCF 33            [ 6] 2405 	inc	sp
   0CD0 CDr0Br01      [17] 2406 	call	_getTilePtr
   0CD3 F1            [10] 2407 	pop	af
   0CD4 4E            [ 7] 2408 	ld	c,(hl)
   0CD5 3E 02         [ 7] 2409 	ld	a,#0x02
   0CD7 91            [ 4] 2410 	sub	a, c
   0CD8 DArF7r11      [10] 2411 	jp	C,00189$
                           2412 ;src/main.c:494: && *getTilePtr(enemy->x + G_ENEMY_W + 1, enemy->y + G_ENEMY_H/2) <= 2
   0CDB DD 6E F9      [19] 2413 	ld	l,-7 (ix)
   0CDE DD 66 FA      [19] 2414 	ld	h,-6 (ix)
   0CE1 7E            [ 7] 2415 	ld	a,(hl)
   0CE2 C6 0B         [ 7] 2416 	add	a, #0x0B
   0CE4 57            [ 4] 2417 	ld	d,a
   0CE5 DD 6E F7      [19] 2418 	ld	l,-9 (ix)
   0CE8 DD 66 F8      [19] 2419 	ld	h,-8 (ix)
   0CEB 7E            [ 7] 2420 	ld	a,(hl)
   0CEC C6 05         [ 7] 2421 	add	a, #0x05
   0CEE 47            [ 4] 2422 	ld	b,a
   0CEF D5            [11] 2423 	push	de
   0CF0 33            [ 6] 2424 	inc	sp
   0CF1 C5            [11] 2425 	push	bc
   0CF2 33            [ 6] 2426 	inc	sp
   0CF3 CDr0Br01      [17] 2427 	call	_getTilePtr
   0CF6 F1            [10] 2428 	pop	af
   0CF7 4E            [ 7] 2429 	ld	c,(hl)
   0CF8 3E 02         [ 7] 2430 	ld	a,#0x02
   0CFA 91            [ 4] 2431 	sub	a, c
   0CFB DArF7r11      [10] 2432 	jp	C,00189$
                           2433 ;src/main.c:495: && *getTilePtr(enemy->x + G_ENEMY_W + 1, enemy->y + G_ENEMY_H) <= 2) {
   0CFE DD 6E F9      [19] 2434 	ld	l,-7 (ix)
   0D01 DD 66 FA      [19] 2435 	ld	h,-6 (ix)
   0D04 7E            [ 7] 2436 	ld	a,(hl)
   0D05 C6 16         [ 7] 2437 	add	a, #0x16
   0D07 57            [ 4] 2438 	ld	d,a
   0D08 DD 6E F7      [19] 2439 	ld	l,-9 (ix)
   0D0B DD 66 F8      [19] 2440 	ld	h,-8 (ix)
   0D0E 7E            [ 7] 2441 	ld	a,(hl)
   0D0F C6 05         [ 7] 2442 	add	a, #0x05
   0D11 47            [ 4] 2443 	ld	b,a
   0D12 D5            [11] 2444 	push	de
   0D13 33            [ 6] 2445 	inc	sp
   0D14 C5            [11] 2446 	push	bc
   0D15 33            [ 6] 2447 	inc	sp
   0D16 CDr0Br01      [17] 2448 	call	_getTilePtr
   0D19 F1            [10] 2449 	pop	af
   0D1A 4E            [ 7] 2450 	ld	c,(hl)
   0D1B 3E 02         [ 7] 2451 	ld	a,#0x02
   0D1D 91            [ 4] 2452 	sub	a, c
   0D1E DArF7r11      [10] 2453 	jp	C,00189$
                           2454 ;src/main.c:496: moverEnemigoDerecha(enemy);
   0D21 DD 6E F7      [19] 2455 	ld	l,-9 (ix)
   0D24 DD 66 F8      [19] 2456 	ld	h,-8 (ix)
   0D27 E5            [11] 2457 	push	hl
   0D28 CDr54r08      [17] 2458 	call	_moverEnemigoDerecha
   0D2B F1            [10] 2459 	pop	af
                           2460 ;src/main.c:498: mov = 1;
   0D2C C3rF7r11      [10] 2461 	jp	00189$
   0D2F                    2462 00187$:
                           2463 ;src/main.c:503: else if (enemy->x == dx) {
   0D2F DD 6E F7      [19] 2464 	ld	l,-9 (ix)
   0D32 DD 66 F8      [19] 2465 	ld	h,-8 (ix)
   0D35 7E            [ 7] 2466 	ld	a,(hl)
   0D36 DD 77 FD      [19] 2467 	ld	-3 (ix), a
   0D39 DD 96 06      [19] 2468 	sub	a, 6 (ix)
   0D3C C2r1Br0E      [10] 2469 	jp	NZ,00184$
                           2470 ;src/main.c:505: if (dist > 10) {
   0D3F DD 7E FC      [19] 2471 	ld	a,-4 (ix)
   0D42 B7            [ 4] 2472 	or	a, a
   0D43 CArF7r11      [10] 2473 	jp	Z,00189$
                           2474 ;src/main.c:506: if (dy < enemy->y) {
   0D46 DD 7E 07      [19] 2475 	ld	a,7 (ix)
   0D49 DD 96 FB      [19] 2476 	sub	a, -5 (ix)
   0D4C 30 65         [12] 2477 	jr	NC,00123$
                           2478 ;src/main.c:507: if(*getTilePtr(enemy->x, enemy->y - 2) <= 2
   0D4E DD 46 FB      [19] 2479 	ld	b,-5 (ix)
   0D51 05            [ 4] 2480 	dec	b
   0D52 05            [ 4] 2481 	dec	b
   0D53 C5            [11] 2482 	push	bc
   0D54 33            [ 6] 2483 	inc	sp
   0D55 DD 7E FD      [19] 2484 	ld	a,-3 (ix)
   0D58 F5            [11] 2485 	push	af
   0D59 33            [ 6] 2486 	inc	sp
   0D5A CDr0Br01      [17] 2487 	call	_getTilePtr
   0D5D F1            [10] 2488 	pop	af
   0D5E 4E            [ 7] 2489 	ld	c,(hl)
   0D5F 3E 02         [ 7] 2490 	ld	a,#0x02
   0D61 91            [ 4] 2491 	sub	a, c
   0D62 DArF7r11      [10] 2492 	jp	C,00189$
                           2493 ;src/main.c:508: && *getTilePtr(enemy->x + G_ENEMY_W / 2, enemy->y - 2) <= 2
   0D65 DD 6E F9      [19] 2494 	ld	l,-7 (ix)
   0D68 DD 66 FA      [19] 2495 	ld	h,-6 (ix)
   0D6B 46            [ 7] 2496 	ld	b,(hl)
   0D6C 05            [ 4] 2497 	dec	b
   0D6D 05            [ 4] 2498 	dec	b
   0D6E DD 6E F7      [19] 2499 	ld	l,-9 (ix)
   0D71 DD 66 F8      [19] 2500 	ld	h,-8 (ix)
   0D74 56            [ 7] 2501 	ld	d,(hl)
   0D75 14            [ 4] 2502 	inc	d
   0D76 14            [ 4] 2503 	inc	d
   0D77 4A            [ 4] 2504 	ld	c, d
   0D78 C5            [11] 2505 	push	bc
   0D79 CDr0Br01      [17] 2506 	call	_getTilePtr
   0D7C F1            [10] 2507 	pop	af
   0D7D 4E            [ 7] 2508 	ld	c,(hl)
   0D7E 3E 02         [ 7] 2509 	ld	a,#0x02
   0D80 91            [ 4] 2510 	sub	a, c
   0D81 DArF7r11      [10] 2511 	jp	C,00189$
                           2512 ;src/main.c:509: && *getTilePtr(enemy->x + G_ENEMY_W, enemy->y - 2) <= 2) {
   0D84 DD 6E F9      [19] 2513 	ld	l,-7 (ix)
   0D87 DD 66 FA      [19] 2514 	ld	h,-6 (ix)
   0D8A 46            [ 7] 2515 	ld	b,(hl)
   0D8B 05            [ 4] 2516 	dec	b
   0D8C 05            [ 4] 2517 	dec	b
   0D8D DD 6E F7      [19] 2518 	ld	l,-9 (ix)
   0D90 DD 66 F8      [19] 2519 	ld	h,-8 (ix)
   0D93 7E            [ 7] 2520 	ld	a,(hl)
   0D94 C6 04         [ 7] 2521 	add	a, #0x04
   0D96 C5            [11] 2522 	push	bc
   0D97 33            [ 6] 2523 	inc	sp
   0D98 F5            [11] 2524 	push	af
   0D99 33            [ 6] 2525 	inc	sp
   0D9A CDr0Br01      [17] 2526 	call	_getTilePtr
   0D9D F1            [10] 2527 	pop	af
   0D9E 4E            [ 7] 2528 	ld	c,(hl)
   0D9F 3E 02         [ 7] 2529 	ld	a,#0x02
   0DA1 91            [ 4] 2530 	sub	a, c
   0DA2 DArF7r11      [10] 2531 	jp	C,00189$
                           2532 ;src/main.c:510: moverEnemigoArriba(enemy);
   0DA5 DD 6E F7      [19] 2533 	ld	l,-9 (ix)
   0DA8 DD 66 F8      [19] 2534 	ld	h,-8 (ix)
   0DAB E5            [11] 2535 	push	hl
   0DAC CDr16r08      [17] 2536 	call	_moverEnemigoArriba
   0DAF F1            [10] 2537 	pop	af
                           2538 ;src/main.c:512: mov = 1;
   0DB0 C3rF7r11      [10] 2539 	jp	00189$
   0DB3                    2540 00123$:
                           2541 ;src/main.c:515: if(*getTilePtr(enemy->x, enemy->y + G_ENEMY_H + 2) <= 2
   0DB3 DD 7E FB      [19] 2542 	ld	a,-5 (ix)
   0DB6 C6 18         [ 7] 2543 	add	a, #0x18
   0DB8 47            [ 4] 2544 	ld	b,a
   0DB9 C5            [11] 2545 	push	bc
   0DBA 33            [ 6] 2546 	inc	sp
   0DBB DD 7E FD      [19] 2547 	ld	a,-3 (ix)
   0DBE F5            [11] 2548 	push	af
   0DBF 33            [ 6] 2549 	inc	sp
   0DC0 CDr0Br01      [17] 2550 	call	_getTilePtr
   0DC3 F1            [10] 2551 	pop	af
   0DC4 4E            [ 7] 2552 	ld	c,(hl)
   0DC5 3E 02         [ 7] 2553 	ld	a,#0x02
   0DC7 91            [ 4] 2554 	sub	a, c
   0DC8 DArF7r11      [10] 2555 	jp	C,00189$
                           2556 ;src/main.c:516: && *getTilePtr(enemy->x + G_ENEMY_W / 2, enemy->y + G_ENEMY_H + 2) <= 2
   0DCB DD 6E F9      [19] 2557 	ld	l,-7 (ix)
   0DCE DD 66 FA      [19] 2558 	ld	h,-6 (ix)
   0DD1 7E            [ 7] 2559 	ld	a,(hl)
   0DD2 C6 18         [ 7] 2560 	add	a, #0x18
   0DD4 47            [ 4] 2561 	ld	b,a
   0DD5 DD 6E F7      [19] 2562 	ld	l,-9 (ix)
   0DD8 DD 66 F8      [19] 2563 	ld	h,-8 (ix)
   0DDB 56            [ 7] 2564 	ld	d,(hl)
   0DDC 14            [ 4] 2565 	inc	d
   0DDD 14            [ 4] 2566 	inc	d
   0DDE 4A            [ 4] 2567 	ld	c, d
   0DDF C5            [11] 2568 	push	bc
   0DE0 CDr0Br01      [17] 2569 	call	_getTilePtr
   0DE3 F1            [10] 2570 	pop	af
   0DE4 4E            [ 7] 2571 	ld	c,(hl)
   0DE5 3E 02         [ 7] 2572 	ld	a,#0x02
   0DE7 91            [ 4] 2573 	sub	a, c
   0DE8 DArF7r11      [10] 2574 	jp	C,00189$
                           2575 ;src/main.c:517: && *getTilePtr(enemy->x + G_ENEMY_W, enemy->y + G_ENEMY_H + 2) <= 2) {
   0DEB DD 6E F9      [19] 2576 	ld	l,-7 (ix)
   0DEE DD 66 FA      [19] 2577 	ld	h,-6 (ix)
   0DF1 7E            [ 7] 2578 	ld	a,(hl)
   0DF2 C6 18         [ 7] 2579 	add	a, #0x18
   0DF4 47            [ 4] 2580 	ld	b,a
   0DF5 DD 6E F7      [19] 2581 	ld	l,-9 (ix)
   0DF8 DD 66 F8      [19] 2582 	ld	h,-8 (ix)
   0DFB 7E            [ 7] 2583 	ld	a,(hl)
   0DFC C6 04         [ 7] 2584 	add	a, #0x04
   0DFE C5            [11] 2585 	push	bc
   0DFF 33            [ 6] 2586 	inc	sp
   0E00 F5            [11] 2587 	push	af
   0E01 33            [ 6] 2588 	inc	sp
   0E02 CDr0Br01      [17] 2589 	call	_getTilePtr
   0E05 F1            [10] 2590 	pop	af
   0E06 4E            [ 7] 2591 	ld	c,(hl)
   0E07 3E 02         [ 7] 2592 	ld	a,#0x02
   0E09 91            [ 4] 2593 	sub	a, c
   0E0A DArF7r11      [10] 2594 	jp	C,00189$
                           2595 ;src/main.c:518: moverEnemigoAbajo(enemy);
   0E0D DD 6E F7      [19] 2596 	ld	l,-9 (ix)
   0E10 DD 66 F8      [19] 2597 	ld	h,-8 (ix)
   0E13 E5            [11] 2598 	push	hl
   0E14 CDr35r08      [17] 2599 	call	_moverEnemigoAbajo
   0E17 F1            [10] 2600 	pop	af
                           2601 ;src/main.c:520: mov = 1;
   0E18 C3rF7r11      [10] 2602 	jp	00189$
   0E1B                    2603 00184$:
                           2604 ;src/main.c:526: if (dist > 20) {
   0E1B 3E 14         [ 7] 2605 	ld	a,#0x14
   0E1D DD 96 F5      [19] 2606 	sub	a, -11 (ix)
   0E20 D2rF7r11      [10] 2607 	jp	NC,00189$
                           2608 ;src/main.c:527: if (dx < enemy->x) {
   0E23 DD 7E 06      [19] 2609 	ld	a,6 (ix)
   0E26 DD 96 FD      [19] 2610 	sub	a, -3 (ix)
   0E29 30 6F         [12] 2611 	jr	NC,00136$
                           2612 ;src/main.c:528: if(*getTilePtr(enemy->x - 1, enemy->y) <= 2
   0E2B DD 46 FD      [19] 2613 	ld	b,-3 (ix)
   0E2E 05            [ 4] 2614 	dec	b
   0E2F DD 7E FB      [19] 2615 	ld	a,-5 (ix)
   0E32 F5            [11] 2616 	push	af
   0E33 33            [ 6] 2617 	inc	sp
   0E34 C5            [11] 2618 	push	bc
   0E35 33            [ 6] 2619 	inc	sp
   0E36 CDr0Br01      [17] 2620 	call	_getTilePtr
   0E39 F1            [10] 2621 	pop	af
   0E3A 4E            [ 7] 2622 	ld	c,(hl)
   0E3B 3E 02         [ 7] 2623 	ld	a,#0x02
   0E3D 91            [ 4] 2624 	sub	a, c
   0E3E DAr08r0F      [10] 2625 	jp	C,00137$
                           2626 ;src/main.c:529: && *getTilePtr(enemy->x - 1, enemy->y + G_ENEMY_H/2) <= 2
   0E41 DD 6E F9      [19] 2627 	ld	l,-7 (ix)
   0E44 DD 66 FA      [19] 2628 	ld	h,-6 (ix)
   0E47 7E            [ 7] 2629 	ld	a,(hl)
   0E48 C6 0B         [ 7] 2630 	add	a, #0x0B
   0E4A 4F            [ 4] 2631 	ld	c,a
   0E4B DD 6E F7      [19] 2632 	ld	l,-9 (ix)
   0E4E DD 66 F8      [19] 2633 	ld	h,-8 (ix)
   0E51 46            [ 7] 2634 	ld	b,(hl)
   0E52 05            [ 4] 2635 	dec	b
   0E53 79            [ 4] 2636 	ld	a,c
   0E54 F5            [11] 2637 	push	af
   0E55 33            [ 6] 2638 	inc	sp
   0E56 C5            [11] 2639 	push	bc
   0E57 33            [ 6] 2640 	inc	sp
   0E58 CDr0Br01      [17] 2641 	call	_getTilePtr
   0E5B F1            [10] 2642 	pop	af
   0E5C 4E            [ 7] 2643 	ld	c,(hl)
   0E5D 3E 02         [ 7] 2644 	ld	a,#0x02
   0E5F 91            [ 4] 2645 	sub	a, c
   0E60 DAr08r0F      [10] 2646 	jp	C,00137$
                           2647 ;src/main.c:530: && *getTilePtr(enemy->x - 1, enemy->y + G_ENEMY_H) <= 2) {
   0E63 DD 6E F9      [19] 2648 	ld	l,-7 (ix)
   0E66 DD 66 FA      [19] 2649 	ld	h,-6 (ix)
   0E69 7E            [ 7] 2650 	ld	a,(hl)
   0E6A C6 16         [ 7] 2651 	add	a, #0x16
   0E6C 4F            [ 4] 2652 	ld	c,a
   0E6D DD 6E F7      [19] 2653 	ld	l,-9 (ix)
   0E70 DD 66 F8      [19] 2654 	ld	h,-8 (ix)
   0E73 46            [ 7] 2655 	ld	b,(hl)
   0E74 05            [ 4] 2656 	dec	b
   0E75 79            [ 4] 2657 	ld	a,c
   0E76 F5            [11] 2658 	push	af
   0E77 33            [ 6] 2659 	inc	sp
   0E78 C5            [11] 2660 	push	bc
   0E79 33            [ 6] 2661 	inc	sp
   0E7A CDr0Br01      [17] 2662 	call	_getTilePtr
   0E7D F1            [10] 2663 	pop	af
   0E7E 4E            [ 7] 2664 	ld	c,(hl)
   0E7F 3E 02         [ 7] 2665 	ld	a,#0x02
   0E81 91            [ 4] 2666 	sub	a, c
   0E82 DAr08r0F      [10] 2667 	jp	C,00137$
                           2668 ;src/main.c:531: moverEnemigoIzquierda(enemy);
   0E85 DD 6E F7      [19] 2669 	ld	l,-9 (ix)
   0E88 DD 66 F8      [19] 2670 	ld	h,-8 (ix)
   0E8B E5            [11] 2671 	push	hl
   0E8C CDr64r08      [17] 2672 	call	_moverEnemigoIzquierda
   0E8F F1            [10] 2673 	pop	af
                           2674 ;src/main.c:532: movX = 1;
   0E90 DD 36 F4 01   [19] 2675 	ld	-12 (ix),#0x01
                           2676 ;src/main.c:533: mov = 1;
   0E94 DD 36 F3 01   [19] 2677 	ld	-13 (ix),#0x01
   0E98 18 6E         [12] 2678 	jr	00137$
   0E9A                    2679 00136$:
                           2680 ;src/main.c:536: if(*getTilePtr(enemy->x + G_ENEMY_W + 1, enemy->y) <= 2
   0E9A DD 7E FD      [19] 2681 	ld	a,-3 (ix)
   0E9D C6 05         [ 7] 2682 	add	a, #0x05
   0E9F 47            [ 4] 2683 	ld	b,a
   0EA0 DD 7E FB      [19] 2684 	ld	a,-5 (ix)
   0EA3 F5            [11] 2685 	push	af
   0EA4 33            [ 6] 2686 	inc	sp
   0EA5 C5            [11] 2687 	push	bc
   0EA6 33            [ 6] 2688 	inc	sp
   0EA7 CDr0Br01      [17] 2689 	call	_getTilePtr
   0EAA F1            [10] 2690 	pop	af
   0EAB 4E            [ 7] 2691 	ld	c,(hl)
   0EAC 3E 02         [ 7] 2692 	ld	a,#0x02
   0EAE 91            [ 4] 2693 	sub	a, c
   0EAF 38 57         [12] 2694 	jr	C,00137$
                           2695 ;src/main.c:537: && *getTilePtr(enemy->x + G_ENEMY_W + 1, enemy->y + G_ENEMY_H/2) <= 2
   0EB1 DD 6E F9      [19] 2696 	ld	l,-7 (ix)
   0EB4 DD 66 FA      [19] 2697 	ld	h,-6 (ix)
   0EB7 7E            [ 7] 2698 	ld	a,(hl)
   0EB8 C6 0B         [ 7] 2699 	add	a, #0x0B
   0EBA 57            [ 4] 2700 	ld	d,a
   0EBB DD 6E F7      [19] 2701 	ld	l,-9 (ix)
   0EBE DD 66 F8      [19] 2702 	ld	h,-8 (ix)
   0EC1 7E            [ 7] 2703 	ld	a,(hl)
   0EC2 C6 05         [ 7] 2704 	add	a, #0x05
   0EC4 47            [ 4] 2705 	ld	b,a
   0EC5 D5            [11] 2706 	push	de
   0EC6 33            [ 6] 2707 	inc	sp
   0EC7 C5            [11] 2708 	push	bc
   0EC8 33            [ 6] 2709 	inc	sp
   0EC9 CDr0Br01      [17] 2710 	call	_getTilePtr
   0ECC F1            [10] 2711 	pop	af
   0ECD 4E            [ 7] 2712 	ld	c,(hl)
   0ECE 3E 02         [ 7] 2713 	ld	a,#0x02
   0ED0 91            [ 4] 2714 	sub	a, c
   0ED1 38 35         [12] 2715 	jr	C,00137$
                           2716 ;src/main.c:538: && *getTilePtr(enemy->x + G_ENEMY_W + 1, enemy->y + G_ENEMY_H) <= 2) {
   0ED3 DD 6E F9      [19] 2717 	ld	l,-7 (ix)
   0ED6 DD 66 FA      [19] 2718 	ld	h,-6 (ix)
   0ED9 7E            [ 7] 2719 	ld	a,(hl)
   0EDA C6 16         [ 7] 2720 	add	a, #0x16
   0EDC 57            [ 4] 2721 	ld	d,a
   0EDD DD 6E F7      [19] 2722 	ld	l,-9 (ix)
   0EE0 DD 66 F8      [19] 2723 	ld	h,-8 (ix)
   0EE3 7E            [ 7] 2724 	ld	a,(hl)
   0EE4 C6 05         [ 7] 2725 	add	a, #0x05
   0EE6 47            [ 4] 2726 	ld	b,a
   0EE7 D5            [11] 2727 	push	de
   0EE8 33            [ 6] 2728 	inc	sp
   0EE9 C5            [11] 2729 	push	bc
   0EEA 33            [ 6] 2730 	inc	sp
   0EEB CDr0Br01      [17] 2731 	call	_getTilePtr
   0EEE F1            [10] 2732 	pop	af
   0EEF 4E            [ 7] 2733 	ld	c,(hl)
   0EF0 3E 02         [ 7] 2734 	ld	a,#0x02
   0EF2 91            [ 4] 2735 	sub	a, c
   0EF3 38 13         [12] 2736 	jr	C,00137$
                           2737 ;src/main.c:539: moverEnemigoDerecha(enemy);
   0EF5 DD 6E F7      [19] 2738 	ld	l,-9 (ix)
   0EF8 DD 66 F8      [19] 2739 	ld	h,-8 (ix)
   0EFB E5            [11] 2740 	push	hl
   0EFC CDr54r08      [17] 2741 	call	_moverEnemigoDerecha
   0EFF F1            [10] 2742 	pop	af
                           2743 ;src/main.c:540: movX = 1;
   0F00 DD 36 F4 01   [19] 2744 	ld	-12 (ix),#0x01
                           2745 ;src/main.c:541: mov = 1;
   0F04 DD 36 F3 01   [19] 2746 	ld	-13 (ix),#0x01
   0F08                    2747 00137$:
                           2748 ;src/main.c:544: if (dy < enemy->y) {
   0F08 DD 6E F9      [19] 2749 	ld	l,-7 (ix)
   0F0B DD 66 FA      [19] 2750 	ld	h,-6 (ix)
   0F0E 7E            [ 7] 2751 	ld	a,(hl)
   0F0F DD 77 FD      [19] 2752 	ld	-3 (ix),a
                           2753 ;src/main.c:473: u8 difx = abs(enemy->x - prota.x); // calculo distancia para mantener una dist
   0F12 DD 6E F7      [19] 2754 	ld	l,-9 (ix)
   0F15 DD 66 F8      [19] 2755 	ld	h,-8 (ix)
   0F18 7E            [ 7] 2756 	ld	a,(hl)
   0F19 DD 77 FC      [19] 2757 	ld	-4 (ix),a
                           2758 ;src/main.c:544: if (dy < enemy->y) {
   0F1C DD 7E 07      [19] 2759 	ld	a,7 (ix)
   0F1F DD 96 FD      [19] 2760 	sub	a, -3 (ix)
   0F22 D2rA8r0F      [10] 2761 	jp	NC,00147$
                           2762 ;src/main.c:545: if(*getTilePtr(enemy->x, enemy->y - 2) <= 2
   0F25 DD 7E FD      [19] 2763 	ld	a,-3 (ix)
   0F28 C6 FE         [ 7] 2764 	add	a,#0xFE
   0F2A DD 77 FB      [19] 2765 	ld	-5 (ix), a
   0F2D F5            [11] 2766 	push	af
   0F2E 33            [ 6] 2767 	inc	sp
   0F2F DD 7E FC      [19] 2768 	ld	a,-4 (ix)
   0F32 F5            [11] 2769 	push	af
   0F33 33            [ 6] 2770 	inc	sp
   0F34 CDr0Br01      [17] 2771 	call	_getTilePtr
   0F37 F1            [10] 2772 	pop	af
   0F38 DD 74 FF      [19] 2773 	ld	-1 (ix),h
   0F3B DD 75 FE      [19] 2774 	ld	-2 (ix), l
   0F3E DD 66 FF      [19] 2775 	ld	h,-1 (ix)
   0F41 4E            [ 7] 2776 	ld	c,(hl)
   0F42 3E 02         [ 7] 2777 	ld	a,#0x02
   0F44 91            [ 4] 2778 	sub	a, c
   0F45 DAr14r10      [10] 2779 	jp	C,00148$
                           2780 ;src/main.c:546: && *getTilePtr(enemy->x + G_ENEMY_W / 2, enemy->y - 2) <= 2
   0F48 DD 6E F9      [19] 2781 	ld	l,-7 (ix)
   0F4B DD 66 FA      [19] 2782 	ld	h,-6 (ix)
   0F4E 7E            [ 7] 2783 	ld	a,(hl)
   0F4F DD 77 FE      [19] 2784 	ld	-2 (ix), a
   0F52 C6 FE         [ 7] 2785 	add	a,#0xFE
   0F54 DD 77 FE      [19] 2786 	ld	-2 (ix),a
   0F57 DD 6E F7      [19] 2787 	ld	l,-9 (ix)
   0F5A DD 66 F8      [19] 2788 	ld	h,-8 (ix)
   0F5D 46            [ 7] 2789 	ld	b,(hl)
   0F5E 04            [ 4] 2790 	inc	b
   0F5F 04            [ 4] 2791 	inc	b
   0F60 DD 7E FE      [19] 2792 	ld	a,-2 (ix)
   0F63 F5            [11] 2793 	push	af
   0F64 33            [ 6] 2794 	inc	sp
   0F65 C5            [11] 2795 	push	bc
   0F66 33            [ 6] 2796 	inc	sp
   0F67 CDr0Br01      [17] 2797 	call	_getTilePtr
   0F6A F1            [10] 2798 	pop	af
   0F6B 4E            [ 7] 2799 	ld	c,(hl)
   0F6C 3E 02         [ 7] 2800 	ld	a,#0x02
   0F6E 91            [ 4] 2801 	sub	a, c
   0F6F DAr14r10      [10] 2802 	jp	C,00148$
                           2803 ;src/main.c:547: && *getTilePtr(enemy->x + G_ENEMY_W, enemy->y - 2) <= 2) {
   0F72 DD 6E F9      [19] 2804 	ld	l,-7 (ix)
   0F75 DD 66 FA      [19] 2805 	ld	h,-6 (ix)
   0F78 46            [ 7] 2806 	ld	b,(hl)
   0F79 05            [ 4] 2807 	dec	b
   0F7A 05            [ 4] 2808 	dec	b
   0F7B DD 6E F7      [19] 2809 	ld	l,-9 (ix)
   0F7E DD 66 F8      [19] 2810 	ld	h,-8 (ix)
   0F81 7E            [ 7] 2811 	ld	a,(hl)
   0F82 C6 04         [ 7] 2812 	add	a, #0x04
   0F84 C5            [11] 2813 	push	bc
   0F85 33            [ 6] 2814 	inc	sp
   0F86 F5            [11] 2815 	push	af
   0F87 33            [ 6] 2816 	inc	sp
   0F88 CDr0Br01      [17] 2817 	call	_getTilePtr
   0F8B F1            [10] 2818 	pop	af
   0F8C 4E            [ 7] 2819 	ld	c,(hl)
   0F8D 3E 02         [ 7] 2820 	ld	a,#0x02
   0F8F 91            [ 4] 2821 	sub	a, c
   0F90 DAr14r10      [10] 2822 	jp	C,00148$
                           2823 ;src/main.c:548: moverEnemigoArriba(enemy);
   0F93 DD 6E F7      [19] 2824 	ld	l,-9 (ix)
   0F96 DD 66 F8      [19] 2825 	ld	h,-8 (ix)
   0F99 E5            [11] 2826 	push	hl
   0F9A CDr16r08      [17] 2827 	call	_moverEnemigoArriba
   0F9D F1            [10] 2828 	pop	af
                           2829 ;src/main.c:549: movY = 1;
   0F9E DD 36 F6 01   [19] 2830 	ld	-10 (ix),#0x01
                           2831 ;src/main.c:550: mov = 1;
   0FA2 DD 36 F3 01   [19] 2832 	ld	-13 (ix),#0x01
   0FA6 18 6C         [12] 2833 	jr	00148$
   0FA8                    2834 00147$:
                           2835 ;src/main.c:553: if(*getTilePtr(enemy->x, enemy->y + G_ENEMY_H + 2) <= 2
   0FA8 DD 7E FD      [19] 2836 	ld	a,-3 (ix)
   0FAB C6 18         [ 7] 2837 	add	a, #0x18
   0FAD 47            [ 4] 2838 	ld	b,a
   0FAE C5            [11] 2839 	push	bc
   0FAF 33            [ 6] 2840 	inc	sp
   0FB0 DD 7E FC      [19] 2841 	ld	a,-4 (ix)
   0FB3 F5            [11] 2842 	push	af
   0FB4 33            [ 6] 2843 	inc	sp
   0FB5 CDr0Br01      [17] 2844 	call	_getTilePtr
   0FB8 F1            [10] 2845 	pop	af
   0FB9 4E            [ 7] 2846 	ld	c,(hl)
   0FBA 3E 02         [ 7] 2847 	ld	a,#0x02
   0FBC 91            [ 4] 2848 	sub	a, c
   0FBD 38 55         [12] 2849 	jr	C,00148$
                           2850 ;src/main.c:554: && *getTilePtr(enemy->x + G_ENEMY_W / 2, enemy->y + G_ENEMY_H + 2) <= 2
   0FBF DD 6E F9      [19] 2851 	ld	l,-7 (ix)
   0FC2 DD 66 FA      [19] 2852 	ld	h,-6 (ix)
   0FC5 7E            [ 7] 2853 	ld	a,(hl)
   0FC6 C6 18         [ 7] 2854 	add	a, #0x18
   0FC8 57            [ 4] 2855 	ld	d,a
   0FC9 DD 6E F7      [19] 2856 	ld	l,-9 (ix)
   0FCC DD 66 F8      [19] 2857 	ld	h,-8 (ix)
   0FCF 46            [ 7] 2858 	ld	b,(hl)
   0FD0 04            [ 4] 2859 	inc	b
   0FD1 04            [ 4] 2860 	inc	b
   0FD2 D5            [11] 2861 	push	de
   0FD3 33            [ 6] 2862 	inc	sp
   0FD4 C5            [11] 2863 	push	bc
   0FD5 33            [ 6] 2864 	inc	sp
   0FD6 CDr0Br01      [17] 2865 	call	_getTilePtr
   0FD9 F1            [10] 2866 	pop	af
   0FDA 4E            [ 7] 2867 	ld	c,(hl)
   0FDB 3E 02         [ 7] 2868 	ld	a,#0x02
   0FDD 91            [ 4] 2869 	sub	a, c
   0FDE 38 34         [12] 2870 	jr	C,00148$
                           2871 ;src/main.c:555: && *getTilePtr(enemy->x + G_ENEMY_W, enemy->y + G_ENEMY_H + 2) <= 2) {
   0FE0 DD 6E F9      [19] 2872 	ld	l,-7 (ix)
   0FE3 DD 66 FA      [19] 2873 	ld	h,-6 (ix)
   0FE6 7E            [ 7] 2874 	ld	a,(hl)
   0FE7 C6 18         [ 7] 2875 	add	a, #0x18
   0FE9 47            [ 4] 2876 	ld	b,a
   0FEA DD 6E F7      [19] 2877 	ld	l,-9 (ix)
   0FED DD 66 F8      [19] 2878 	ld	h,-8 (ix)
   0FF0 7E            [ 7] 2879 	ld	a,(hl)
   0FF1 C6 04         [ 7] 2880 	add	a, #0x04
   0FF3 C5            [11] 2881 	push	bc
   0FF4 33            [ 6] 2882 	inc	sp
   0FF5 F5            [11] 2883 	push	af
   0FF6 33            [ 6] 2884 	inc	sp
   0FF7 CDr0Br01      [17] 2885 	call	_getTilePtr
   0FFA F1            [10] 2886 	pop	af
   0FFB 4E            [ 7] 2887 	ld	c,(hl)
   0FFC 3E 02         [ 7] 2888 	ld	a,#0x02
   0FFE 91            [ 4] 2889 	sub	a, c
   0FFF 38 13         [12] 2890 	jr	C,00148$
                           2891 ;src/main.c:556: moverEnemigoAbajo(enemy);
   1001 DD 6E F7      [19] 2892 	ld	l,-9 (ix)
   1004 DD 66 F8      [19] 2893 	ld	h,-8 (ix)
   1007 E5            [11] 2894 	push	hl
   1008 CDr35r08      [17] 2895 	call	_moverEnemigoAbajo
   100B F1            [10] 2896 	pop	af
                           2897 ;src/main.c:557: movY = 1;
   100C DD 36 F6 01   [19] 2898 	ld	-10 (ix),#0x01
                           2899 ;src/main.c:558: mov = 1;
   1010 DD 36 F3 01   [19] 2900 	ld	-13 (ix),#0x01
   1014                    2901 00148$:
                           2902 ;src/main.c:561: if (!mov) {
   1014 DD 7E F3      [19] 2903 	ld	a,-13 (ix)
   1017 B7            [ 4] 2904 	or	a, a
   1018 C2rF7r11      [10] 2905 	jp	NZ,00189$
                           2906 ;src/main.c:562: if (!movX) {
   101B DD 7E F4      [19] 2907 	ld	a,-12 (ix)
   101E B7            [ 4] 2908 	or	a, a
   101F C2r07r11      [10] 2909 	jp	NZ,00163$
                           2910 ;src/main.c:563: if (enemy->y > (ORIGEN_MAPA_Y + ALTO_MAPA/2)) {
   1022 DD 6E F9      [19] 2911 	ld	l,-7 (ix)
   1025 DD 66 FA      [19] 2912 	ld	h,-6 (ix)
   1028 5E            [ 7] 2913 	ld	e,(hl)
                           2914 ;src/main.c:473: u8 difx = abs(enemy->x - prota.x); // calculo distancia para mantener una dist
   1029 DD 6E F7      [19] 2915 	ld	l,-9 (ix)
   102C DD 66 F8      [19] 2916 	ld	h,-8 (ix)
   102F 4E            [ 7] 2917 	ld	c,(hl)
                           2918 ;src/main.c:563: if (enemy->y > (ORIGEN_MAPA_Y + ALTO_MAPA/2)) {
   1030 3E 70         [ 7] 2919 	ld	a,#0x70
   1032 93            [ 4] 2920 	sub	a, e
   1033 30 6C         [12] 2921 	jr	NC,00160$
                           2922 ;src/main.c:564: if(*getTilePtr(enemy->x, enemy->y + G_ENEMY_H + 2) <= 2
   1035 7B            [ 4] 2923 	ld	a,e
   1036 C6 18         [ 7] 2924 	add	a, #0x18
   1038 47            [ 4] 2925 	ld	b,a
   1039 C5            [11] 2926 	push	bc
   103A CDr0Br01      [17] 2927 	call	_getTilePtr
   103D F1            [10] 2928 	pop	af
   103E 4E            [ 7] 2929 	ld	c,(hl)
   103F 3E 02         [ 7] 2930 	ld	a,#0x02
   1041 91            [ 4] 2931 	sub	a, c
   1042 38 50         [12] 2932 	jr	C,00150$
                           2933 ;src/main.c:565: && *getTilePtr(enemy->x + G_ENEMY_W / 2, enemy->y + G_ENEMY_H + 2) <= 2
   1044 DD 6E F9      [19] 2934 	ld	l,-7 (ix)
   1047 DD 66 FA      [19] 2935 	ld	h,-6 (ix)
   104A 7E            [ 7] 2936 	ld	a,(hl)
   104B C6 18         [ 7] 2937 	add	a, #0x18
   104D 57            [ 4] 2938 	ld	d,a
   104E DD 6E F7      [19] 2939 	ld	l,-9 (ix)
   1051 DD 66 F8      [19] 2940 	ld	h,-8 (ix)
   1054 4E            [ 7] 2941 	ld	c,(hl)
   1055 41            [ 4] 2942 	ld	b,c
   1056 04            [ 4] 2943 	inc	b
   1057 04            [ 4] 2944 	inc	b
   1058 D5            [11] 2945 	push	de
   1059 33            [ 6] 2946 	inc	sp
   105A C5            [11] 2947 	push	bc
   105B 33            [ 6] 2948 	inc	sp
   105C CDr0Br01      [17] 2949 	call	_getTilePtr
   105F F1            [10] 2950 	pop	af
   1060 4E            [ 7] 2951 	ld	c,(hl)
   1061 3E 02         [ 7] 2952 	ld	a,#0x02
   1063 91            [ 4] 2953 	sub	a, c
   1064 38 2E         [12] 2954 	jr	C,00150$
                           2955 ;src/main.c:566: && *getTilePtr(enemy->x + G_ENEMY_W, enemy->y + G_ENEMY_H + 2) <= 2)
   1066 DD 6E F9      [19] 2956 	ld	l,-7 (ix)
   1069 DD 66 FA      [19] 2957 	ld	h,-6 (ix)
   106C 7E            [ 7] 2958 	ld	a,(hl)
   106D C6 18         [ 7] 2959 	add	a, #0x18
   106F 47            [ 4] 2960 	ld	b,a
   1070 DD 6E F7      [19] 2961 	ld	l,-9 (ix)
   1073 DD 66 F8      [19] 2962 	ld	h,-8 (ix)
   1076 7E            [ 7] 2963 	ld	a,(hl)
   1077 C6 04         [ 7] 2964 	add	a, #0x04
   1079 C5            [11] 2965 	push	bc
   107A 33            [ 6] 2966 	inc	sp
   107B F5            [11] 2967 	push	af
   107C 33            [ 6] 2968 	inc	sp
   107D CDr0Br01      [17] 2969 	call	_getTilePtr
   1080 F1            [10] 2970 	pop	af
   1081 4E            [ 7] 2971 	ld	c,(hl)
   1082 3E 02         [ 7] 2972 	ld	a,#0x02
   1084 91            [ 4] 2973 	sub	a, c
   1085 38 0D         [12] 2974 	jr	C,00150$
                           2975 ;src/main.c:567: moverEnemigoAbajo(enemy);
   1087 DD 6E F7      [19] 2976 	ld	l,-9 (ix)
   108A DD 66 F8      [19] 2977 	ld	h,-8 (ix)
   108D E5            [11] 2978 	push	hl
   108E CDr35r08      [17] 2979 	call	_moverEnemigoAbajo
   1091 F1            [10] 2980 	pop	af
   1092 18 73         [12] 2981 	jr	00163$
   1094                    2982 00150$:
                           2983 ;src/main.c:569: moverEnemigoArriba(enemy);
   1094 DD 6E F7      [19] 2984 	ld	l,-9 (ix)
   1097 DD 66 F8      [19] 2985 	ld	h,-8 (ix)
   109A E5            [11] 2986 	push	hl
   109B CDr16r08      [17] 2987 	call	_moverEnemigoArriba
   109E F1            [10] 2988 	pop	af
   109F 18 66         [12] 2989 	jr	00163$
   10A1                    2990 00160$:
                           2991 ;src/main.c:571: if(*getTilePtr(enemy->x, enemy->y - 2) <= 2
   10A1 43            [ 4] 2992 	ld	b,e
   10A2 05            [ 4] 2993 	dec	b
   10A3 05            [ 4] 2994 	dec	b
   10A4 C5            [11] 2995 	push	bc
   10A5 CDr0Br01      [17] 2996 	call	_getTilePtr
   10A8 F1            [10] 2997 	pop	af
   10A9 4E            [ 7] 2998 	ld	c,(hl)
   10AA 3E 02         [ 7] 2999 	ld	a,#0x02
   10AC 91            [ 4] 3000 	sub	a, c
   10AD 38 4D         [12] 3001 	jr	C,00155$
                           3002 ;src/main.c:572: && *getTilePtr(enemy->x + G_ENEMY_W / 2, enemy->y - 2) <= 2
   10AF DD 6E F9      [19] 3003 	ld	l,-7 (ix)
   10B2 DD 66 FA      [19] 3004 	ld	h,-6 (ix)
   10B5 56            [ 7] 3005 	ld	d,(hl)
   10B6 15            [ 4] 3006 	dec	d
   10B7 15            [ 4] 3007 	dec	d
   10B8 DD 6E F7      [19] 3008 	ld	l,-9 (ix)
   10BB DD 66 F8      [19] 3009 	ld	h,-8 (ix)
   10BE 46            [ 7] 3010 	ld	b,(hl)
   10BF 04            [ 4] 3011 	inc	b
   10C0 04            [ 4] 3012 	inc	b
   10C1 D5            [11] 3013 	push	de
   10C2 33            [ 6] 3014 	inc	sp
   10C3 C5            [11] 3015 	push	bc
   10C4 33            [ 6] 3016 	inc	sp
   10C5 CDr0Br01      [17] 3017 	call	_getTilePtr
   10C8 F1            [10] 3018 	pop	af
   10C9 4E            [ 7] 3019 	ld	c,(hl)
   10CA 3E 02         [ 7] 3020 	ld	a,#0x02
   10CC 91            [ 4] 3021 	sub	a, c
   10CD 38 2D         [12] 3022 	jr	C,00155$
                           3023 ;src/main.c:573: && *getTilePtr(enemy->x + G_ENEMY_W, enemy->y - 2) <= 2)
   10CF DD 6E F9      [19] 3024 	ld	l,-7 (ix)
   10D2 DD 66 FA      [19] 3025 	ld	h,-6 (ix)
   10D5 46            [ 7] 3026 	ld	b,(hl)
   10D6 05            [ 4] 3027 	dec	b
   10D7 05            [ 4] 3028 	dec	b
   10D8 DD 6E F7      [19] 3029 	ld	l,-9 (ix)
   10DB DD 66 F8      [19] 3030 	ld	h,-8 (ix)
   10DE 7E            [ 7] 3031 	ld	a,(hl)
   10DF C6 04         [ 7] 3032 	add	a, #0x04
   10E1 C5            [11] 3033 	push	bc
   10E2 33            [ 6] 3034 	inc	sp
   10E3 F5            [11] 3035 	push	af
   10E4 33            [ 6] 3036 	inc	sp
   10E5 CDr0Br01      [17] 3037 	call	_getTilePtr
   10E8 F1            [10] 3038 	pop	af
   10E9 4E            [ 7] 3039 	ld	c,(hl)
   10EA 3E 02         [ 7] 3040 	ld	a,#0x02
   10EC 91            [ 4] 3041 	sub	a, c
   10ED 38 0D         [12] 3042 	jr	C,00155$
                           3043 ;src/main.c:574: moverEnemigoArriba(enemy);
   10EF DD 6E F7      [19] 3044 	ld	l,-9 (ix)
   10F2 DD 66 F8      [19] 3045 	ld	h,-8 (ix)
   10F5 E5            [11] 3046 	push	hl
   10F6 CDr16r08      [17] 3047 	call	_moverEnemigoArriba
   10F9 F1            [10] 3048 	pop	af
   10FA 18 0B         [12] 3049 	jr	00163$
   10FC                    3050 00155$:
                           3051 ;src/main.c:576: moverEnemigoAbajo(enemy);
   10FC DD 6E F7      [19] 3052 	ld	l,-9 (ix)
   10FF DD 66 F8      [19] 3053 	ld	h,-8 (ix)
   1102 E5            [11] 3054 	push	hl
   1103 CDr35r08      [17] 3055 	call	_moverEnemigoAbajo
   1106 F1            [10] 3056 	pop	af
   1107                    3057 00163$:
                           3058 ;src/main.c:580: if (!movY) {
   1107 DD 7E F6      [19] 3059 	ld	a,-10 (ix)
   110A B7            [ 4] 3060 	or	a, a
   110B C2rF7r11      [10] 3061 	jp	NZ,00189$
                           3062 ;src/main.c:581: if (enemy->x < ANCHO_PANTALLA/2) {
   110E DD 6E F7      [19] 3063 	ld	l,-9 (ix)
   1111 DD 66 F8      [19] 3064 	ld	h,-8 (ix)
   1114 4E            [ 7] 3065 	ld	c,(hl)
                           3066 ;src/main.c:474: u8 dify = abs(enemy->y - prota.y);
   1115 DD 6E F9      [19] 3067 	ld	l,-7 (ix)
   1118 DD 66 FA      [19] 3068 	ld	h,-6 (ix)
   111B 5E            [ 7] 3069 	ld	e,(hl)
                           3070 ;src/main.c:581: if (enemy->x < ANCHO_PANTALLA/2) {
   111C 79            [ 4] 3071 	ld	a,c
   111D D6 28         [ 7] 3072 	sub	a, #0x28
   111F 30 6D         [12] 3073 	jr	NC,00175$
                           3074 ;src/main.c:582: if(*getTilePtr(enemy->x - 1, enemy->y) <= 2
   1121 41            [ 4] 3075 	ld	b,c
   1122 05            [ 4] 3076 	dec	b
   1123 7B            [ 4] 3077 	ld	a,e
   1124 F5            [11] 3078 	push	af
   1125 33            [ 6] 3079 	inc	sp
   1126 C5            [11] 3080 	push	bc
   1127 33            [ 6] 3081 	inc	sp
   1128 CDr0Br01      [17] 3082 	call	_getTilePtr
   112B F1            [10] 3083 	pop	af
   112C 4E            [ 7] 3084 	ld	c,(hl)
   112D 3E 02         [ 7] 3085 	ld	a,#0x02
   112F 91            [ 4] 3086 	sub	a, c
   1130 38 4F         [12] 3087 	jr	C,00165$
                           3088 ;src/main.c:583: && *getTilePtr(enemy->x - 1, enemy->y + G_ENEMY_H/2) <= 2
   1132 DD 6E F9      [19] 3089 	ld	l,-7 (ix)
   1135 DD 66 FA      [19] 3090 	ld	h,-6 (ix)
   1138 7E            [ 7] 3091 	ld	a,(hl)
   1139 C6 0B         [ 7] 3092 	add	a, #0x0B
   113B 4F            [ 4] 3093 	ld	c,a
   113C DD 6E F7      [19] 3094 	ld	l,-9 (ix)
   113F DD 66 F8      [19] 3095 	ld	h,-8 (ix)
   1142 46            [ 7] 3096 	ld	b,(hl)
   1143 05            [ 4] 3097 	dec	b
   1144 79            [ 4] 3098 	ld	a,c
   1145 F5            [11] 3099 	push	af
   1146 33            [ 6] 3100 	inc	sp
   1147 C5            [11] 3101 	push	bc
   1148 33            [ 6] 3102 	inc	sp
   1149 CDr0Br01      [17] 3103 	call	_getTilePtr
   114C F1            [10] 3104 	pop	af
   114D 4E            [ 7] 3105 	ld	c,(hl)
   114E 3E 02         [ 7] 3106 	ld	a,#0x02
   1150 91            [ 4] 3107 	sub	a, c
   1151 38 2E         [12] 3108 	jr	C,00165$
                           3109 ;src/main.c:584: && *getTilePtr(enemy->x - 1, enemy->y + G_ENEMY_H) <= 2) {
   1153 DD 6E F9      [19] 3110 	ld	l,-7 (ix)
   1156 DD 66 FA      [19] 3111 	ld	h,-6 (ix)
   1159 7E            [ 7] 3112 	ld	a,(hl)
   115A C6 16         [ 7] 3113 	add	a, #0x16
   115C 4F            [ 4] 3114 	ld	c,a
   115D DD 6E F7      [19] 3115 	ld	l,-9 (ix)
   1160 DD 66 F8      [19] 3116 	ld	h,-8 (ix)
   1163 46            [ 7] 3117 	ld	b,(hl)
   1164 05            [ 4] 3118 	dec	b
   1165 79            [ 4] 3119 	ld	a,c
   1166 F5            [11] 3120 	push	af
   1167 33            [ 6] 3121 	inc	sp
   1168 C5            [11] 3122 	push	bc
   1169 33            [ 6] 3123 	inc	sp
   116A CDr0Br01      [17] 3124 	call	_getTilePtr
   116D F1            [10] 3125 	pop	af
   116E 4E            [ 7] 3126 	ld	c,(hl)
   116F 3E 02         [ 7] 3127 	ld	a,#0x02
   1171 91            [ 4] 3128 	sub	a, c
   1172 38 0D         [12] 3129 	jr	C,00165$
                           3130 ;src/main.c:585: moverEnemigoIzquierda(enemy);
   1174 DD 6E F7      [19] 3131 	ld	l,-9 (ix)
   1177 DD 66 F8      [19] 3132 	ld	h,-8 (ix)
   117A E5            [11] 3133 	push	hl
   117B CDr64r08      [17] 3134 	call	_moverEnemigoIzquierda
   117E F1            [10] 3135 	pop	af
   117F 18 76         [12] 3136 	jr	00189$
   1181                    3137 00165$:
                           3138 ;src/main.c:587: moverEnemigoDerecha(enemy);
   1181 DD 6E F7      [19] 3139 	ld	l,-9 (ix)
   1184 DD 66 F8      [19] 3140 	ld	h,-8 (ix)
   1187 E5            [11] 3141 	push	hl
   1188 CDr54r08      [17] 3142 	call	_moverEnemigoDerecha
   118B F1            [10] 3143 	pop	af
   118C 18 69         [12] 3144 	jr	00189$
   118E                    3145 00175$:
                           3146 ;src/main.c:590: if(*getTilePtr(enemy->x + G_ENEMY_W + 1, enemy->y) <= 2
   118E 79            [ 4] 3147 	ld	a,c
   118F C6 05         [ 7] 3148 	add	a, #0x05
   1191 47            [ 4] 3149 	ld	b,a
   1192 7B            [ 4] 3150 	ld	a,e
   1193 F5            [11] 3151 	push	af
   1194 33            [ 6] 3152 	inc	sp
   1195 C5            [11] 3153 	push	bc
   1196 33            [ 6] 3154 	inc	sp
   1197 CDr0Br01      [17] 3155 	call	_getTilePtr
   119A F1            [10] 3156 	pop	af
   119B 4E            [ 7] 3157 	ld	c,(hl)
   119C 3E 02         [ 7] 3158 	ld	a,#0x02
   119E 91            [ 4] 3159 	sub	a, c
   119F 38 4B         [12] 3160 	jr	C,00170$
                           3161 ;src/main.c:591: && *getTilePtr(enemy->x + G_ENEMY_W + 1, enemy->y + G_ENEMY_H/2) <= 2
   11A1 DD 6E F9      [19] 3162 	ld	l,-7 (ix)
   11A4 DD 66 FA      [19] 3163 	ld	h,-6 (ix)
   11A7 7E            [ 7] 3164 	ld	a,(hl)
   11A8 C6 0B         [ 7] 3165 	add	a, #0x0B
   11AA 47            [ 4] 3166 	ld	b,a
   11AB DD 6E F7      [19] 3167 	ld	l,-9 (ix)
   11AE DD 66 F8      [19] 3168 	ld	h,-8 (ix)
   11B1 7E            [ 7] 3169 	ld	a,(hl)
   11B2 C6 05         [ 7] 3170 	add	a, #0x05
   11B4 4F            [ 4] 3171 	ld	c,a
   11B5 C5            [11] 3172 	push	bc
   11B6 CDr0Br01      [17] 3173 	call	_getTilePtr
   11B9 F1            [10] 3174 	pop	af
   11BA 4E            [ 7] 3175 	ld	c,(hl)
   11BB 3E 02         [ 7] 3176 	ld	a,#0x02
   11BD 91            [ 4] 3177 	sub	a, c
   11BE 38 2C         [12] 3178 	jr	C,00170$
                           3179 ;src/main.c:592: && *getTilePtr(enemy->x + G_ENEMY_W + 1, enemy->y + G_ENEMY_H) <= 2) {
   11C0 DD 6E F9      [19] 3180 	ld	l,-7 (ix)
   11C3 DD 66 FA      [19] 3181 	ld	h,-6 (ix)
   11C6 7E            [ 7] 3182 	ld	a,(hl)
   11C7 C6 16         [ 7] 3183 	add	a, #0x16
   11C9 47            [ 4] 3184 	ld	b,a
   11CA DD 6E F7      [19] 3185 	ld	l,-9 (ix)
   11CD DD 66 F8      [19] 3186 	ld	h,-8 (ix)
   11D0 7E            [ 7] 3187 	ld	a,(hl)
   11D1 C6 05         [ 7] 3188 	add	a, #0x05
   11D3 4F            [ 4] 3189 	ld	c,a
   11D4 C5            [11] 3190 	push	bc
   11D5 CDr0Br01      [17] 3191 	call	_getTilePtr
   11D8 F1            [10] 3192 	pop	af
   11D9 4E            [ 7] 3193 	ld	c,(hl)
   11DA 3E 02         [ 7] 3194 	ld	a,#0x02
   11DC 91            [ 4] 3195 	sub	a, c
   11DD 38 0D         [12] 3196 	jr	C,00170$
                           3197 ;src/main.c:593: moverEnemigoDerecha(enemy);
   11DF DD 6E F7      [19] 3198 	ld	l,-9 (ix)
   11E2 DD 66 F8      [19] 3199 	ld	h,-8 (ix)
   11E5 E5            [11] 3200 	push	hl
   11E6 CDr54r08      [17] 3201 	call	_moverEnemigoDerecha
   11E9 F1            [10] 3202 	pop	af
   11EA 18 0B         [12] 3203 	jr	00189$
   11EC                    3204 00170$:
                           3205 ;src/main.c:596: moverEnemigoIzquierda(enemy);
   11EC DD 6E F7      [19] 3206 	ld	l,-9 (ix)
   11EF DD 66 F8      [19] 3207 	ld	h,-8 (ix)
   11F2 E5            [11] 3208 	push	hl
   11F3 CDr64r08      [17] 3209 	call	_moverEnemigoIzquierda
   11F6 F1            [10] 3210 	pop	af
   11F7                    3211 00189$:
   11F7 DD F9         [10] 3212 	ld	sp, ix
   11F9 DD E1         [14] 3213 	pop	ix
   11FB C9            [10] 3214 	ret
                           3215 ;src/main.c:605: void updateEnemies() { // maquina de estados
                           3216 ;	---------------------------------
                           3217 ; Function updateEnemies
                           3218 ; ---------------------------------
   11FC                    3219 _updateEnemies::
   11FC DD E5         [15] 3220 	push	ix
   11FE DD 21 00 00   [14] 3221 	ld	ix,#0
   1202 DD 39         [15] 3222 	add	ix,sp
   1204 21 FA FF      [10] 3223 	ld	hl,#-6
   1207 39            [11] 3224 	add	hl,sp
   1208 F9            [ 6] 3225 	ld	sp,hl
                           3226 ;src/main.c:607: u8 i = 1 + 1;
   1209 DD 36 FA 02   [19] 3227 	ld	-6 (ix),#0x02
                           3228 ;src/main.c:610: actual = enemy;
                           3229 ;src/main.c:612: while (--i) {
   120D DD 36 FCr02   [19] 3230 	ld	-4 (ix),#<(_enemy)
   1211 DD 36 FDs00   [19] 3231 	ld	-3 (ix),#>(_enemy)
   1215 DD 36 FEr02   [19] 3232 	ld	-2 (ix),#<(_enemy)
   1219 DD 36 FFs00   [19] 3233 	ld	-1 (ix),#>(_enemy)
   121D                    3234 00123$:
   121D DD 35 FA      [23] 3235 	dec	-6 (ix)
   1220 DD 4E FA      [19] 3236 	ld	c, -6 (ix)
   1223 79            [ 4] 3237 	ld	a,c
   1224 B7            [ 4] 3238 	or	a, a
   1225 CArFAr12      [10] 3239 	jp	Z,00126$
                           3240 ;src/main.c:613: if (actual->engage) { // prioridad a la persecucion, nunca te deja
   1228 3Ar18r00      [13] 3241 	ld	a, (#(_enemy + 0x0016) + 0)
   122B B7            [ 4] 3242 	or	a, a
   122C 28 1C         [12] 3243 	jr	Z,00121$
                           3244 ;src/main.c:614: engage(actual, prota.x, prota.y);
   122E 3Ar13r05      [13] 3245 	ld	a,(#(_prota + 0x0001) + 0)
   1231 DD 77 FB      [19] 3246 	ld	-5 (ix),a
   1234 21r12r05      [10] 3247 	ld	hl, #_prota + 0
   1237 46            [ 7] 3248 	ld	b,(hl)
   1238 DD 7E FB      [19] 3249 	ld	a,-5 (ix)
   123B F5            [11] 3250 	push	af
   123C 33            [ 6] 3251 	inc	sp
   123D C5            [11] 3252 	push	bc
   123E 33            [ 6] 3253 	inc	sp
   123F 21r02r00      [10] 3254 	ld	hl,#_enemy
   1242 E5            [11] 3255 	push	hl
   1243 CDrC0r0B      [17] 3256 	call	_engage
   1246 F1            [10] 3257 	pop	af
   1247 F1            [10] 3258 	pop	af
   1248 18 D3         [12] 3259 	jr	00123$
   124A                    3260 00121$:
                           3261 ;src/main.c:617: if (actual->patrolling) { // esta patrullando
   124A 3Ar0Dr00      [13] 3262 	ld	a, (#(_enemy + 0x000b) + 0)
   124D B7            [ 4] 3263 	or	a, a
   124E 28 61         [12] 3264 	jr	Z,00118$
                           3265 ;src/main.c:618: if (!actual->seen && !actual->inRange) {
   1250 21r14r00      [10] 3266 	ld	hl, #(_enemy + 0x0012) + 0
   1253 4E            [ 7] 3267 	ld	c,(hl)
   1254 79            [ 4] 3268 	ld	a,c
   1255 B7            [ 4] 3269 	or	a, a
   1256 20 10         [12] 3270 	jr	NZ,00107$
   1258 3Ar13r00      [13] 3271 	ld	a, (#(_enemy + 0x0011) + 0)
   125B B7            [ 4] 3272 	or	a, a
   125C 20 0A         [12] 3273 	jr	NZ,00107$
                           3274 ;src/main.c:619: patrol(actual);
   125E 21r02r00      [10] 3275 	ld	hl,#_enemy
   1261 E5            [11] 3276 	push	hl
   1262 CDrA4r0B      [17] 3277 	call	_patrol
   1265 F1            [10] 3278 	pop	af
   1266 18 B5         [12] 3279 	jr	00123$
   1268                    3280 00107$:
                           3281 ;src/main.c:620: }else if (actual->inRange) {
   1268 21r13r00      [10] 3282 	ld	hl, #(_enemy + 0x0011) + 0
   126B 46            [ 7] 3283 	ld	b,(hl)
                           3284 ;src/main.c:623: actual->onPathPatrol = 0;
   126C 11r0Er00      [10] 3285 	ld	de,#_enemy + 12
                           3286 ;src/main.c:620: }else if (actual->inRange) {
   126F 78            [ 4] 3287 	ld	a,b
   1270 B7            [ 4] 3288 	or	a, a
   1271 28 25         [12] 3289 	jr	Z,00104$
                           3290 ;src/main.c:621: engage(actual, prota.x, prota.y);
   1273 21r13r05      [10] 3291 	ld	hl, #(_prota + 0x0001) + 0
   1276 46            [ 7] 3292 	ld	b,(hl)
   1277 3Ar12r05      [13] 3293 	ld	a, (#_prota + 0)
   127A D5            [11] 3294 	push	de
   127B C5            [11] 3295 	push	bc
   127C 33            [ 6] 3296 	inc	sp
   127D F5            [11] 3297 	push	af
   127E 33            [ 6] 3298 	inc	sp
   127F 21r02r00      [10] 3299 	ld	hl,#_enemy
   1282 E5            [11] 3300 	push	hl
   1283 CDrC0r0B      [17] 3301 	call	_engage
   1286 F1            [10] 3302 	pop	af
   1287 F1            [10] 3303 	pop	af
   1288 D1            [10] 3304 	pop	de
                           3305 ;src/main.c:622: actual->patrolling = 0;
   1289 21r0Dr00      [10] 3306 	ld	hl,#(_enemy + 0x000b)
   128C 36 00         [10] 3307 	ld	(hl),#0x00
                           3308 ;src/main.c:623: actual->onPathPatrol = 0;
   128E AF            [ 4] 3309 	xor	a, a
   128F 12            [ 7] 3310 	ld	(de),a
                           3311 ;src/main.c:624: actual->engage = 1;
   1290 21r18r00      [10] 3312 	ld	hl,#(_enemy + 0x0016)
   1293 36 01         [10] 3313 	ld	(hl),#0x01
   1295 C3r1Dr12      [10] 3314 	jp	00123$
   1298                    3315 00104$:
                           3316 ;src/main.c:625: } else if (actual->seen) {
   1298 79            [ 4] 3317 	ld	a,c
   1299 B7            [ 4] 3318 	or	a, a
   129A CAr1Dr12      [10] 3319 	jp	Z,00123$
                           3320 ;src/main.c:628: actual->iter=0;
   129D 21r11r00      [10] 3321 	ld	hl,#(_enemy + 0x000f)
   12A0 36 00         [10] 3322 	ld	(hl),#0x00
                           3323 ;src/main.c:629: actual->reversePatrol = NO;
   12A2 21r0Fr00      [10] 3324 	ld	hl,#(_enemy + 0x000d)
   12A5 36 00         [10] 3325 	ld	(hl),#0x00
                           3326 ;src/main.c:630: actual->patrolling = 0;
   12A7 21r0Dr00      [10] 3327 	ld	hl,#(_enemy + 0x000b)
   12AA 36 00         [10] 3328 	ld	(hl),#0x00
                           3329 ;src/main.c:631: actual->onPathPatrol = 0;
   12AC AF            [ 4] 3330 	xor	a, a
   12AD 12            [ 7] 3331 	ld	(de),a
   12AE C3r1Dr12      [10] 3332 	jp	00123$
   12B1                    3333 00118$:
                           3334 ;src/main.c:633: } else if (actual->seek) { // esta buscando
   12B1 DD 6E FC      [19] 3335 	ld	l,-4 (ix)
   12B4 DD 66 FD      [19] 3336 	ld	h,-3 (ix)
   12B7 11 14 00      [10] 3337 	ld	de, #0x0014
   12BA 19            [11] 3338 	add	hl, de
   12BB 7E            [ 7] 3339 	ld	a,(hl)
   12BC B7            [ 4] 3340 	or	a, a
   12BD CAr1Dr12      [10] 3341 	jp	Z,00123$
                           3342 ;src/main.c:634: if (!actual->found /*&& actual->seekTimer <= 5*/) {
   12C0 DD 6E FE      [19] 3343 	ld	l,-2 (ix)
   12C3 DD 66 FF      [19] 3344 	ld	h,-1 (ix)
   12C6 11 13 00      [10] 3345 	ld	de, #0x0013
   12C9 19            [11] 3346 	add	hl, de
   12CA 7E            [ 7] 3347 	ld	a,(hl)
   12CB B7            [ 4] 3348 	or	a, a
   12CC 20 0B         [12] 3349 	jr	NZ,00113$
                           3350 ;src/main.c:635: seek(actual); // buscar en posiciones cercanas a la actual
   12CE 21r02r00      [10] 3351 	ld	hl,#_enemy
   12D1 E5            [11] 3352 	push	hl
   12D2 CDrB6r0B      [17] 3353 	call	_seek
   12D5 F1            [10] 3354 	pop	af
   12D6 C3r1Dr12      [10] 3355 	jp	00123$
   12D9                    3356 00113$:
                           3357 ;src/main.c:636: } else if (actual->inRange) {
   12D9 3Ar13r00      [13] 3358 	ld	a, (#(_enemy + 0x0011) + 0)
   12DC B7            [ 4] 3359 	or	a, a
   12DD CAr1Dr12      [10] 3360 	jp	Z,00123$
                           3361 ;src/main.c:637: engage(actual, prota.x, prota.y);
   12E0 21r13r05      [10] 3362 	ld	hl, #(_prota + 0x0001) + 0
   12E3 46            [ 7] 3363 	ld	b,(hl)
   12E4 21r12r05      [10] 3364 	ld	hl, #_prota + 0
   12E7 4E            [ 7] 3365 	ld	c, (hl)
   12E8 C5            [11] 3366 	push	bc
   12E9 21r02r00      [10] 3367 	ld	hl,#_enemy
   12EC E5            [11] 3368 	push	hl
   12ED CDrC0r0B      [17] 3369 	call	_engage
   12F0 F1            [10] 3370 	pop	af
   12F1 F1            [10] 3371 	pop	af
                           3372 ;src/main.c:638: actual->engage = 1;
   12F2 21r18r00      [10] 3373 	ld	hl,#(_enemy + 0x0016)
   12F5 36 01         [10] 3374 	ld	(hl),#0x01
   12F7 C3r1Dr12      [10] 3375 	jp	00123$
   12FA                    3376 00126$:
   12FA DD F9         [10] 3377 	ld	sp, ix
   12FC DD E1         [14] 3378 	pop	ix
   12FE C9            [10] 3379 	ret
                           3380 ;src/main.c:645: void avanzarMapa() {
                           3381 ;	---------------------------------
                           3382 ; Function avanzarMapa
                           3383 ; ---------------------------------
   12FF                    3384 _avanzarMapa::
                           3385 ;src/main.c:646: if(num_mapa < NUM_MAPAS -1) {
   12FF 3Ar27r05      [13] 3386 	ld	a,(#_num_mapa + 0)
   1302 D6 02         [ 7] 3387 	sub	a, #0x02
   1304 D2rC0r00      [10] 3388 	jp	NC,_menuFin
                           3389 ;src/main.c:647: mapa = mapas[++num_mapa];
   1307 21r27r05      [10] 3390 	ld	hl, #_num_mapa+0
   130A 34            [11] 3391 	inc	(hl)
   130B FD 21r27r05   [14] 3392 	ld	iy,#_num_mapa
   130F FD 6E 00      [19] 3393 	ld	l,0 (iy)
   1312 26 00         [ 7] 3394 	ld	h,#0x00
   1314 29            [11] 3395 	add	hl, hl
   1315 11r16r00      [10] 3396 	ld	de,#_mapas
   1318 19            [11] 3397 	add	hl,de
   1319 7E            [ 7] 3398 	ld	a,(hl)
   131A FD 21r25r05   [14] 3399 	ld	iy,#_mapa
   131E FD 77 00      [19] 3400 	ld	0 (iy),a
   1321 23            [ 6] 3401 	inc	hl
   1322 7E            [ 7] 3402 	ld	a,(hl)
   1323 32r26r05      [13] 3403 	ld	(#_mapa + 1),a
                           3404 ;src/main.c:648: prota.x = prota.px = 2;
   1326 21r14r05      [10] 3405 	ld	hl,#(_prota + 0x0002)
   1329 36 02         [10] 3406 	ld	(hl),#0x02
   132B 21r12r05      [10] 3407 	ld	hl,#_prota
   132E 36 02         [10] 3408 	ld	(hl),#0x02
                           3409 ;src/main.c:649: prota.mover = SI;
   1330 21r18r05      [10] 3410 	ld	hl,#(_prota + 0x0006)
   1333 36 01         [10] 3411 	ld	(hl),#0x01
                           3412 ;src/main.c:650: dibujarMapa();
   1335 CDr00r00      [17] 3413 	call	_dibujarMapa
                           3414 ;src/main.c:651: inicializarEnemy();
   1338 C3r1Fr19      [10] 3415 	jp  _inicializarEnemy
                           3416 ;src/main.c:655: menuFin();
   133B C3rC0r00      [10] 3417 	jp  _menuFin
                           3418 ;src/main.c:659: void moverIzquierda() {
                           3419 ;	---------------------------------
                           3420 ; Function moverIzquierda
                           3421 ; ---------------------------------
   133E                    3422 _moverIzquierda::
                           3423 ;src/main.c:660: prota.mira = M_izquierda;
   133E 01r12r05      [10] 3424 	ld	bc,#_prota+0
   1341 21r19r05      [10] 3425 	ld	hl,#(_prota + 0x0007)
   1344 36 01         [10] 3426 	ld	(hl),#0x01
                           3427 ;src/main.c:661: if (!checkCollision(M_izquierda)) {
   1346 C5            [11] 3428 	push	bc
   1347 21 01 00      [10] 3429 	ld	hl,#0x0001
   134A E5            [11] 3430 	push	hl
   134B CDr4Cr01      [17] 3431 	call	_checkCollision
   134E F1            [10] 3432 	pop	af
   134F C1            [10] 3433 	pop	bc
   1350 7D            [ 4] 3434 	ld	a,l
   1351 B7            [ 4] 3435 	or	a, a
   1352 C0            [11] 3436 	ret	NZ
                           3437 ;src/main.c:662: prota.x--;
   1353 0A            [ 7] 3438 	ld	a,(bc)
   1354 C6 FF         [ 7] 3439 	add	a,#0xFF
   1356 02            [ 7] 3440 	ld	(bc),a
                           3441 ;src/main.c:663: prota.mover = SI;
   1357 21r18r05      [10] 3442 	ld	hl,#(_prota + 0x0006)
   135A 36 01         [10] 3443 	ld	(hl),#0x01
                           3444 ;src/main.c:664: prota.sprite = g_hero_left;
   135C 21r00r00      [10] 3445 	ld	hl,#_g_hero_left
   135F 22r16r05      [16] 3446 	ld	((_prota + 0x0004)), hl
   1362 C9            [10] 3447 	ret
                           3448 ;src/main.c:668: void moverDerecha() {
                           3449 ;	---------------------------------
                           3450 ; Function moverDerecha
                           3451 ; ---------------------------------
   1363                    3452 _moverDerecha::
                           3453 ;src/main.c:669: prota.mira = M_derecha;
   1363 21r19r05      [10] 3454 	ld	hl,#(_prota + 0x0007)
   1366 36 00         [10] 3455 	ld	(hl),#0x00
                           3456 ;src/main.c:670: if (!checkCollision(M_derecha) && (prota.x + G_HERO_W < 80)) {
   1368 21 00 00      [10] 3457 	ld	hl,#0x0000
   136B E5            [11] 3458 	push	hl
   136C CDr4Cr01      [17] 3459 	call	_checkCollision
   136F F1            [10] 3460 	pop	af
   1370 45            [ 4] 3461 	ld	b,l
   1371 21r12r05      [10] 3462 	ld	hl, #_prota + 0
   1374 4E            [ 7] 3463 	ld	c,(hl)
   1375 59            [ 4] 3464 	ld	e,c
   1376 16 00         [ 7] 3465 	ld	d,#0x00
   1378 21 07 00      [10] 3466 	ld	hl,#0x0007
   137B 19            [11] 3467 	add	hl,de
   137C 11 50 80      [10] 3468 	ld	de, #0x8050
   137F 29            [11] 3469 	add	hl, hl
   1380 3F            [ 4] 3470 	ccf
   1381 CB 1C         [ 8] 3471 	rr	h
   1383 CB 1D         [ 8] 3472 	rr	l
   1385 ED 52         [15] 3473 	sbc	hl, de
   1387 3E 00         [ 7] 3474 	ld	a,#0x00
   1389 17            [ 4] 3475 	rla
   138A 5F            [ 4] 3476 	ld	e,a
   138B 78            [ 4] 3477 	ld	a,b
   138C B7            [ 4] 3478 	or	a,a
   138D 20 14         [12] 3479 	jr	NZ,00104$
   138F B3            [ 4] 3480 	or	a,e
   1390 28 11         [12] 3481 	jr	Z,00104$
                           3482 ;src/main.c:671: prota.x++;
   1392 0C            [ 4] 3483 	inc	c
   1393 21r12r05      [10] 3484 	ld	hl,#_prota
   1396 71            [ 7] 3485 	ld	(hl),c
                           3486 ;src/main.c:672: prota.mover = SI;
   1397 21r18r05      [10] 3487 	ld	hl,#(_prota + 0x0006)
   139A 36 01         [10] 3488 	ld	(hl),#0x01
                           3489 ;src/main.c:673: prota.sprite = g_hero;
   139C 21r00r00      [10] 3490 	ld	hl,#_g_hero
   139F 22r16r05      [16] 3491 	ld	((_prota + 0x0004)), hl
   13A2 C9            [10] 3492 	ret
   13A3                    3493 00104$:
                           3494 ;src/main.c:675: }else if( prota.x + G_HERO_W >= 80){
   13A3 7B            [ 4] 3495 	ld	a,e
   13A4 B7            [ 4] 3496 	or	a, a
   13A5 C0            [11] 3497 	ret	NZ
                           3498 ;src/main.c:676: avanzarMapa();
   13A6 C3rFFr12      [10] 3499 	jp  _avanzarMapa
                           3500 ;src/main.c:680: void moverArriba() {
                           3501 ;	---------------------------------
                           3502 ; Function moverArriba
                           3503 ; ---------------------------------
   13A9                    3504 _moverArriba::
                           3505 ;src/main.c:681: prota.mira = M_arriba;
   13A9 21r19r05      [10] 3506 	ld	hl,#(_prota + 0x0007)
   13AC 36 02         [10] 3507 	ld	(hl),#0x02
                           3508 ;src/main.c:682: if (!checkCollision(M_arriba)) { // TODO: COMPROBAR
   13AE 21 02 00      [10] 3509 	ld	hl,#0x0002
   13B1 E5            [11] 3510 	push	hl
   13B2 CDr4Cr01      [17] 3511 	call	_checkCollision
   13B5 F1            [10] 3512 	pop	af
   13B6 7D            [ 4] 3513 	ld	a,l
   13B7 B7            [ 4] 3514 	or	a, a
   13B8 C0            [11] 3515 	ret	NZ
                           3516 ;src/main.c:683: prota.y--;
   13B9 21r13r05      [10] 3517 	ld	hl,#_prota + 1
   13BC 4E            [ 7] 3518 	ld	c,(hl)
   13BD 0D            [ 4] 3519 	dec	c
   13BE 71            [ 7] 3520 	ld	(hl),c
                           3521 ;src/main.c:684: prota.y--;
   13BF 0D            [ 4] 3522 	dec	c
   13C0 71            [ 7] 3523 	ld	(hl),c
                           3524 ;src/main.c:685: prota.mover  = SI;
   13C1 21r18r05      [10] 3525 	ld	hl,#(_prota + 0x0006)
   13C4 36 01         [10] 3526 	ld	(hl),#0x01
                           3527 ;src/main.c:686: prota.sprite = g_hero_up;
   13C6 21r00r00      [10] 3528 	ld	hl,#_g_hero_up
   13C9 22r16r05      [16] 3529 	ld	((_prota + 0x0004)), hl
   13CC C9            [10] 3530 	ret
                           3531 ;src/main.c:690: void moverAbajo() {
                           3532 ;	---------------------------------
                           3533 ; Function moverAbajo
                           3534 ; ---------------------------------
   13CD                    3535 _moverAbajo::
                           3536 ;src/main.c:691: prota.mira = M_abajo;
   13CD 21r19r05      [10] 3537 	ld	hl,#(_prota + 0x0007)
   13D0 36 03         [10] 3538 	ld	(hl),#0x03
                           3539 ;src/main.c:692: if (!checkCollision(M_abajo) ) { // TODO: COMPROBAR
   13D2 21 03 00      [10] 3540 	ld	hl,#0x0003
   13D5 E5            [11] 3541 	push	hl
   13D6 CDr4Cr01      [17] 3542 	call	_checkCollision
   13D9 F1            [10] 3543 	pop	af
   13DA 7D            [ 4] 3544 	ld	a,l
   13DB B7            [ 4] 3545 	or	a, a
   13DC C0            [11] 3546 	ret	NZ
                           3547 ;src/main.c:693: prota.y++;
   13DD 01r13r05      [10] 3548 	ld	bc,#_prota + 1
   13E0 0A            [ 7] 3549 	ld	a,(bc)
   13E1 3C            [ 4] 3550 	inc	a
   13E2 02            [ 7] 3551 	ld	(bc),a
                           3552 ;src/main.c:694: prota.y++;
   13E3 3C            [ 4] 3553 	inc	a
   13E4 02            [ 7] 3554 	ld	(bc),a
                           3555 ;src/main.c:695: prota.mover  = SI;
   13E5 21r18r05      [10] 3556 	ld	hl,#(_prota + 0x0006)
   13E8 36 01         [10] 3557 	ld	(hl),#0x01
                           3558 ;src/main.c:696: prota.sprite = g_hero_down;
   13EA 21r00r00      [10] 3559 	ld	hl,#_g_hero_down
   13ED 22r16r05      [16] 3560 	ld	((_prota + 0x0004)), hl
   13F0 C9            [10] 3561 	ret
                           3562 ;src/main.c:700: void dibujarCuchillo() {
                           3563 ;	---------------------------------
                           3564 ; Function dibujarCuchillo
                           3565 ; ---------------------------------
   13F1                    3566 _dibujarCuchillo::
   13F1 DD E5         [15] 3567 	push	ix
   13F3 DD 21 00 00   [14] 3568 	ld	ix,#0
   13F7 DD 39         [15] 3569 	add	ix,sp
   13F9 F5            [11] 3570 	push	af
                           3571 ;src/main.c:701: u8* pvmem = cpct_getScreenPtr(CPCT_VMEM_START, cu.x, cu.y);
   13FA 21r1Br05      [10] 3572 	ld	hl, #_cu + 1
   13FD 56            [ 7] 3573 	ld	d,(hl)
   13FE 21r1Ar05      [10] 3574 	ld	hl, #_cu + 0
   1401 46            [ 7] 3575 	ld	b,(hl)
   1402 D5            [11] 3576 	push	de
   1403 33            [ 6] 3577 	inc	sp
   1404 C5            [11] 3578 	push	bc
   1405 33            [ 6] 3579 	inc	sp
   1406 21 00 C0      [10] 3580 	ld	hl,#0xC000
   1409 E5            [11] 3581 	push	hl
   140A CDr00r00      [17] 3582 	call	_cpct_getScreenPtr
   140D 45            [ 4] 3583 	ld	b,l
   140E 5C            [ 4] 3584 	ld	e,h
                           3585 ;src/main.c:702: if(cu.eje == E_X){
   140F 21r22r05      [10] 3586 	ld	hl, #_cu + 8
   1412 4E            [ 7] 3587 	ld	c,(hl)
                           3588 ;src/main.c:703: cpct_drawSpriteMaskedAlignedTable (cu.sprite, pvmem, G_KNIFEX_0_W, G_KNIFEX_0_H, g_tablatrans);
   1413 DD 70 FE      [19] 3589 	ld	-2 (ix),b
   1416 DD 73 FF      [19] 3590 	ld	-1 (ix),e
                           3591 ;src/main.c:702: if(cu.eje == E_X){
   1419 79            [ 4] 3592 	ld	a,c
   141A B7            [ 4] 3593 	or	a, a
   141B 20 19         [12] 3594 	jr	NZ,00104$
                           3595 ;src/main.c:703: cpct_drawSpriteMaskedAlignedTable (cu.sprite, pvmem, G_KNIFEX_0_W, G_KNIFEX_0_H, g_tablatrans);
   141D 11r00r0E      [10] 3596 	ld	de,#_g_tablatrans+0
   1420 ED 4Br1Er05   [20] 3597 	ld	bc, (#(_cu + 0x0004) + 0)
   1424 D5            [11] 3598 	push	de
   1425 21 04 04      [10] 3599 	ld	hl,#0x0404
   1428 E5            [11] 3600 	push	hl
   1429 DD 6E FE      [19] 3601 	ld	l,-2 (ix)
   142C DD 66 FF      [19] 3602 	ld	h,-1 (ix)
   142F E5            [11] 3603 	push	hl
   1430 C5            [11] 3604 	push	bc
   1431 CDr00r00      [17] 3605 	call	_cpct_drawSpriteMaskedAlignedTable
   1434 18 1A         [12] 3606 	jr	00106$
   1436                    3607 00104$:
                           3608 ;src/main.c:706: else if(cu.eje == E_Y){
   1436 0D            [ 4] 3609 	dec	c
   1437 20 17         [12] 3610 	jr	NZ,00106$
                           3611 ;src/main.c:707: cpct_drawSpriteMaskedAlignedTable (cu.sprite, pvmem, G_KNIFEY_0_W, G_KNIFEY_0_H, g_tablatrans);
   1439 11r00r0E      [10] 3612 	ld	de,#_g_tablatrans+0
   143C ED 4Br1Er05   [20] 3613 	ld	bc, (#(_cu + 0x0004) + 0)
   1440 D5            [11] 3614 	push	de
   1441 21 02 08      [10] 3615 	ld	hl,#0x0802
   1444 E5            [11] 3616 	push	hl
   1445 DD 6E FE      [19] 3617 	ld	l,-2 (ix)
   1448 DD 66 FF      [19] 3618 	ld	h,-1 (ix)
   144B E5            [11] 3619 	push	hl
   144C C5            [11] 3620 	push	bc
   144D CDr00r00      [17] 3621 	call	_cpct_drawSpriteMaskedAlignedTable
   1450                    3622 00106$:
   1450 DD F9         [10] 3623 	ld	sp, ix
   1452 DD E1         [14] 3624 	pop	ix
   1454 C9            [10] 3625 	ret
                           3626 ;src/main.c:711: void borrarCuchillo() {
                           3627 ;	---------------------------------
                           3628 ; Function borrarCuchillo
                           3629 ; ---------------------------------
   1455                    3630 _borrarCuchillo::
   1455 DD E5         [15] 3631 	push	ix
   1457 DD 21 00 00   [14] 3632 	ld	ix,#0
   145B DD 39         [15] 3633 	add	ix,sp
   145D F5            [11] 3634 	push	af
   145E 3B            [ 6] 3635 	dec	sp
                           3636 ;src/main.c:713: u8 w = 2 + (cu.px & 1);
   145F 21r1Cr05      [10] 3637 	ld	hl, #_cu + 2
   1462 4E            [ 7] 3638 	ld	c,(hl)
   1463 79            [ 4] 3639 	ld	a,c
   1464 E6 01         [ 7] 3640 	and	a, #0x01
   1466 47            [ 4] 3641 	ld	b,a
   1467 04            [ 4] 3642 	inc	b
   1468 04            [ 4] 3643 	inc	b
                           3644 ;src/main.c:714: u8 h = 2 + (cu.py & 3 ? 1 : 0);
   1469 21r1Dr05      [10] 3645 	ld	hl, #_cu + 3
   146C 5E            [ 7] 3646 	ld	e,(hl)
   146D 7B            [ 4] 3647 	ld	a,e
   146E E6 03         [ 7] 3648 	and	a, #0x03
   1470 28 04         [12] 3649 	jr	Z,00105$
   1472 3E 01         [ 7] 3650 	ld	a,#0x01
   1474 18 02         [12] 3651 	jr	00106$
   1476                    3652 00105$:
   1476 3E 00         [ 7] 3653 	ld	a,#0x00
   1478                    3654 00106$:
   1478 C6 02         [ 7] 3655 	add	a, #0x02
   147A DD 77 FD      [19] 3656 	ld	-3 (ix),a
                           3657 ;src/main.c:715: cpct_etm_drawTileBox2x4 (cu.px / 2, (cu.py - ORIGEN_MAPA_Y)/4, w, h, g_map1_W, ORIGEN_MAPA, mapa);
   147D FD 2Ar25r05   [20] 3658 	ld	iy,(_mapa)
   1481 16 00         [ 7] 3659 	ld	d,#0x00
   1483 7B            [ 4] 3660 	ld	a,e
   1484 C6 E8         [ 7] 3661 	add	a,#0xE8
   1486 DD 77 FE      [19] 3662 	ld	-2 (ix),a
   1489 7A            [ 4] 3663 	ld	a,d
   148A CE FF         [ 7] 3664 	adc	a,#0xFF
   148C DD 77 FF      [19] 3665 	ld	-1 (ix),a
   148F DD 6E FE      [19] 3666 	ld	l,-2 (ix)
   1492 DD 66 FF      [19] 3667 	ld	h,-1 (ix)
   1495 DD CB FF 7E   [20] 3668 	bit	7, -1 (ix)
   1499 28 04         [12] 3669 	jr	Z,00107$
   149B 21 EB FF      [10] 3670 	ld	hl,#0xFFEB
   149E 19            [11] 3671 	add	hl,de
   149F                    3672 00107$:
   149F CB 2C         [ 8] 3673 	sra	h
   14A1 CB 1D         [ 8] 3674 	rr	l
   14A3 CB 2C         [ 8] 3675 	sra	h
   14A5 CB 1D         [ 8] 3676 	rr	l
   14A7 55            [ 4] 3677 	ld	d,l
   14A8 CB 39         [ 8] 3678 	srl	c
   14AA FD E5         [15] 3679 	push	iy
   14AC 21 F0 C0      [10] 3680 	ld	hl,#0xC0F0
   14AF E5            [11] 3681 	push	hl
   14B0 3E 28         [ 7] 3682 	ld	a,#0x28
   14B2 F5            [11] 3683 	push	af
   14B3 33            [ 6] 3684 	inc	sp
   14B4 DD 7E FD      [19] 3685 	ld	a,-3 (ix)
   14B7 F5            [11] 3686 	push	af
   14B8 33            [ 6] 3687 	inc	sp
   14B9 C5            [11] 3688 	push	bc
   14BA 33            [ 6] 3689 	inc	sp
   14BB D5            [11] 3690 	push	de
   14BC 33            [ 6] 3691 	inc	sp
   14BD 79            [ 4] 3692 	ld	a,c
   14BE F5            [11] 3693 	push	af
   14BF 33            [ 6] 3694 	inc	sp
   14C0 CDr00r00      [17] 3695 	call	_cpct_etm_drawTileBox2x4
                           3696 ;src/main.c:716: if(!cu.mover){
   14C3 3Ar23r05      [13] 3697 	ld	a, (#_cu + 9)
   14C6 B7            [ 4] 3698 	or	a, a
   14C7 20 05         [12] 3699 	jr	NZ,00103$
                           3700 ;src/main.c:717: cu.lanzado = NO;
   14C9 21r20r05      [10] 3701 	ld	hl,#(_cu + 0x0006)
   14CC 36 00         [10] 3702 	ld	(hl),#0x00
   14CE                    3703 00103$:
   14CE DD F9         [10] 3704 	ld	sp, ix
   14D0 DD E1         [14] 3705 	pop	ix
   14D2 C9            [10] 3706 	ret
                           3707 ;src/main.c:721: void redibujarCuchillo( ) {
                           3708 ;	---------------------------------
                           3709 ; Function redibujarCuchillo
                           3710 ; ---------------------------------
   14D3                    3711 _redibujarCuchillo::
                           3712 ;src/main.c:722: borrarCuchillo();
   14D3 CDr55r14      [17] 3713 	call	_borrarCuchillo
                           3714 ;src/main.c:723: cu.px = cu.x;
   14D6 01r1Cr05      [10] 3715 	ld	bc,#_cu + 2
   14D9 3Ar1Ar05      [13] 3716 	ld	a, (#_cu + 0)
   14DC 02            [ 7] 3717 	ld	(bc),a
                           3718 ;src/main.c:724: cu.py = cu.y;
   14DD 01r1Dr05      [10] 3719 	ld	bc,#_cu + 3
   14E0 3Ar1Br05      [13] 3720 	ld	a, (#_cu + 1)
   14E3 02            [ 7] 3721 	ld	(bc),a
                           3722 ;src/main.c:725: dibujarCuchillo();
   14E4 C3rF1r13      [10] 3723 	jp  _dibujarCuchillo
                           3724 ;src/main.c:728: void lanzarCuchillo(){
                           3725 ;	---------------------------------
                           3726 ; Function lanzarCuchillo
                           3727 ; ---------------------------------
   14E7                    3728 _lanzarCuchillo::
                           3729 ;src/main.c:730: if(!cu.lanzado){
   14E7 3Ar20r05      [13] 3730 	ld	a, (#(_cu + 0x0006) + 0)
   14EA B7            [ 4] 3731 	or	a, a
   14EB C0            [11] 3732 	ret	NZ
                           3733 ;src/main.c:732: if(prota.mira == M_derecha){
   14EC 21r19r05      [10] 3734 	ld	hl, #_prota + 7
   14EF 5E            [ 7] 3735 	ld	e,(hl)
                           3736 ;src/main.c:733: if( *getTilePtr(prota.x + G_HERO_W + G_KNIFEX_0_W + 1, prota.y + G_HERO_H /2) <= 2){
   14F0 01r13r05      [10] 3737 	ld	bc,#_prota + 1
                           3738 ;src/main.c:735: cu.direccion = M_derecha;
                           3739 ;src/main.c:737: cu.y=prota.y + G_HERO_H /2;
                           3740 ;src/main.c:738: cu.sprite=g_knifeX_0;
                           3741 ;src/main.c:739: cu.eje = E_X;
                           3742 ;src/main.c:732: if(prota.mira == M_derecha){
   14F3 7B            [ 4] 3743 	ld	a,e
   14F4 B7            [ 4] 3744 	or	a, a
   14F5 20 41         [12] 3745 	jr	NZ,00118$
                           3746 ;src/main.c:733: if( *getTilePtr(prota.x + G_HERO_W + G_KNIFEX_0_W + 1, prota.y + G_HERO_H /2) <= 2){
   14F7 0A            [ 7] 3747 	ld	a,(bc)
   14F8 C6 0B         [ 7] 3748 	add	a, #0x0B
   14FA 5F            [ 4] 3749 	ld	e,a
   14FB 3Ar12r05      [13] 3750 	ld	a, (#_prota + 0)
   14FE C6 0C         [ 7] 3751 	add	a, #0x0C
   1500 6F            [ 4] 3752 	ld	l,a
   1501 C5            [11] 3753 	push	bc
   1502 7B            [ 4] 3754 	ld	a,e
   1503 F5            [11] 3755 	push	af
   1504 33            [ 6] 3756 	inc	sp
   1505 7D            [ 4] 3757 	ld	a,l
   1506 F5            [11] 3758 	push	af
   1507 33            [ 6] 3759 	inc	sp
   1508 CDr0Br01      [17] 3760 	call	_getTilePtr
   150B F1            [10] 3761 	pop	af
   150C C1            [10] 3762 	pop	bc
   150D 5E            [ 7] 3763 	ld	e,(hl)
   150E 3E 02         [ 7] 3764 	ld	a,#0x02
   1510 93            [ 4] 3765 	sub	a, e
   1511 D8            [11] 3766 	ret	C
                           3767 ;src/main.c:734: cu.lanzado = SI;
   1512 21r20r05      [10] 3768 	ld	hl,#(_cu + 0x0006)
   1515 36 01         [10] 3769 	ld	(hl),#0x01
                           3770 ;src/main.c:735: cu.direccion = M_derecha;
   1517 21r21r05      [10] 3771 	ld	hl,#(_cu + 0x0007)
   151A 36 00         [10] 3772 	ld	(hl),#0x00
                           3773 ;src/main.c:736: cu.x=prota.x + G_HERO_W;
   151C 3Ar12r05      [13] 3774 	ld	a, (#_prota + 0)
   151F C6 07         [ 7] 3775 	add	a, #0x07
   1521 32r1Ar05      [13] 3776 	ld	(#_cu),a
                           3777 ;src/main.c:737: cu.y=prota.y + G_HERO_H /2;
   1524 0A            [ 7] 3778 	ld	a,(bc)
   1525 C6 0B         [ 7] 3779 	add	a, #0x0B
   1527 32r1Br05      [13] 3780 	ld	(#(_cu + 0x0001)),a
                           3781 ;src/main.c:738: cu.sprite=g_knifeX_0;
   152A 21r00r00      [10] 3782 	ld	hl,#_g_knifeX_0
   152D 22r1Er05      [16] 3783 	ld	((_cu + 0x0004)), hl
                           3784 ;src/main.c:739: cu.eje = E_X;
   1530 21r22r05      [10] 3785 	ld	hl,#(_cu + 0x0008)
   1533 36 00         [10] 3786 	ld	(hl),#0x00
                           3787 ;src/main.c:740: dibujarCuchillo();
   1535 C3rF1r13      [10] 3788 	jp  _dibujarCuchillo
   1538                    3789 00118$:
                           3790 ;src/main.c:743: else if(prota.mira == M_izquierda){
   1538 7B            [ 4] 3791 	ld	a,e
   1539 3D            [ 4] 3792 	dec	a
   153A 20 41         [12] 3793 	jr	NZ,00115$
                           3794 ;src/main.c:744: if( *getTilePtr(prota.x - G_KNIFEX_0_W - 1 - G_KNIFEX_0_W - 1, prota.y + G_HERO_H /2) <= 2){
   153C 0A            [ 7] 3795 	ld	a,(bc)
   153D C6 0B         [ 7] 3796 	add	a, #0x0B
   153F 5F            [ 4] 3797 	ld	e,a
   1540 3Ar12r05      [13] 3798 	ld	a, (#_prota + 0)
   1543 C6 F6         [ 7] 3799 	add	a,#0xF6
   1545 6F            [ 4] 3800 	ld	l,a
   1546 C5            [11] 3801 	push	bc
   1547 7B            [ 4] 3802 	ld	a,e
   1548 F5            [11] 3803 	push	af
   1549 33            [ 6] 3804 	inc	sp
   154A 7D            [ 4] 3805 	ld	a,l
   154B F5            [11] 3806 	push	af
   154C 33            [ 6] 3807 	inc	sp
   154D CDr0Br01      [17] 3808 	call	_getTilePtr
   1550 F1            [10] 3809 	pop	af
   1551 C1            [10] 3810 	pop	bc
   1552 5E            [ 7] 3811 	ld	e,(hl)
   1553 3E 02         [ 7] 3812 	ld	a,#0x02
   1555 93            [ 4] 3813 	sub	a, e
   1556 D8            [11] 3814 	ret	C
                           3815 ;src/main.c:745: cu.lanzado = SI;
   1557 21r20r05      [10] 3816 	ld	hl,#(_cu + 0x0006)
   155A 36 01         [10] 3817 	ld	(hl),#0x01
                           3818 ;src/main.c:746: cu.direccion = M_izquierda;
   155C 21r21r05      [10] 3819 	ld	hl,#(_cu + 0x0007)
   155F 36 01         [10] 3820 	ld	(hl),#0x01
                           3821 ;src/main.c:747: cu.x = prota.x - G_KNIFEX_0_W;
   1561 3Ar12r05      [13] 3822 	ld	a, (#_prota + 0)
   1564 C6 FC         [ 7] 3823 	add	a,#0xFC
   1566 32r1Ar05      [13] 3824 	ld	(#_cu),a
                           3825 ;src/main.c:748: cu.y = prota.y + G_HERO_H /2;
   1569 0A            [ 7] 3826 	ld	a,(bc)
   156A C6 0B         [ 7] 3827 	add	a, #0x0B
   156C 32r1Br05      [13] 3828 	ld	(#(_cu + 0x0001)),a
                           3829 ;src/main.c:749: cu.sprite = g_knifeX_1;
   156F 21r00r00      [10] 3830 	ld	hl,#_g_knifeX_1
   1572 22r1Er05      [16] 3831 	ld	((_cu + 0x0004)), hl
                           3832 ;src/main.c:750: cu.eje = E_X;
   1575 21r22r05      [10] 3833 	ld	hl,#(_cu + 0x0008)
   1578 36 00         [10] 3834 	ld	(hl),#0x00
                           3835 ;src/main.c:751: dibujarCuchillo();
   157A C3rF1r13      [10] 3836 	jp  _dibujarCuchillo
   157D                    3837 00115$:
                           3838 ;src/main.c:754: else if(prota.mira == M_abajo){
   157D 7B            [ 4] 3839 	ld	a,e
   157E D6 03         [ 7] 3840 	sub	a, #0x03
   1580 20 41         [12] 3841 	jr	NZ,00112$
                           3842 ;src/main.c:756: if( *getTilePtr(prota.x + G_HERO_W / 2, prota.y + G_HERO_H + G_KNIFEY_0_H + 1) <= 2){
   1582 0A            [ 7] 3843 	ld	a,(bc)
   1583 C6 1F         [ 7] 3844 	add	a, #0x1F
   1585 5F            [ 4] 3845 	ld	e,a
   1586 3Ar12r05      [13] 3846 	ld	a, (#_prota + 0)
   1589 57            [ 4] 3847 	ld	d,a
   158A 14            [ 4] 3848 	inc	d
   158B 14            [ 4] 3849 	inc	d
   158C 14            [ 4] 3850 	inc	d
   158D C5            [11] 3851 	push	bc
   158E 7B            [ 4] 3852 	ld	a,e
   158F F5            [11] 3853 	push	af
   1590 33            [ 6] 3854 	inc	sp
   1591 D5            [11] 3855 	push	de
   1592 33            [ 6] 3856 	inc	sp
   1593 CDr0Br01      [17] 3857 	call	_getTilePtr
   1596 F1            [10] 3858 	pop	af
   1597 C1            [10] 3859 	pop	bc
   1598 5E            [ 7] 3860 	ld	e,(hl)
   1599 3E 02         [ 7] 3861 	ld	a,#0x02
   159B 93            [ 4] 3862 	sub	a, e
   159C D8            [11] 3863 	ret	C
                           3864 ;src/main.c:757: cu.lanzado = SI;
   159D 21r20r05      [10] 3865 	ld	hl,#(_cu + 0x0006)
   15A0 36 01         [10] 3866 	ld	(hl),#0x01
                           3867 ;src/main.c:758: cu.direccion = M_abajo;
   15A2 21r21r05      [10] 3868 	ld	hl,#(_cu + 0x0007)
   15A5 36 03         [10] 3869 	ld	(hl),#0x03
                           3870 ;src/main.c:759: cu.x = prota.x + G_HERO_W / 2;
   15A7 3Ar12r05      [13] 3871 	ld	a, (#_prota + 0)
   15AA C6 03         [ 7] 3872 	add	a, #0x03
   15AC 32r1Ar05      [13] 3873 	ld	(#_cu),a
                           3874 ;src/main.c:760: cu.y = prota.y + G_HERO_H;
   15AF 0A            [ 7] 3875 	ld	a,(bc)
   15B0 C6 16         [ 7] 3876 	add	a, #0x16
   15B2 32r1Br05      [13] 3877 	ld	(#(_cu + 0x0001)),a
                           3878 ;src/main.c:761: cu.sprite = g_knifeY_0;
   15B5 21r00r00      [10] 3879 	ld	hl,#_g_knifeY_0
   15B8 22r1Er05      [16] 3880 	ld	((_cu + 0x0004)), hl
                           3881 ;src/main.c:762: cu.eje = E_Y;
   15BB 21r22r05      [10] 3882 	ld	hl,#(_cu + 0x0008)
   15BE 36 01         [10] 3883 	ld	(hl),#0x01
                           3884 ;src/main.c:763: dibujarCuchillo();
   15C0 C3rF1r13      [10] 3885 	jp  _dibujarCuchillo
   15C3                    3886 00112$:
                           3887 ;src/main.c:766: else if(prota.mira == M_arriba){
   15C3 7B            [ 4] 3888 	ld	a,e
   15C4 D6 02         [ 7] 3889 	sub	a, #0x02
   15C6 C0            [11] 3890 	ret	NZ
                           3891 ;src/main.c:767: if( *getTilePtr(prota.x + G_HERO_W / 2, prota.y - G_KNIFEY_0_H - 1) <= 2){
   15C7 0A            [ 7] 3892 	ld	a,(bc)
   15C8 C6 F7         [ 7] 3893 	add	a,#0xF7
   15CA 57            [ 4] 3894 	ld	d,a
   15CB 3Ar12r05      [13] 3895 	ld	a, (#_prota + 0)
   15CE C6 03         [ 7] 3896 	add	a, #0x03
   15D0 C5            [11] 3897 	push	bc
   15D1 D5            [11] 3898 	push	de
   15D2 33            [ 6] 3899 	inc	sp
   15D3 F5            [11] 3900 	push	af
   15D4 33            [ 6] 3901 	inc	sp
   15D5 CDr0Br01      [17] 3902 	call	_getTilePtr
   15D8 F1            [10] 3903 	pop	af
   15D9 C1            [10] 3904 	pop	bc
   15DA 5E            [ 7] 3905 	ld	e,(hl)
   15DB 3E 02         [ 7] 3906 	ld	a,#0x02
   15DD 93            [ 4] 3907 	sub	a, e
   15DE D8            [11] 3908 	ret	C
                           3909 ;src/main.c:768: cu.lanzado = SI;
   15DF 21r20r05      [10] 3910 	ld	hl,#(_cu + 0x0006)
   15E2 36 01         [10] 3911 	ld	(hl),#0x01
                           3912 ;src/main.c:769: cu.direccion = M_arriba;
   15E4 21r21r05      [10] 3913 	ld	hl,#(_cu + 0x0007)
   15E7 36 02         [10] 3914 	ld	(hl),#0x02
                           3915 ;src/main.c:770: cu.x = prota.x + G_HERO_W / 2;
   15E9 3Ar12r05      [13] 3916 	ld	a, (#_prota + 0)
   15EC C6 03         [ 7] 3917 	add	a, #0x03
   15EE 32r1Ar05      [13] 3918 	ld	(#_cu),a
                           3919 ;src/main.c:771: cu.y = prota.y;
   15F1 0A            [ 7] 3920 	ld	a,(bc)
   15F2 32r1Br05      [13] 3921 	ld	(#(_cu + 0x0001)),a
                           3922 ;src/main.c:772: cu.sprite = g_knifeY_1;
   15F5 21r00r00      [10] 3923 	ld	hl,#_g_knifeY_1
   15F8 22r1Er05      [16] 3924 	ld	((_cu + 0x0004)), hl
                           3925 ;src/main.c:773: cu.eje = E_Y;
   15FB 21r22r05      [10] 3926 	ld	hl,#(_cu + 0x0008)
   15FE 36 01         [10] 3927 	ld	(hl),#0x01
                           3928 ;src/main.c:774: dibujarCuchillo();
   1600 C3rF1r13      [10] 3929 	jp  _dibujarCuchillo
                           3930 ;src/main.c:780: void comprobarTeclado() {
                           3931 ;	---------------------------------
                           3932 ; Function comprobarTeclado
                           3933 ; ---------------------------------
   1603                    3934 _comprobarTeclado::
                           3935 ;src/main.c:781: cpct_scanKeyboard_if();
   1603 CDr00r00      [17] 3936 	call	_cpct_scanKeyboard_if
                           3937 ;src/main.c:783: if (cpct_isAnyKeyPressed()) {
   1606 CDr00r00      [17] 3938 	call	_cpct_isAnyKeyPressed
   1609 7D            [ 4] 3939 	ld	a,l
   160A B7            [ 4] 3940 	or	a, a
   160B C8            [11] 3941 	ret	Z
                           3942 ;src/main.c:784: if (cpct_isKeyPressed(Key_CursorLeft))
   160C 21 01 01      [10] 3943 	ld	hl,#0x0101
   160F CDr00r00      [17] 3944 	call	_cpct_isKeyPressed
   1612 7D            [ 4] 3945 	ld	a,l
   1613 B7            [ 4] 3946 	or	a, a
                           3947 ;src/main.c:785: moverIzquierda();
   1614 C2r3Er13      [10] 3948 	jp	NZ,_moverIzquierda
                           3949 ;src/main.c:786: else if (cpct_isKeyPressed(Key_CursorRight))
   1617 21 00 02      [10] 3950 	ld	hl,#0x0200
   161A CDr00r00      [17] 3951 	call	_cpct_isKeyPressed
   161D 7D            [ 4] 3952 	ld	a,l
   161E B7            [ 4] 3953 	or	a, a
                           3954 ;src/main.c:787: moverDerecha();
   161F C2r63r13      [10] 3955 	jp	NZ,_moverDerecha
                           3956 ;src/main.c:788: else if (cpct_isKeyPressed(Key_CursorUp))
   1622 21 00 01      [10] 3957 	ld	hl,#0x0100
   1625 CDr00r00      [17] 3958 	call	_cpct_isKeyPressed
   1628 7D            [ 4] 3959 	ld	a,l
   1629 B7            [ 4] 3960 	or	a, a
                           3961 ;src/main.c:789: moverArriba();
   162A C2rA9r13      [10] 3962 	jp	NZ,_moverArriba
                           3963 ;src/main.c:790: else if (cpct_isKeyPressed(Key_CursorDown))
   162D 21 00 04      [10] 3964 	ld	hl,#0x0400
   1630 CDr00r00      [17] 3965 	call	_cpct_isKeyPressed
   1633 7D            [ 4] 3966 	ld	a,l
   1634 B7            [ 4] 3967 	or	a, a
                           3968 ;src/main.c:791: moverAbajo();
   1635 C2rCDr13      [10] 3969 	jp	NZ,_moverAbajo
                           3970 ;src/main.c:792: else if (cpct_isKeyPressed(Key_Space))
   1638 21 05 80      [10] 3971 	ld	hl,#0x8005
   163B CDr00r00      [17] 3972 	call	_cpct_isKeyPressed
   163E 7D            [ 4] 3973 	ld	a,l
   163F B7            [ 4] 3974 	or	a, a
   1640 C8            [11] 3975 	ret	Z
                           3976 ;src/main.c:793: lanzarCuchillo();
   1641 C3rE7r14      [10] 3977 	jp  _lanzarCuchillo
                           3978 ;src/main.c:797: u8 checkKnifeCollision(int direction, u8 xoff, u8 yoff){
                           3979 ;	---------------------------------
                           3980 ; Function checkKnifeCollision
                           3981 ; ---------------------------------
   1644                    3982 _checkKnifeCollision::
                           3983 ;src/main.c:799: return *getTilePtr(cu.x + xoff, cu.y + yoff) <= 2;
   1644 3Ar1Br05      [13] 3984 	ld	a,(#_cu + 1)
   1647 21 05 00      [10] 3985 	ld	hl,#5
   164A 39            [11] 3986 	add	hl,sp
   164B 86            [ 7] 3987 	add	a, (hl)
   164C 47            [ 4] 3988 	ld	b,a
   164D 3Ar1Ar05      [13] 3989 	ld	a,(#_cu + 0)
   1650 21 04 00      [10] 3990 	ld	hl,#4
   1653 39            [11] 3991 	add	hl,sp
   1654 86            [ 7] 3992 	add	a, (hl)
   1655 4F            [ 4] 3993 	ld	c,a
   1656 C5            [11] 3994 	push	bc
   1657 CDr0Br01      [17] 3995 	call	_getTilePtr
   165A F1            [10] 3996 	pop	af
   165B 4E            [ 7] 3997 	ld	c,(hl)
   165C 3E 02         [ 7] 3998 	ld	a,#0x02
   165E 91            [ 4] 3999 	sub	a, c
   165F 3E 00         [ 7] 4000 	ld	a,#0x00
   1661 17            [ 4] 4001 	rla
   1662 EE 01         [ 7] 4002 	xor	a, #0x01
   1664 6F            [ 4] 4003 	ld	l, a
   1665 C9            [10] 4004 	ret
                           4005 ;src/main.c:802: void moverCuchillo(){
                           4006 ;	---------------------------------
                           4007 ; Function moverCuchillo
                           4008 ; ---------------------------------
   1666                    4009 _moverCuchillo::
                           4010 ;src/main.c:803: if(cu.lanzado){
   1666 01r1Ar05      [10] 4011 	ld	bc,#_cu+0
   1669 3Ar20r05      [13] 4012 	ld	a, (#_cu + 6)
   166C B7            [ 4] 4013 	or	a, a
   166D C8            [11] 4014 	ret	Z
                           4015 ;src/main.c:804: cu.mover = SI;
   166E 21 09 00      [10] 4016 	ld	hl,#0x0009
   1671 09            [11] 4017 	add	hl,bc
   1672 EB            [ 4] 4018 	ex	de,hl
   1673 3E 01         [ 7] 4019 	ld	a,#0x01
   1675 12            [ 7] 4020 	ld	(de),a
                           4021 ;src/main.c:805: if(cu.direccion == M_derecha){
   1676 21r21r05      [10] 4022 	ld	hl, #_cu + 7
   1679 6E            [ 7] 4023 	ld	l,(hl)
   167A 7D            [ 4] 4024 	ld	a,l
   167B B7            [ 4] 4025 	or	a, a
   167C 20 1E         [12] 4026 	jr	NZ,00122$
                           4027 ;src/main.c:807: if(checkKnifeCollision(M_derecha, G_KNIFEX_0_W + 1, 0)){
   167E C5            [11] 4028 	push	bc
   167F D5            [11] 4029 	push	de
   1680 21 05 00      [10] 4030 	ld	hl,#0x0005
   1683 E5            [11] 4031 	push	hl
   1684 2E 00         [ 7] 4032 	ld	l, #0x00
   1686 E5            [11] 4033 	push	hl
   1687 CDr44r16      [17] 4034 	call	_checkKnifeCollision
   168A F1            [10] 4035 	pop	af
   168B F1            [10] 4036 	pop	af
   168C D1            [10] 4037 	pop	de
   168D C1            [10] 4038 	pop	bc
   168E 7D            [ 4] 4039 	ld	a,l
   168F B7            [ 4] 4040 	or	a, a
   1690 28 07         [12] 4041 	jr	Z,00102$
                           4042 ;src/main.c:808: cu.mover = SI;
   1692 3E 01         [ 7] 4043 	ld	a,#0x01
   1694 12            [ 7] 4044 	ld	(de),a
                           4045 ;src/main.c:809: cu.x++;
   1695 0A            [ 7] 4046 	ld	a,(bc)
   1696 3C            [ 4] 4047 	inc	a
   1697 02            [ 7] 4048 	ld	(bc),a
   1698 C9            [10] 4049 	ret
   1699                    4050 00102$:
                           4051 ;src/main.c:812: cu.mover=NO;
   1699 AF            [ 4] 4052 	xor	a, a
   169A 12            [ 7] 4053 	ld	(de),a
   169B C9            [10] 4054 	ret
   169C                    4055 00122$:
                           4056 ;src/main.c:815: else if(cu.direccion == M_izquierda){
   169C 7D            [ 4] 4057 	ld	a,l
   169D 3D            [ 4] 4058 	dec	a
   169E 20 1F         [12] 4059 	jr	NZ,00119$
                           4060 ;src/main.c:816: if(checkKnifeCollision(M_derecha, -1, 0)){
   16A0 C5            [11] 4061 	push	bc
   16A1 D5            [11] 4062 	push	de
   16A2 21 FF 00      [10] 4063 	ld	hl,#0x00FF
   16A5 E5            [11] 4064 	push	hl
   16A6 2E 00         [ 7] 4065 	ld	l, #0x00
   16A8 E5            [11] 4066 	push	hl
   16A9 CDr44r16      [17] 4067 	call	_checkKnifeCollision
   16AC F1            [10] 4068 	pop	af
   16AD F1            [10] 4069 	pop	af
   16AE D1            [10] 4070 	pop	de
   16AF C1            [10] 4071 	pop	bc
   16B0 7D            [ 4] 4072 	ld	a,l
   16B1 B7            [ 4] 4073 	or	a, a
   16B2 28 08         [12] 4074 	jr	Z,00105$
                           4075 ;src/main.c:817: cu.mover = SI;
   16B4 3E 01         [ 7] 4076 	ld	a,#0x01
   16B6 12            [ 7] 4077 	ld	(de),a
                           4078 ;src/main.c:818: cu.x--;
   16B7 0A            [ 7] 4079 	ld	a,(bc)
   16B8 C6 FF         [ 7] 4080 	add	a,#0xFF
   16BA 02            [ 7] 4081 	ld	(bc),a
   16BB C9            [10] 4082 	ret
   16BC                    4083 00105$:
                           4084 ;src/main.c:820: cu.mover=NO;
   16BC AF            [ 4] 4085 	xor	a, a
   16BD 12            [ 7] 4086 	ld	(de),a
   16BE C9            [10] 4087 	ret
   16BF                    4088 00119$:
                           4089 ;src/main.c:826: cu.y--;
   16BF 03            [ 6] 4090 	inc	bc
                           4091 ;src/main.c:823: else if(cu.direccion == M_arriba){
   16C0 7D            [ 4] 4092 	ld	a,l
   16C1 D6 02         [ 7] 4093 	sub	a, #0x02
   16C3 20 22         [12] 4094 	jr	NZ,00116$
                           4095 ;src/main.c:824: if(checkKnifeCollision(M_derecha, 0, -2)){
   16C5 C5            [11] 4096 	push	bc
   16C6 D5            [11] 4097 	push	de
   16C7 21 00 FE      [10] 4098 	ld	hl,#0xFE00
   16CA E5            [11] 4099 	push	hl
   16CB 26 00         [ 7] 4100 	ld	h, #0x00
   16CD E5            [11] 4101 	push	hl
   16CE CDr44r16      [17] 4102 	call	_checkKnifeCollision
   16D1 F1            [10] 4103 	pop	af
   16D2 F1            [10] 4104 	pop	af
   16D3 D1            [10] 4105 	pop	de
   16D4 C1            [10] 4106 	pop	bc
   16D5 7D            [ 4] 4107 	ld	a,l
   16D6 B7            [ 4] 4108 	or	a, a
   16D7 28 0B         [12] 4109 	jr	Z,00108$
                           4110 ;src/main.c:825: cu.mover = SI;
   16D9 3E 01         [ 7] 4111 	ld	a,#0x01
   16DB 12            [ 7] 4112 	ld	(de),a
                           4113 ;src/main.c:826: cu.y--;
   16DC 0A            [ 7] 4114 	ld	a,(bc)
   16DD C6 FF         [ 7] 4115 	add	a,#0xFF
   16DF 02            [ 7] 4116 	ld	(bc),a
                           4117 ;src/main.c:827: cu.y--;
   16E0 C6 FF         [ 7] 4118 	add	a,#0xFF
   16E2 02            [ 7] 4119 	ld	(bc),a
   16E3 C9            [10] 4120 	ret
   16E4                    4121 00108$:
                           4122 ;src/main.c:830: cu.mover=NO;
   16E4 AF            [ 4] 4123 	xor	a, a
   16E5 12            [ 7] 4124 	ld	(de),a
   16E6 C9            [10] 4125 	ret
   16E7                    4126 00116$:
                           4127 ;src/main.c:833: else if(cu.direccion == M_abajo){
   16E7 7D            [ 4] 4128 	ld	a,l
   16E8 D6 03         [ 7] 4129 	sub	a, #0x03
   16EA C0            [11] 4130 	ret	NZ
                           4131 ;src/main.c:834: if(checkKnifeCollision(M_derecha, 0, G_KNIFEY_0_H + 2)){
   16EB C5            [11] 4132 	push	bc
   16EC D5            [11] 4133 	push	de
   16ED 21 00 0A      [10] 4134 	ld	hl,#0x0A00
   16F0 E5            [11] 4135 	push	hl
   16F1 26 00         [ 7] 4136 	ld	h, #0x00
   16F3 E5            [11] 4137 	push	hl
   16F4 CDr44r16      [17] 4138 	call	_checkKnifeCollision
   16F7 F1            [10] 4139 	pop	af
   16F8 F1            [10] 4140 	pop	af
   16F9 D1            [10] 4141 	pop	de
   16FA C1            [10] 4142 	pop	bc
   16FB 7D            [ 4] 4143 	ld	a,l
   16FC B7            [ 4] 4144 	or	a, a
   16FD 28 09         [12] 4145 	jr	Z,00111$
                           4146 ;src/main.c:835: cu.mover = SI;
   16FF 3E 01         [ 7] 4147 	ld	a,#0x01
   1701 12            [ 7] 4148 	ld	(de),a
                           4149 ;src/main.c:836: cu.y++;
   1702 0A            [ 7] 4150 	ld	a,(bc)
   1703 3C            [ 4] 4151 	inc	a
   1704 02            [ 7] 4152 	ld	(bc),a
                           4153 ;src/main.c:837: cu.y++;
   1705 3C            [ 4] 4154 	inc	a
   1706 02            [ 7] 4155 	ld	(bc),a
   1707 C9            [10] 4156 	ret
   1708                    4157 00111$:
                           4158 ;src/main.c:840: cu.mover=NO;
   1708 AF            [ 4] 4159 	xor	a, a
   1709 12            [ 7] 4160 	ld	(de),a
   170A C9            [10] 4161 	ret
                           4162 ;src/main.c:846: void barraPuntuacionInicial(){
                           4163 ;	---------------------------------
                           4164 ; Function barraPuntuacionInicial
                           4165 ; ---------------------------------
   170B                    4166 _barraPuntuacionInicial::
                           4167 ;src/main.c:851: memptr = cpct_getScreenPtr(CPCT_VMEM_START, 0, 2); //
   170B 21 00 02      [10] 4168 	ld	hl,#0x0200
   170E E5            [11] 4169 	push	hl
   170F 26 C0         [ 7] 4170 	ld	h, #0xC0
   1711 E5            [11] 4171 	push	hl
   1712 CDr00r00      [17] 4172 	call	_cpct_getScreenPtr
   1715 4D            [ 4] 4173 	ld	c,l
   1716 44            [ 4] 4174 	ld	b,h
                           4175 ;src/main.c:852: cpct_drawStringM0("SCORE", memptr, 1, 0);
   1717 21 01 00      [10] 4176 	ld	hl,#0x0001
   171A E5            [11] 4177 	push	hl
   171B C5            [11] 4178 	push	bc
   171C 21rB3r17      [10] 4179 	ld	hl,#___str_1
   171F E5            [11] 4180 	push	hl
   1720 CDr00r00      [17] 4181 	call	_cpct_drawStringM0
   1723 21 06 00      [10] 4182 	ld	hl,#6
   1726 39            [11] 4183 	add	hl,sp
   1727 F9            [ 6] 4184 	ld	sp,hl
                           4185 ;src/main.c:853: memptr = cpct_getScreenPtr(CPCT_VMEM_START, 0, 14); // puntuación inicial
   1728 21 00 0E      [10] 4186 	ld	hl,#0x0E00
   172B E5            [11] 4187 	push	hl
   172C 26 C0         [ 7] 4188 	ld	h, #0xC0
   172E E5            [11] 4189 	push	hl
   172F CDr00r00      [17] 4190 	call	_cpct_getScreenPtr
   1732 4D            [ 4] 4191 	ld	c,l
   1733 44            [ 4] 4192 	ld	b,h
                           4193 ;src/main.c:854: cpct_drawStringM0("00000", memptr, 15, 0);
   1734 21 0F 00      [10] 4194 	ld	hl,#0x000F
   1737 E5            [11] 4195 	push	hl
   1738 C5            [11] 4196 	push	bc
   1739 21rB9r17      [10] 4197 	ld	hl,#___str_2
   173C E5            [11] 4198 	push	hl
   173D CDr00r00      [17] 4199 	call	_cpct_drawStringM0
   1740 21 06 00      [10] 4200 	ld	hl,#6
   1743 39            [11] 4201 	add	hl,sp
   1744 F9            [ 6] 4202 	ld	sp,hl
                           4203 ;src/main.c:857: memptr = cpct_getScreenPtr(CPCT_VMEM_START, 26, 14);
   1745 21 1A 0E      [10] 4204 	ld	hl,#0x0E1A
   1748 E5            [11] 4205 	push	hl
   1749 21 00 C0      [10] 4206 	ld	hl,#0xC000
   174C E5            [11] 4207 	push	hl
   174D CDr00r00      [17] 4208 	call	_cpct_getScreenPtr
   1750 4D            [ 4] 4209 	ld	c,l
   1751 44            [ 4] 4210 	ld	b,h
                           4211 ;src/main.c:858: cpct_drawStringM0("ROBOBIT", memptr, 3, 0);
   1752 21 03 00      [10] 4212 	ld	hl,#0x0003
   1755 E5            [11] 4213 	push	hl
   1756 C5            [11] 4214 	push	bc
   1757 21rBFr17      [10] 4215 	ld	hl,#___str_3
   175A E5            [11] 4216 	push	hl
   175B CDr00r00      [17] 4217 	call	_cpct_drawStringM0
   175E 21 06 00      [10] 4218 	ld	hl,#6
   1761 39            [11] 4219 	add	hl,sp
   1762 F9            [ 6] 4220 	ld	sp,hl
                           4221 ;src/main.c:860: memptr = cpct_getScreenPtr(CPCT_VMEM_START, 60, 2); //
   1763 21 3C 02      [10] 4222 	ld	hl,#0x023C
   1766 E5            [11] 4223 	push	hl
   1767 21 00 C0      [10] 4224 	ld	hl,#0xC000
   176A E5            [11] 4225 	push	hl
   176B CDr00r00      [17] 4226 	call	_cpct_getScreenPtr
   176E 4D            [ 4] 4227 	ld	c,l
   176F 44            [ 4] 4228 	ld	b,h
                           4229 ;src/main.c:861: cpct_drawStringM0("LIVES", memptr, 1, 0);
   1770 21 01 00      [10] 4230 	ld	hl,#0x0001
   1773 E5            [11] 4231 	push	hl
   1774 C5            [11] 4232 	push	bc
   1775 21rC7r17      [10] 4233 	ld	hl,#___str_4
   1778 E5            [11] 4234 	push	hl
   1779 CDr00r00      [17] 4235 	call	_cpct_drawStringM0
   177C 21 06 00      [10] 4236 	ld	hl,#6
   177F 39            [11] 4237 	add	hl,sp
   1780 F9            [ 6] 4238 	ld	sp,hl
                           4239 ;src/main.c:863: for(i=0; i<5; i++){
   1781 01 00 00      [10] 4240 	ld	bc,#0x0000
   1784                    4241 00102$:
                           4242 ;src/main.c:864: memptr = cpct_getScreenPtr(CPCT_VMEM_START, 60 + i*4, 14); // dibuja 5 corazones
   1784 79            [ 4] 4243 	ld	a,c
   1785 87            [ 4] 4244 	add	a, a
   1786 87            [ 4] 4245 	add	a, a
   1787 C6 3C         [ 7] 4246 	add	a, #0x3C
   1789 57            [ 4] 4247 	ld	d,a
   178A C5            [11] 4248 	push	bc
   178B 3E 0E         [ 7] 4249 	ld	a,#0x0E
   178D F5            [11] 4250 	push	af
   178E 33            [ 6] 4251 	inc	sp
   178F D5            [11] 4252 	push	de
   1790 33            [ 6] 4253 	inc	sp
   1791 21 00 C0      [10] 4254 	ld	hl,#0xC000
   1794 E5            [11] 4255 	push	hl
   1795 CDr00r00      [17] 4256 	call	_cpct_getScreenPtr
   1798 EB            [ 4] 4257 	ex	de,hl
   1799 21 03 06      [10] 4258 	ld	hl,#0x0603
   179C E5            [11] 4259 	push	hl
   179D D5            [11] 4260 	push	de
   179E 21r00r00      [10] 4261 	ld	hl,#_g_heart
   17A1 E5            [11] 4262 	push	hl
   17A2 CDr00r00      [17] 4263 	call	_cpct_drawSprite
   17A5 C1            [10] 4264 	pop	bc
                           4265 ;src/main.c:863: for(i=0; i<5; i++){
   17A6 03            [ 6] 4266 	inc	bc
   17A7 79            [ 4] 4267 	ld	a,c
   17A8 D6 05         [ 7] 4268 	sub	a, #0x05
   17AA 78            [ 4] 4269 	ld	a,b
   17AB 17            [ 4] 4270 	rla
   17AC 3F            [ 4] 4271 	ccf
   17AD 1F            [ 4] 4272 	rra
   17AE DE 80         [ 7] 4273 	sbc	a, #0x80
   17B0 38 D2         [12] 4274 	jr	C,00102$
   17B2 C9            [10] 4275 	ret
   17B3                    4276 ___str_1:
   17B3 53 43 4F 52 45     4277 	.ascii "SCORE"
   17B8 00                 4278 	.db 0x00
   17B9                    4279 ___str_2:
   17B9 30 30 30 30 30     4280 	.ascii "00000"
   17BE 00                 4281 	.db 0x00
   17BF                    4282 ___str_3:
   17BF 52 4F 42 4F 42 49  4283 	.ascii "ROBOBIT"
        54
   17C6 00                 4284 	.db 0x00
   17C7                    4285 ___str_4:
   17C7 4C 49 56 45 53     4286 	.ascii "LIVES"
   17CC 00                 4287 	.db 0x00
                           4288 ;src/main.c:869: void borrarPantallaArriba(u8 x, u8 y, u8 ancho, u8 alto){
                           4289 ;	---------------------------------
                           4290 ; Function borrarPantallaArriba
                           4291 ; ---------------------------------
   17CD                    4292 _borrarPantallaArriba::
   17CD DD E5         [15] 4293 	push	ix
   17CF DD 21 00 00   [14] 4294 	ld	ix,#0
   17D3 DD 39         [15] 4295 	add	ix,sp
                           4296 ;src/main.c:872: memptr = cpct_getScreenPtr(CPCT_VMEM_START, x, y); // posición para borrar la mitad derecha
   17D5 DD 66 05      [19] 4297 	ld	h,5 (ix)
   17D8 DD 6E 04      [19] 4298 	ld	l,4 (ix)
   17DB E5            [11] 4299 	push	hl
   17DC 21 00 C0      [10] 4300 	ld	hl,#0xC000
   17DF E5            [11] 4301 	push	hl
   17E0 CDr00r00      [17] 4302 	call	_cpct_getScreenPtr
   17E3 4D            [ 4] 4303 	ld	c,l
   17E4 44            [ 4] 4304 	ld	b,h
                           4305 ;src/main.c:873: cpct_drawSolidBox(memptr, 0, ancho, alto);  //borra la mitad derecha
   17E5 DD 66 07      [19] 4306 	ld	h,7 (ix)
   17E8 DD 6E 06      [19] 4307 	ld	l,6 (ix)
   17EB E5            [11] 4308 	push	hl
   17EC AF            [ 4] 4309 	xor	a, a
   17ED F5            [11] 4310 	push	af
   17EE 33            [ 6] 4311 	inc	sp
   17EF C5            [11] 4312 	push	bc
   17F0 CDr00r00      [17] 4313 	call	_cpct_drawSolidBox
   17F3 F1            [10] 4314 	pop	af
   17F4 F1            [10] 4315 	pop	af
   17F5 33            [ 6] 4316 	inc	sp
                           4317 ;src/main.c:874: memptr = cpct_getScreenPtr(CPCT_VMEM_START, x + 40, y); // posición para borrar la mitad izquierda
   17F6 DD 7E 04      [19] 4318 	ld	a,4 (ix)
   17F9 C6 28         [ 7] 4319 	add	a, #0x28
   17FB 47            [ 4] 4320 	ld	b,a
   17FC DD 7E 05      [19] 4321 	ld	a,5 (ix)
   17FF F5            [11] 4322 	push	af
   1800 33            [ 6] 4323 	inc	sp
   1801 C5            [11] 4324 	push	bc
   1802 33            [ 6] 4325 	inc	sp
   1803 21 00 C0      [10] 4326 	ld	hl,#0xC000
   1806 E5            [11] 4327 	push	hl
   1807 CDr00r00      [17] 4328 	call	_cpct_getScreenPtr
   180A 4D            [ 4] 4329 	ld	c,l
   180B 44            [ 4] 4330 	ld	b,h
                           4331 ;src/main.c:875: cpct_drawSolidBox(memptr, 0, ancho, alto);  //borra la mitad izquierda
   180C DD 66 07      [19] 4332 	ld	h,7 (ix)
   180F DD 6E 06      [19] 4333 	ld	l,6 (ix)
   1812 E5            [11] 4334 	push	hl
   1813 AF            [ 4] 4335 	xor	a, a
   1814 F5            [11] 4336 	push	af
   1815 33            [ 6] 4337 	inc	sp
   1816 C5            [11] 4338 	push	bc
   1817 CDr00r00      [17] 4339 	call	_cpct_drawSolidBox
   181A F1            [10] 4340 	pop	af
   181B F1            [10] 4341 	pop	af
   181C 33            [ 6] 4342 	inc	sp
   181D DD E1         [14] 4343 	pop	ix
   181F C9            [10] 4344 	ret
                           4345 ;src/main.c:878: void menuInicio(){
                           4346 ;	---------------------------------
                           4347 ; Function menuInicio
                           4348 ; ---------------------------------
   1820                    4349 _menuInicio::
                           4350 ;src/main.c:882: cpct_clearScreen(0);
   1820 21 00 40      [10] 4351 	ld	hl,#0x4000
   1823 E5            [11] 4352 	push	hl
   1824 AF            [ 4] 4353 	xor	a, a
   1825 F5            [11] 4354 	push	af
   1826 33            [ 6] 4355 	inc	sp
   1827 26 C0         [ 7] 4356 	ld	h, #0xC0
   1829 E5            [11] 4357 	push	hl
   182A CDr00r00      [17] 4358 	call	_cpct_memset
                           4359 ;src/main.c:884: memptr = cpct_getScreenPtr(CPCT_VMEM_START, 26, 15); // centrado en horizontal y arriba en vertical
   182D 21 1A 0F      [10] 4360 	ld	hl,#0x0F1A
   1830 E5            [11] 4361 	push	hl
   1831 21 00 C0      [10] 4362 	ld	hl,#0xC000
   1834 E5            [11] 4363 	push	hl
   1835 CDr00r00      [17] 4364 	call	_cpct_getScreenPtr
   1838 4D            [ 4] 4365 	ld	c,l
   1839 44            [ 4] 4366 	ld	b,h
                           4367 ;src/main.c:885: cpct_drawStringM0("ROBOBIT", memptr, 4, 0);
   183A 21 04 00      [10] 4368 	ld	hl,#0x0004
   183D E5            [11] 4369 	push	hl
   183E C5            [11] 4370 	push	bc
   183F 21rD3r18      [10] 4371 	ld	hl,#___str_5
   1842 E5            [11] 4372 	push	hl
   1843 CDr00r00      [17] 4373 	call	_cpct_drawStringM0
   1846 21 06 00      [10] 4374 	ld	hl,#6
   1849 39            [11] 4375 	add	hl,sp
   184A F9            [ 6] 4376 	ld	sp,hl
                           4377 ;src/main.c:887: cpct_drawSprite(g_text_0, cpctm_screenPtr(CPCT_VMEM_START,  0, 30), G_TEXT_0_W, G_TEXT_0_H); // imagen
   184B 21 28 6E      [10] 4378 	ld	hl,#0x6E28
   184E E5            [11] 4379 	push	hl
   184F 21 F0 F0      [10] 4380 	ld	hl,#0xF0F0
   1852 E5            [11] 4381 	push	hl
   1853 21r00r00      [10] 4382 	ld	hl,#_g_text_0
   1856 E5            [11] 4383 	push	hl
   1857 CDr00r00      [17] 4384 	call	_cpct_drawSprite
                           4385 ;src/main.c:888: cpct_drawSprite(g_text_1, cpctm_screenPtr(CPCT_VMEM_START, 40, 30), G_TEXT_0_W, G_TEXT_0_H);
   185A 21 28 6E      [10] 4386 	ld	hl,#0x6E28
   185D E5            [11] 4387 	push	hl
   185E 21 18 F1      [10] 4388 	ld	hl,#0xF118
   1861 E5            [11] 4389 	push	hl
   1862 21r00r00      [10] 4390 	ld	hl,#_g_text_1
   1865 E5            [11] 4391 	push	hl
   1866 CDr00r00      [17] 4392 	call	_cpct_drawSprite
                           4393 ;src/main.c:911: memptr = cpct_getScreenPtr(CPCT_VMEM_START, 8, 160); // centrado en horizontal y abajo en vertical
   1869 21 08 A0      [10] 4394 	ld	hl,#0xA008
   186C E5            [11] 4395 	push	hl
   186D 21 00 C0      [10] 4396 	ld	hl,#0xC000
   1870 E5            [11] 4397 	push	hl
   1871 CDr00r00      [17] 4398 	call	_cpct_getScreenPtr
   1874 4D            [ 4] 4399 	ld	c,l
   1875 44            [ 4] 4400 	ld	b,h
                           4401 ;src/main.c:912: cpct_drawStringM0("TO START PRESS S", memptr, 4, 0);
   1876 21 04 00      [10] 4402 	ld	hl,#0x0004
   1879 E5            [11] 4403 	push	hl
   187A C5            [11] 4404 	push	bc
   187B 21rDBr18      [10] 4405 	ld	hl,#___str_6
   187E E5            [11] 4406 	push	hl
   187F CDr00r00      [17] 4407 	call	_cpct_drawStringM0
   1882 21 06 00      [10] 4408 	ld	hl,#6
   1885 39            [11] 4409 	add	hl,sp
   1886 F9            [ 6] 4410 	ld	sp,hl
                           4411 ;src/main.c:914: memptr = cpct_getScreenPtr(CPCT_VMEM_START, 10, 170); // centrado en horizontal y abajo en vertical
   1887 21 0A AA      [10] 4412 	ld	hl,#0xAA0A
   188A E5            [11] 4413 	push	hl
   188B 21 00 C0      [10] 4414 	ld	hl,#0xC000
   188E E5            [11] 4415 	push	hl
   188F CDr00r00      [17] 4416 	call	_cpct_getScreenPtr
   1892 4D            [ 4] 4417 	ld	c,l
   1893 44            [ 4] 4418 	ld	b,h
                           4419 ;src/main.c:915: cpct_drawStringM0("TO MENU PRESS M", memptr, 4, 0);
   1894 21 04 00      [10] 4420 	ld	hl,#0x0004
   1897 E5            [11] 4421 	push	hl
   1898 C5            [11] 4422 	push	bc
   1899 21rECr18      [10] 4423 	ld	hl,#___str_7
   189C E5            [11] 4424 	push	hl
   189D CDr00r00      [17] 4425 	call	_cpct_drawStringM0
   18A0 21 06 00      [10] 4426 	ld	hl,#6
   18A3 39            [11] 4427 	add	hl,sp
   18A4 F9            [ 6] 4428 	ld	sp,hl
                           4429 ;src/main.c:918: do{
   18A5                    4430 00106$:
                           4431 ;src/main.c:919: cpct_scanKeyboard_f();
   18A5 CDr00r00      [17] 4432 	call	_cpct_scanKeyboard_f
                           4433 ;src/main.c:923: if(cpct_isKeyPressed(Key_M)){
   18A8 21 04 40      [10] 4434 	ld	hl,#0x4004
   18AB CDr00r00      [17] 4435 	call	_cpct_isKeyPressed
   18AE 7D            [ 4] 4436 	ld	a,l
   18AF B7            [ 4] 4437 	or	a, a
   18B0 28 0D         [12] 4438 	jr	Z,00107$
                           4439 ;src/main.c:924: cpct_scanKeyboard_f();
   18B2 CDr00r00      [17] 4440 	call	_cpct_scanKeyboard_f
                           4441 ;src/main.c:925: do{
   18B5                    4442 00101$:
                           4443 ;src/main.c:927: } while(!cpct_isKeyPressed(Key_S));
   18B5 21 07 10      [10] 4444 	ld	hl,#0x1007
   18B8 CDr00r00      [17] 4445 	call	_cpct_isKeyPressed
   18BB 7D            [ 4] 4446 	ld	a,l
   18BC B7            [ 4] 4447 	or	a, a
   18BD 28 F6         [12] 4448 	jr	Z,00101$
   18BF                    4449 00107$:
                           4450 ;src/main.c:929: } while(!cpct_isKeyPressed(Key_S) && !cpct_isKeyPressed(Key_M));
   18BF 21 07 10      [10] 4451 	ld	hl,#0x1007
   18C2 CDr00r00      [17] 4452 	call	_cpct_isKeyPressed
   18C5 7D            [ 4] 4453 	ld	a,l
   18C6 B7            [ 4] 4454 	or	a, a
   18C7 C0            [11] 4455 	ret	NZ
   18C8 21 04 40      [10] 4456 	ld	hl,#0x4004
   18CB CDr00r00      [17] 4457 	call	_cpct_isKeyPressed
   18CE 7D            [ 4] 4458 	ld	a,l
   18CF B7            [ 4] 4459 	or	a, a
   18D0 28 D3         [12] 4460 	jr	Z,00106$
   18D2 C9            [10] 4461 	ret
   18D3                    4462 ___str_5:
   18D3 52 4F 42 4F 42 49  4463 	.ascii "ROBOBIT"
        54
   18DA 00                 4464 	.db 0x00
   18DB                    4465 ___str_6:
   18DB 54 4F 20 53 54 41  4466 	.ascii "TO START PRESS S"
        52 54 20 50 52 45
        53 53 20 53
   18EB 00                 4467 	.db 0x00
   18EC                    4468 ___str_7:
   18EC 54 4F 20 4D 45 4E  4469 	.ascii "TO MENU PRESS M"
        55 20 50 52 45 53
        53 20 4D
   18FB 00                 4470 	.db 0x00
                           4471 ;src/main.c:932: void inicializarCPC() {
                           4472 ;	---------------------------------
                           4473 ; Function inicializarCPC
                           4474 ; ---------------------------------
   18FC                    4475 _inicializarCPC::
                           4476 ;src/main.c:933: cpct_disableFirmware();
   18FC CDr00r00      [17] 4477 	call	_cpct_disableFirmware
                           4478 ;src/main.c:934: cpct_setVideoMode(0);
   18FF 2E 00         [ 7] 4479 	ld	l,#0x00
   1901 CDr00r00      [17] 4480 	call	_cpct_setVideoMode
                           4481 ;src/main.c:935: cpct_setBorder(HW_BLACK);
   1904 21 10 14      [10] 4482 	ld	hl,#0x1410
   1907 E5            [11] 4483 	push	hl
   1908 CDr00r00      [17] 4484 	call	_cpct_setPALColour
                           4485 ;src/main.c:936: cpct_setPalette(g_palette, 16);
   190B 21 10 00      [10] 4486 	ld	hl,#0x0010
   190E E5            [11] 4487 	push	hl
   190F 21r00r00      [10] 4488 	ld	hl,#_g_palette
   1912 E5            [11] 4489 	push	hl
   1913 CDr00r00      [17] 4490 	call	_cpct_setPalette
                           4491 ;src/main.c:937: cpct_akp_musicInit(G_song);
   1916 21r00r0F      [10] 4492 	ld	hl,#_G_song
   1919 E5            [11] 4493 	push	hl
   191A CDr00r00      [17] 4494 	call	_cpct_akp_musicInit
   191D F1            [10] 4495 	pop	af
   191E C9            [10] 4496 	ret
                           4497 ;src/main.c:940: void inicializarEnemy() {
                           4498 ;	---------------------------------
                           4499 ; Function inicializarEnemy
                           4500 ; ---------------------------------
   191F                    4501 _inicializarEnemy::
   191F DD E5         [15] 4502 	push	ix
   1921 DD 21 00 00   [14] 4503 	ld	ix,#0
   1925 DD 39         [15] 4504 	add	ix,sp
   1927 21 F9 FF      [10] 4505 	ld	hl,#-7
   192A 39            [11] 4506 	add	hl,sp
   192B F9            [ 6] 4507 	ld	sp,hl
                           4508 ;src/main.c:951: actual = enemy;
   192C 01r02r00      [10] 4509 	ld	bc,#_enemy+0
                           4510 ;src/main.c:952: while(--i){
   192F DD 36 F9 02   [19] 4511 	ld	-7 (ix),#0x02
   1933                    4512 00101$:
   1933 DD 35 F9      [23] 4513 	dec	-7 (ix)
   1936 DD 7E F9      [19] 4514 	ld	a,-7 (ix)
   1939 B7            [ 4] 4515 	or	a, a
   193A CAr10r1A      [10] 4516 	jp	Z,00104$
                           4517 ;src/main.c:953: actual->x = actual->px = spawnX[i];
   193D 59            [ 4] 4518 	ld	e, c
   193E 50            [ 4] 4519 	ld	d, b
   193F 13            [ 6] 4520 	inc	de
   1940 13            [ 6] 4521 	inc	de
   1941 3Er1C         [ 7] 4522 	ld	a,#<(_spawnX)
   1943 DD 86 F9      [19] 4523 	add	a, -7 (ix)
   1946 DD 77 FB      [19] 4524 	ld	-5 (ix),a
   1949 3Es00         [ 7] 4525 	ld	a,#>(_spawnX)
   194B CE 00         [ 7] 4526 	adc	a, #0x00
   194D DD 77 FC      [19] 4527 	ld	-4 (ix),a
   1950 DD 6E FB      [19] 4528 	ld	l,-5 (ix)
   1953 DD 66 FC      [19] 4529 	ld	h,-4 (ix)
   1956 7E            [ 7] 4530 	ld	a,(hl)
   1957 DD 77 FA      [19] 4531 	ld	-6 (ix), a
   195A 12            [ 7] 4532 	ld	(de),a
   195B DD 7E FA      [19] 4533 	ld	a,-6 (ix)
   195E 02            [ 7] 4534 	ld	(bc),a
                           4535 ;src/main.c:954: actual->y = actual->py = spawnY[i];
   195F 59            [ 4] 4536 	ld	e, c
   1960 50            [ 4] 4537 	ld	d, b
   1961 13            [ 6] 4538 	inc	de
   1962 21 03 00      [10] 4539 	ld	hl,#0x0003
   1965 09            [11] 4540 	add	hl,bc
   1966 DD 75 FE      [19] 4541 	ld	-2 (ix),l
   1969 DD 74 FF      [19] 4542 	ld	-1 (ix),h
   196C FD 21r21r00   [14] 4543 	ld	iy,#_spawnY
   1970 C5            [11] 4544 	push	bc
   1971 DD 4E F9      [19] 4545 	ld	c,-7 (ix)
   1974 06 00         [ 7] 4546 	ld	b,#0x00
   1976 FD 09         [15] 4547 	add	iy, bc
   1978 C1            [10] 4548 	pop	bc
   1979 FD 7E 00      [19] 4549 	ld	a, 0 (iy)
   197C DD 77 FD      [19] 4550 	ld	-3 (ix),a
   197F DD 6E FE      [19] 4551 	ld	l,-2 (ix)
   1982 DD 66 FF      [19] 4552 	ld	h,-1 (ix)
   1985 DD 7E FD      [19] 4553 	ld	a,-3 (ix)
   1988 77            [ 7] 4554 	ld	(hl),a
   1989 DD 7E FD      [19] 4555 	ld	a,-3 (ix)
   198C 12            [ 7] 4556 	ld	(de),a
                           4557 ;src/main.c:955: actual->mover  = NO;
   198D 21 06 00      [10] 4558 	ld	hl,#0x0006
   1990 09            [11] 4559 	add	hl,bc
   1991 36 00         [10] 4560 	ld	(hl),#0x00
                           4561 ;src/main.c:956: actual->mira   = M_abajo;
   1993 21 07 00      [10] 4562 	ld	hl,#0x0007
   1996 09            [11] 4563 	add	hl,bc
   1997 36 03         [10] 4564 	ld	(hl),#0x03
                           4565 ;src/main.c:957: actual->sprite = g_enemy;
   1999 21 04 00      [10] 4566 	ld	hl,#0x0004
   199C 09            [11] 4567 	add	hl,bc
   199D 36r00         [10] 4568 	ld	(hl),#<(_g_enemy)
   199F 23            [ 6] 4569 	inc	hl
   19A0 36s00         [10] 4570 	ld	(hl),#>(_g_enemy)
                           4571 ;src/main.c:958: actual->muerto = NO;
   19A2 21 08 00      [10] 4572 	ld	hl,#0x0008
   19A5 09            [11] 4573 	add	hl,bc
   19A6 36 00         [10] 4574 	ld	(hl),#0x00
                           4575 ;src/main.c:959: actual->muertes = 0;
   19A8 21 0A 00      [10] 4576 	ld	hl,#0x000A
   19AB 09            [11] 4577 	add	hl,bc
   19AC 36 00         [10] 4578 	ld	(hl),#0x00
                           4579 ;src/main.c:960: actual->patrolling = SI;
   19AE 21 0B 00      [10] 4580 	ld	hl,#0x000B
   19B1 09            [11] 4581 	add	hl,bc
   19B2 36 01         [10] 4582 	ld	(hl),#0x01
                           4583 ;src/main.c:961: actual->onPathPatrol = SI;
   19B4 21 0C 00      [10] 4584 	ld	hl,#0x000C
   19B7 09            [11] 4585 	add	hl,bc
   19B8 36 01         [10] 4586 	ld	(hl),#0x01
                           4587 ;src/main.c:962: actual->reversePatrol = NO;
   19BA 21 0D 00      [10] 4588 	ld	hl,#0x000D
   19BD 09            [11] 4589 	add	hl,bc
   19BE 36 00         [10] 4590 	ld	(hl),#0x00
                           4591 ;src/main.c:963: actual->iter = 0;
   19C0 21 0F 00      [10] 4592 	ld	hl,#0x000F
   19C3 09            [11] 4593 	add	hl,bc
   19C4 36 00         [10] 4594 	ld	(hl),#0x00
                           4595 ;src/main.c:964: actual->lastIter = 0;
   19C6 21 10 00      [10] 4596 	ld	hl,#0x0010
   19C9 09            [11] 4597 	add	hl,bc
   19CA 36 00         [10] 4598 	ld	(hl),#0x00
                           4599 ;src/main.c:965: actual->seen = 0;
   19CC 21 12 00      [10] 4600 	ld	hl,#0x0012
   19CF 09            [11] 4601 	add	hl,bc
   19D0 36 00         [10] 4602 	ld	(hl),#0x00
                           4603 ;src/main.c:966: actual->found = 0;
   19D2 21 13 00      [10] 4604 	ld	hl,#0x0013
   19D5 09            [11] 4605 	add	hl,bc
   19D6 36 00         [10] 4606 	ld	(hl),#0x00
                           4607 ;src/main.c:967: pathFinding(actual->x, actual->y, spawnX[i] - 20, spawnY[i], actual, mapa); // calculo rutas de patrulla
   19D8 FD 5E 00      [19] 4608 	ld	e, 0 (iy)
   19DB DD 6E FB      [19] 4609 	ld	l,-5 (ix)
   19DE DD 66 FC      [19] 4610 	ld	h,-4 (ix)
   19E1 7E            [ 7] 4611 	ld	a,(hl)
   19E2 C6 EC         [ 7] 4612 	add	a,#0xEC
   19E4 57            [ 4] 4613 	ld	d,a
   19E5 C5            [11] 4614 	push	bc
   19E6 2Ar25r05      [16] 4615 	ld	hl,(_mapa)
   19E9 E5            [11] 4616 	push	hl
   19EA C5            [11] 4617 	push	bc
   19EB 7B            [ 4] 4618 	ld	a,e
   19EC F5            [11] 4619 	push	af
   19ED 33            [ 6] 4620 	inc	sp
   19EE D5            [11] 4621 	push	de
   19EF 33            [ 6] 4622 	inc	sp
   19F0 DD 66 FD      [19] 4623 	ld	h,-3 (ix)
   19F3 DD 6E FA      [19] 4624 	ld	l,-6 (ix)
   19F6 E5            [11] 4625 	push	hl
   19F7 CDr00r00      [17] 4626 	call	_pathFinding
   19FA 21 08 00      [10] 4627 	ld	hl,#8
   19FD 39            [11] 4628 	add	hl,sp
   19FE F9            [ 6] 4629 	ld	sp,hl
   19FF C1            [10] 4630 	pop	bc
                           4631 ;src/main.c:990: dibujarEnemigo(actual);
   1A00 C5            [11] 4632 	push	bc
   1A01 C5            [11] 4633 	push	bc
   1A02 CDrA1r02      [17] 4634 	call	_dibujarEnemigo
   1A05 F1            [10] 4635 	pop	af
   1A06 C1            [10] 4636 	pop	bc
                           4637 ;src/main.c:992: ++actual;
   1A07 21 44 01      [10] 4638 	ld	hl,#0x0144
   1A0A 09            [11] 4639 	add	hl,bc
   1A0B 4D            [ 4] 4640 	ld	c,l
   1A0C 44            [ 4] 4641 	ld	b,h
   1A0D C3r33r19      [10] 4642 	jp	00101$
   1A10                    4643 00104$:
   1A10 DD F9         [10] 4644 	ld	sp, ix
   1A12 DD E1         [14] 4645 	pop	ix
   1A14 C9            [10] 4646 	ret
                           4647 ;src/main.c:996: void inicializarJuego() {
                           4648 ;	---------------------------------
                           4649 ; Function inicializarJuego
                           4650 ; ---------------------------------
   1A15                    4651 _inicializarJuego::
                           4652 ;src/main.c:998: iter = 0;
   1A15 21r24r05      [10] 4653 	ld	hl,#_iter + 0
   1A18 36 00         [10] 4654 	ld	(hl), #0x00
                           4655 ;src/main.c:999: num_mapa = 0;
   1A1A 21r27r05      [10] 4656 	ld	hl,#_num_mapa + 0
   1A1D 36 00         [10] 4657 	ld	(hl), #0x00
                           4658 ;src/main.c:1000: mapa = mapas[num_mapa];
   1A1F 21r16r00      [10] 4659 	ld	hl, #_mapas + 0
   1A22 7E            [ 7] 4660 	ld	a,(hl)
   1A23 FD 21r25r05   [14] 4661 	ld	iy,#_mapa
   1A27 FD 77 00      [19] 4662 	ld	0 (iy),a
   1A2A 23            [ 6] 4663 	inc	hl
   1A2B 7E            [ 7] 4664 	ld	a,(hl)
   1A2C 32r26r05      [13] 4665 	ld	(#_mapa + 1),a
                           4666 ;src/main.c:1001: cpct_etm_setTileset2x4(g_tileset);
   1A2F 21r00r00      [10] 4667 	ld	hl,#_g_tileset
   1A32 CDr00r00      [17] 4668 	call	_cpct_etm_setTileset2x4
                           4669 ;src/main.c:1003: dibujarMapa();
   1A35 CDr00r00      [17] 4670 	call	_dibujarMapa
                           4671 ;src/main.c:1005: borrarPantallaArriba(0, 0, 40, 1);
   1A38 21 28 01      [10] 4672 	ld	hl,#0x0128
   1A3B E5            [11] 4673 	push	hl
   1A3C 21 00 00      [10] 4674 	ld	hl,#0x0000
   1A3F E5            [11] 4675 	push	hl
   1A40 CDrCDr17      [17] 4676 	call	_borrarPantallaArriba
   1A43 F1            [10] 4677 	pop	af
   1A44 F1            [10] 4678 	pop	af
                           4679 ;src/main.c:1006: barraPuntuacionInicial();
   1A45 CDr0Br17      [17] 4680 	call	_barraPuntuacionInicial
                           4681 ;src/main.c:1009: prota.x = prota.px = 5;
   1A48 21r14r05      [10] 4682 	ld	hl,#(_prota + 0x0002)
   1A4B 36 05         [10] 4683 	ld	(hl),#0x05
   1A4D 21r12r05      [10] 4684 	ld	hl,#_prota
   1A50 36 05         [10] 4685 	ld	(hl),#0x05
                           4686 ;src/main.c:1010: prota.y = prota.py = 76 + ORIGEN_MAPA_Y;
   1A52 21r15r05      [10] 4687 	ld	hl,#(_prota + 0x0003)
   1A55 36 64         [10] 4688 	ld	(hl),#0x64
   1A57 21r13r05      [10] 4689 	ld	hl,#(_prota + 0x0001)
   1A5A 36 64         [10] 4690 	ld	(hl),#0x64
                           4691 ;src/main.c:1011: prota.mover  = NO;
   1A5C 21r18r05      [10] 4692 	ld	hl,#(_prota + 0x0006)
   1A5F 36 00         [10] 4693 	ld	(hl),#0x00
                           4694 ;src/main.c:1012: prota.mira=M_derecha;
   1A61 21r19r05      [10] 4695 	ld	hl,#(_prota + 0x0007)
   1A64 36 00         [10] 4696 	ld	(hl),#0x00
                           4697 ;src/main.c:1013: prota.sprite = g_hero;
   1A66 21r00r00      [10] 4698 	ld	hl,#_g_hero
   1A69 22r16r05      [16] 4699 	ld	((_prota + 0x0004)), hl
                           4700 ;src/main.c:1017: cu.x = cu.px = 0;
   1A6C 21r1Cr05      [10] 4701 	ld	hl,#(_cu + 0x0002)
   1A6F 36 00         [10] 4702 	ld	(hl),#0x00
   1A71 21r1Ar05      [10] 4703 	ld	hl,#_cu
   1A74 36 00         [10] 4704 	ld	(hl),#0x00
                           4705 ;src/main.c:1018: cu.y = cu.py = 0;
   1A76 21r1Dr05      [10] 4706 	ld	hl,#(_cu + 0x0003)
   1A79 36 00         [10] 4707 	ld	(hl),#0x00
   1A7B 21r1Br05      [10] 4708 	ld	hl,#(_cu + 0x0001)
   1A7E 36 00         [10] 4709 	ld	(hl),#0x00
                           4710 ;src/main.c:1019: cu.lanzado = NO;
   1A80 21r20r05      [10] 4711 	ld	hl,#(_cu + 0x0006)
   1A83 36 00         [10] 4712 	ld	(hl),#0x00
                           4713 ;src/main.c:1020: cu.mover = NO;
   1A85 21r23r05      [10] 4714 	ld	hl,#(_cu + 0x0009)
   1A88 36 00         [10] 4715 	ld	(hl),#0x00
                           4716 ;src/main.c:1022: inicializarEnemy();
   1A8A CDr1Fr19      [17] 4717 	call	_inicializarEnemy
                           4718 ;src/main.c:1024: dibujarProta();
   1A8D C3r26r00      [10] 4719 	jp  _dibujarProta
                           4720 ;src/main.c:1027: void main(void) {
                           4721 ;	---------------------------------
                           4722 ; Function main
                           4723 ; ---------------------------------
   1A90                    4724 _main::
   1A90 DD E5         [15] 4725 	push	ix
   1A92 DD 21 00 00   [14] 4726 	ld	ix,#0
   1A96 DD 39         [15] 4727 	add	ix,sp
   1A98 3B            [ 6] 4728 	dec	sp
                           4729 ;src/main.c:1032: inicializarCPC();
   1A99 CDrFCr18      [17] 4730 	call	_inicializarCPC
                           4731 ;src/main.c:1033: menuInicio();
   1A9C CDr20r18      [17] 4732 	call	_menuInicio
                           4733 ;src/main.c:1035: inicializarJuego();
   1A9F CDr15r1A      [17] 4734 	call	_inicializarJuego
                           4735 ;src/main.c:1036: cpct_akp_musicPlay();
   1AA2 CDr00r00      [17] 4736 	call	_cpct_akp_musicPlay
                           4737 ;src/main.c:1038: while (1) {
   1AA5                    4738 00119$:
                           4739 ;src/main.c:1041: i = 1 + 1;
   1AA5 DD 36 FF 02   [19] 4740 	ld	-1 (ix),#0x02
                           4741 ;src/main.c:1044: comprobarTeclado();
   1AA9 CDr03r16      [17] 4742 	call	_comprobarTeclado
                           4743 ;src/main.c:1045: moverCuchillo();
   1AAC CDr66r16      [17] 4744 	call	_moverCuchillo
                           4745 ;src/main.c:1046: updateEnemies();
   1AAF CDrFCr11      [17] 4746 	call	_updateEnemies
                           4747 ;src/main.c:1061: actual = enemy;
                           4748 ;src/main.c:1063: cpct_waitVSYNC();
   1AB2 CDr00r00      [17] 4749 	call	_cpct_waitVSYNC
                           4750 ;src/main.c:1065: if (prota.mover) {
   1AB5 01r18r05      [10] 4751 	ld	bc,#_prota+6
   1AB8 0A            [ 7] 4752 	ld	a,(bc)
   1AB9 B7            [ 4] 4753 	or	a, a
   1ABA 28 07         [12] 4754 	jr	Z,00102$
                           4755 ;src/main.c:1066: redibujarProta();
   1ABC C5            [11] 4756 	push	bc
   1ABD CDrF7r00      [17] 4757 	call	_redibujarProta
   1AC0 C1            [10] 4758 	pop	bc
                           4759 ;src/main.c:1067: prota.mover = NO;
   1AC1 AF            [ 4] 4760 	xor	a, a
   1AC2 02            [ 7] 4761 	ld	(bc),a
   1AC3                    4762 00102$:
                           4763 ;src/main.c:1069: if(cu.lanzado && cu.mover){
   1AC3 21r20r05      [10] 4764 	ld	hl,#_cu + 6
   1AC6 4E            [ 7] 4765 	ld	c,(hl)
   1AC7 11r23r05      [10] 4766 	ld	de,#_cu + 9
   1ACA 79            [ 4] 4767 	ld	a,c
   1ACB B7            [ 4] 4768 	or	a, a
   1ACC 28 09         [12] 4769 	jr	Z,00107$
   1ACE 1A            [ 7] 4770 	ld	a,(de)
   1ACF B7            [ 4] 4771 	or	a, a
   1AD0 28 05         [12] 4772 	jr	Z,00107$
                           4773 ;src/main.c:1070: redibujarCuchillo();
   1AD2 CDrD3r14      [17] 4774 	call	_redibujarCuchillo
   1AD5 18 0B         [12] 4775 	jr	00132$
   1AD7                    4776 00107$:
                           4777 ;src/main.c:1071: }else if (cu.lanzado && !cu.mover){
   1AD7 79            [ 4] 4778 	ld	a,c
   1AD8 B7            [ 4] 4779 	or	a, a
   1AD9 28 07         [12] 4780 	jr	Z,00132$
   1ADB 1A            [ 7] 4781 	ld	a,(de)
   1ADC B7            [ 4] 4782 	or	a, a
   1ADD 20 03         [12] 4783 	jr	NZ,00132$
                           4784 ;src/main.c:1072: borrarCuchillo();
   1ADF CDr55r14      [17] 4785 	call	_borrarCuchillo
                           4786 ;src/main.c:1075: while(--i){
   1AE2                    4787 00132$:
   1AE2 01r02r00      [10] 4788 	ld	bc,#_enemy
   1AE5                    4789 00115$:
   1AE5 DD 35 FF      [23] 4790 	dec	-1 (ix)
   1AE8 DD 7E FF      [19] 4791 	ld	a, -1 (ix)
   1AEB B7            [ 4] 4792 	or	a, a
   1AEC 28 43         [12] 4793 	jr	Z,00117$
                           4794 ;src/main.c:1076: if(actual->mover){
   1AEE C5            [11] 4795 	push	bc
   1AEF FD E1         [14] 4796 	pop	iy
   1AF1 FD 7E 06      [19] 4797 	ld	a,6 (iy)
   1AF4 B7            [ 4] 4798 	or	a, a
   1AF5 28 07         [12] 4799 	jr	Z,00111$
                           4800 ;src/main.c:1077: redibujarEnemigo(actual);
   1AF7 C5            [11] 4801 	push	bc
   1AF8 C5            [11] 4802 	push	bc
   1AF9 CDr15r04      [17] 4803 	call	_redibujarEnemigo
   1AFC F1            [10] 4804 	pop	af
   1AFD C1            [10] 4805 	pop	bc
   1AFE                    4806 00111$:
                           4807 ;src/main.c:1079: if (actual->muerto && actual->muertes == 0){
   1AFE C5            [11] 4808 	push	bc
   1AFF FD E1         [14] 4809 	pop	iy
   1B01 FD 7E 08      [19] 4810 	ld	a,8 (iy)
   1B04 B7            [ 4] 4811 	or	a, a
   1B05 28 22         [12] 4812 	jr	Z,00113$
   1B07 21 0A 00      [10] 4813 	ld	hl,#0x000A
   1B0A 09            [11] 4814 	add	hl,bc
   1B0B 7E            [ 7] 4815 	ld	a,(hl)
   1B0C B7            [ 4] 4816 	or	a, a
   1B0D 20 1A         [12] 4817 	jr	NZ,00113$
                           4818 ;src/main.c:1080: borrarEnemigo(actual);
   1B0F E5            [11] 4819 	push	hl
   1B10 C5            [11] 4820 	push	bc
   1B11 C5            [11] 4821 	push	bc
   1B12 CDr81r03      [17] 4822 	call	_borrarEnemigo
   1B15 F1            [10] 4823 	pop	af
   1B16 C1            [10] 4824 	pop	bc
   1B17 C5            [11] 4825 	push	bc
   1B18 C5            [11] 4826 	push	bc
   1B19 CDrD9r02      [17] 4827 	call	_dibujarExplosion
   1B1C F1            [10] 4828 	pop	af
   1B1D C1            [10] 4829 	pop	bc
   1B1E E1            [10] 4830 	pop	hl
                           4831 ;src/main.c:1083: actual->muertes++;
   1B1F 5E            [ 7] 4832 	ld	e,(hl)
   1B20 1C            [ 4] 4833 	inc	e
   1B21 73            [ 7] 4834 	ld	(hl),e
                           4835 ;src/main.c:1084: actual->x = 0;
   1B22 AF            [ 4] 4836 	xor	a, a
   1B23 02            [ 7] 4837 	ld	(bc),a
                           4838 ;src/main.c:1085: actual->y = 0;
   1B24 59            [ 4] 4839 	ld	e, c
   1B25 50            [ 4] 4840 	ld	d, b
   1B26 13            [ 6] 4841 	inc	de
   1B27 AF            [ 4] 4842 	xor	a, a
   1B28 12            [ 7] 4843 	ld	(de),a
   1B29                    4844 00113$:
                           4845 ;src/main.c:1087: ++actual;
   1B29 21 44 01      [10] 4846 	ld	hl,#0x0144
   1B2C 09            [11] 4847 	add	hl,bc
   1B2D 4D            [ 4] 4848 	ld	c,l
   1B2E 44            [ 4] 4849 	ld	b,h
   1B2F 18 B4         [12] 4850 	jr	00115$
   1B31                    4851 00117$:
                           4852 ;src/main.c:1090: cpct_waitVSYNC();
   1B31 CDr00r00      [17] 4853 	call	_cpct_waitVSYNC
   1B34 C3rA5r1A      [10] 4854 	jp	00119$
   1B37 33            [ 6] 4855 	inc	sp
   1B38 DD E1         [14] 4856 	pop	ix
   1B3A C9            [10] 4857 	ret
                           4858 	.area _CODE
                           4859 	.area _INITIALIZER
                           4860 	.area _CABS (ABS)
   0F00                    4861 	.org 0x0F00
   0F00                    4862 _G_song:
   0F00 41                 4863 	.db #0x41	; 65	'A'
   0F01 54                 4864 	.db #0x54	; 84	'T'
   0F02 31                 4865 	.db #0x31	; 49	'1'
   0F03 30                 4866 	.db #0x30	; 48	'0'
   0F04 01                 4867 	.db #0x01	; 1
   0F05 40                 4868 	.db #0x40	; 64
   0F06 42                 4869 	.db #0x42	; 66	'B'
   0F07 0F                 4870 	.db #0x0F	; 15
   0F08 02                 4871 	.db #0x02	; 2
   0F09 06                 4872 	.db #0x06	; 6
   0F0A 1D                 4873 	.db #0x1D	; 29
   0F0B 00                 4874 	.db #0x00	; 0
   0F0C 10                 4875 	.db #0x10	; 16
   0F0D 40                 4876 	.db #0x40	; 64
   0F0E 19                 4877 	.db #0x19	; 25
   0F0F 40                 4878 	.db #0x40	; 64
   0F10 00                 4879 	.db #0x00	; 0
   0F11 00                 4880 	.db #0x00	; 0
   0F12 00                 4881 	.db #0x00	; 0
   0F13 00                 4882 	.db #0x00	; 0
   0F14 00                 4883 	.db #0x00	; 0
   0F15 00                 4884 	.db #0x00	; 0
   0F16 0D                 4885 	.db #0x0D	; 13
   0F17 12                 4886 	.db #0x12	; 18
   0F18 40                 4887 	.db #0x40	; 64
   0F19 01                 4888 	.db #0x01	; 1
   0F1A 00                 4889 	.db #0x00	; 0
   0F1B 7C                 4890 	.db #0x7C	; 124
   0F1C 18                 4891 	.db #0x18	; 24
   0F1D 78                 4892 	.db #0x78	; 120	'x'
   0F1E 0C                 4893 	.db #0x0C	; 12
   0F1F 34                 4894 	.db #0x34	; 52	'4'
   0F20 30                 4895 	.db #0x30	; 48	'0'
   0F21 2C                 4896 	.db #0x2C	; 44
   0F22 28                 4897 	.db #0x28	; 40
   0F23 24                 4898 	.db #0x24	; 36
   0F24 20                 4899 	.db #0x20	; 32
   0F25 1C                 4900 	.db #0x1C	; 28
   0F26 0D                 4901 	.db #0x0D	; 13
   0F27 25                 4902 	.db #0x25	; 37
   0F28 40                 4903 	.db #0x40	; 64
   0F29 20                 4904 	.db #0x20	; 32
   0F2A 00                 4905 	.db #0x00	; 0
   0F2B 00                 4906 	.db #0x00	; 0
   0F2C 00                 4907 	.db #0x00	; 0
   0F2D 39                 4908 	.db #0x39	; 57	'9'
   0F2E 40                 4909 	.db #0x40	; 64
   0F2F 00                 4910 	.db #0x00	; 0
   0F30 57                 4911 	.db #0x57	; 87	'W'
   0F31 40                 4912 	.db #0x40	; 64
   0F32 3B                 4913 	.db #0x3B	; 59
   0F33 40                 4914 	.db #0x40	; 64
   0F34 57                 4915 	.db #0x57	; 87	'W'
   0F35 40                 4916 	.db #0x40	; 64
   0F36 01                 4917 	.db #0x01	; 1
   0F37 2F                 4918 	.db #0x2F	; 47
   0F38 40                 4919 	.db #0x40	; 64
   0F39 19                 4920 	.db #0x19	; 25
   0F3A 00                 4921 	.db #0x00	; 0
   0F3B 76                 4922 	.db #0x76	; 118	'v'
   0F3C E1                 4923 	.db #0xE1	; 225
   0F3D 00                 4924 	.db #0x00	; 0
   0F3E 00                 4925 	.db #0x00	; 0
   0F3F 01                 4926 	.db #0x01	; 1
   0F40 04                 4927 	.db #0x04	; 4
   0F41 51                 4928 	.db #0x51	; 81	'Q'
   0F42 04                 4929 	.db #0x04	; 4
   0F43 37                 4930 	.db #0x37	; 55	'7'
   0F44 04                 4931 	.db #0x04	; 4
   0F45 4F                 4932 	.db #0x4F	; 79	'O'
   0F46 04                 4933 	.db #0x04	; 4
   0F47 37                 4934 	.db #0x37	; 55	'7'
   0F48 02                 4935 	.db #0x02	; 2
   0F49 4B                 4936 	.db #0x4B	; 75	'K'
   0F4A 02                 4937 	.db #0x02	; 2
   0F4B 37                 4938 	.db #0x37	; 55	'7'
   0F4C 04                 4939 	.db #0x04	; 4
   0F4D 4F                 4940 	.db #0x4F	; 79	'O'
   0F4E 04                 4941 	.db #0x04	; 4
   0F4F 37                 4942 	.db #0x37	; 55	'7'
   0F50 04                 4943 	.db #0x04	; 4
   0F51 4F                 4944 	.db #0x4F	; 79	'O'
   0F52 04                 4945 	.db #0x04	; 4
   0F53 37                 4946 	.db #0x37	; 55	'7'
   0F54 02                 4947 	.db #0x02	; 2
   0F55 4B                 4948 	.db #0x4B	; 75	'K'
   0F56 00                 4949 	.db #0x00	; 0
   0F57 42                 4950 	.db #0x42	; 66	'B'
   0F58 60                 4951 	.db #0x60	; 96
   0F59 00                 4952 	.db #0x00	; 0
   0F5A 42                 4953 	.db #0x42	; 66	'B'
   0F5B 80                 4954 	.db #0x80	; 128
   0F5C 00                 4955 	.db #0x00	; 0
   0F5D 00                 4956 	.db #0x00	; 0
   0F5E 42                 4957 	.db #0x42	; 66	'B'
   0F5F 00                 4958 	.db #0x00	; 0
   0F60 00                 4959 	.db #0x00	; 0
