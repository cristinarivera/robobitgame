                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.5 #9498 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module score
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _borrarPantalla
                             12 	.globl _cpct_getScreenPtr
                             13 	.globl _cpct_drawStringM0
                             14 	.globl _cpct_drawCharM0
                             15 	.globl _cpct_drawSprite
                             16 	.globl _barraPuntuacionInicial
                             17 	.globl _modificarPuntuacion
                             18 	.globl _modificarVidas
                             19 	.globl _aumentarPuntuacion
                             20 	.globl _quitarVidas
                             21 ;--------------------------------------------------------
                             22 ; special function registers
                             23 ;--------------------------------------------------------
                             24 ;--------------------------------------------------------
                             25 ; ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DATA
                             28 ;--------------------------------------------------------
                             29 ; ram data
                             30 ;--------------------------------------------------------
                             31 	.area _INITIALIZED
                             32 ;--------------------------------------------------------
                             33 ; absolute external ram data
                             34 ;--------------------------------------------------------
                             35 	.area _DABS (ABS)
                             36 ;--------------------------------------------------------
                             37 ; global & static initialisations
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _GSINIT
                             41 	.area _GSFINAL
                             42 	.area _GSINIT
                             43 ;--------------------------------------------------------
                             44 ; Home
                             45 ;--------------------------------------------------------
                             46 	.area _HOME
                             47 	.area _HOME
                             48 ;--------------------------------------------------------
                             49 ; code
                             50 ;--------------------------------------------------------
                             51 	.area _CODE
                             52 ;src/score/score.c:6: void barraPuntuacionInicial(){
                             53 ;	---------------------------------
                             54 ; Function barraPuntuacionInicial
                             55 ; ---------------------------------
   0000                      56 _barraPuntuacionInicial::
                             57 ;src/score/score.c:10: memptr = cpct_getScreenPtr(CPCT_VMEM_START, 0, 2); //
   0000 21 00 02      [10]   58 	ld	hl,#0x0200
   0003 E5            [11]   59 	push	hl
   0004 26 C0         [ 7]   60 	ld	h, #0xC0
   0006 E5            [11]   61 	push	hl
   0007 CDr00r00      [17]   62 	call	_cpct_getScreenPtr
   000A 4D            [ 4]   63 	ld	c,l
   000B 44            [ 4]   64 	ld	b,h
                             65 ;src/score/score.c:11: cpct_drawStringM0("SCORE", memptr, 1, 0);
   000C 21 01 00      [10]   66 	ld	hl,#0x0001
   000F E5            [11]   67 	push	hl
   0010 C5            [11]   68 	push	bc
   0011 21r8Ar00      [10]   69 	ld	hl,#___str_0
   0014 E5            [11]   70 	push	hl
   0015 CDr00r00      [17]   71 	call	_cpct_drawStringM0
   0018 21 06 00      [10]   72 	ld	hl,#6
   001B 39            [11]   73 	add	hl,sp
   001C F9            [ 6]   74 	ld	sp,hl
                             75 ;src/score/score.c:12: memptr = cpct_getScreenPtr(CPCT_VMEM_START, 0, 14); // puntuaci√≥n inicial
   001D 21 00 0E      [10]   76 	ld	hl,#0x0E00
   0020 E5            [11]   77 	push	hl
   0021 26 C0         [ 7]   78 	ld	h, #0xC0
   0023 E5            [11]   79 	push	hl
   0024 CDr00r00      [17]   80 	call	_cpct_getScreenPtr
   0027 4D            [ 4]   81 	ld	c,l
   0028 44            [ 4]   82 	ld	b,h
                             83 ;src/score/score.c:13: cpct_drawStringM0("00000", memptr, 15, 0);
   0029 21 0F 00      [10]   84 	ld	hl,#0x000F
   002C E5            [11]   85 	push	hl
   002D C5            [11]   86 	push	bc
   002E 21r90r00      [10]   87 	ld	hl,#___str_1
   0031 E5            [11]   88 	push	hl
   0032 CDr00r00      [17]   89 	call	_cpct_drawStringM0
   0035 21 06 00      [10]   90 	ld	hl,#6
   0038 39            [11]   91 	add	hl,sp
   0039 F9            [ 6]   92 	ld	sp,hl
                             93 ;src/score/score.c:15: memptr = cpct_getScreenPtr(CPCT_VMEM_START, 60, 2); //
   003A 21 3C 02      [10]   94 	ld	hl,#0x023C
   003D E5            [11]   95 	push	hl
   003E 21 00 C0      [10]   96 	ld	hl,#0xC000
   0041 E5            [11]   97 	push	hl
   0042 CDr00r00      [17]   98 	call	_cpct_getScreenPtr
   0045 4D            [ 4]   99 	ld	c,l
   0046 44            [ 4]  100 	ld	b,h
                            101 ;src/score/score.c:16: cpct_drawStringM0("LIVES", memptr, 1, 0);
   0047 21 01 00      [10]  102 	ld	hl,#0x0001
   004A E5            [11]  103 	push	hl
   004B C5            [11]  104 	push	bc
   004C 21r96r00      [10]  105 	ld	hl,#___str_2
   004F E5            [11]  106 	push	hl
   0050 CDr00r00      [17]  107 	call	_cpct_drawStringM0
   0053 21 06 00      [10]  108 	ld	hl,#6
   0056 39            [11]  109 	add	hl,sp
   0057 F9            [ 6]  110 	ld	sp,hl
                            111 ;src/score/score.c:18: for(i=0; i<5; i++){
   0058 01 00 00      [10]  112 	ld	bc,#0x0000
   005B                     113 00102$:
                            114 ;src/score/score.c:19: memptr = cpct_getScreenPtr(CPCT_VMEM_START, 60 + i*4, 14); // dibuja 5 corazones
   005B 79            [ 4]  115 	ld	a,c
   005C 87            [ 4]  116 	add	a, a
   005D 87            [ 4]  117 	add	a, a
   005E C6 3C         [ 7]  118 	add	a, #0x3C
   0060 57            [ 4]  119 	ld	d,a
   0061 C5            [11]  120 	push	bc
   0062 3E 0E         [ 7]  121 	ld	a,#0x0E
   0064 F5            [11]  122 	push	af
   0065 33            [ 6]  123 	inc	sp
   0066 D5            [11]  124 	push	de
   0067 33            [ 6]  125 	inc	sp
   0068 21 00 C0      [10]  126 	ld	hl,#0xC000
   006B E5            [11]  127 	push	hl
   006C CDr00r00      [17]  128 	call	_cpct_getScreenPtr
   006F EB            [ 4]  129 	ex	de,hl
   0070 21 03 06      [10]  130 	ld	hl,#0x0603
   0073 E5            [11]  131 	push	hl
   0074 D5            [11]  132 	push	de
   0075 21r00r00      [10]  133 	ld	hl,#_g_heart
   0078 E5            [11]  134 	push	hl
   0079 CDr00r00      [17]  135 	call	_cpct_drawSprite
   007C C1            [10]  136 	pop	bc
                            137 ;src/score/score.c:18: for(i=0; i<5; i++){
   007D 03            [ 6]  138 	inc	bc
   007E 79            [ 4]  139 	ld	a,c
   007F D6 05         [ 7]  140 	sub	a, #0x05
   0081 78            [ 4]  141 	ld	a,b
   0082 17            [ 4]  142 	rla
   0083 3F            [ 4]  143 	ccf
   0084 1F            [ 4]  144 	rra
   0085 DE 80         [ 7]  145 	sbc	a, #0x80
   0087 38 D2         [12]  146 	jr	C,00102$
   0089 C9            [10]  147 	ret
   008A                     148 ___str_0:
   008A 53 43 4F 52 45      149 	.ascii "SCORE"
   008F 00                  150 	.db 0x00
   0090                     151 ___str_1:
   0090 30 30 30 30 30      152 	.ascii "00000"
   0095 00                  153 	.db 0x00
   0096                     154 ___str_2:
   0096 4C 49 56 45 53      155 	.ascii "LIVES"
   009B 00                  156 	.db 0x00
                            157 ;src/score/score.c:24: void modificarPuntuacion(u16 puntuacion){
                            158 ;	---------------------------------
                            159 ; Function modificarPuntuacion
                            160 ; ---------------------------------
   009C                     161 _modificarPuntuacion::
   009C DD E5         [15]  162 	push	ix
   009E DD 21 00 00   [14]  163 	ld	ix,#0
   00A2 DD 39         [15]  164 	add	ix,sp
   00A4 3B            [ 6]  165 	dec	sp
                            166 ;src/score/score.c:26: u16 puntuacion_aux = puntuacion;
   00A5 DD 5E 04      [19]  167 	ld	e,4 (ix)
   00A8 DD 56 05      [19]  168 	ld	d,5 (ix)
                            169 ;src/score/score.c:27: borrarPantalla(0, 14, 25, 7);
   00AB D5            [11]  170 	push	de
   00AC 21 19 07      [10]  171 	ld	hl,#0x0719
   00AF E5            [11]  172 	push	hl
   00B0 21 00 0E      [10]  173 	ld	hl,#0x0E00
   00B3 E5            [11]  174 	push	hl
   00B4 CDr00r00      [17]  175 	call	_borrarPantalla
   00B7 F1            [10]  176 	pop	af
   00B8 F1            [10]  177 	pop	af
   00B9 21 00 0E      [10]  178 	ld	hl,#0x0E00
   00BC E5            [11]  179 	push	hl
   00BD 26 C0         [ 7]  180 	ld	h, #0xC0
   00BF E5            [11]  181 	push	hl
   00C0 CDr00r00      [17]  182 	call	_cpct_getScreenPtr
   00C3 4D            [ 4]  183 	ld	c,l
   00C4 44            [ 4]  184 	ld	b,h
   00C5 D1            [10]  185 	pop	de
                            186 ;src/score/score.c:30: cpct_drawCharM0(memptr, 2, 0, (puntuacion_aux%10) + 48);
   00C6 C5            [11]  187 	push	bc
   00C7 D5            [11]  188 	push	de
   00C8 21 0A 00      [10]  189 	ld	hl,#0x000A
   00CB E5            [11]  190 	push	hl
   00CC D5            [11]  191 	push	de
   00CD CDr00r00      [17]  192 	call	__moduint
   00D0 F1            [10]  193 	pop	af
   00D1 F1            [10]  194 	pop	af
   00D2 D1            [10]  195 	pop	de
   00D3 C1            [10]  196 	pop	bc
   00D4 7D            [ 4]  197 	ld	a,l
   00D5 C6 30         [ 7]  198 	add	a, #0x30
   00D7 DD 77 FF      [19]  199 	ld	-1 (ix),a
   00DA C5            [11]  200 	push	bc
   00DB FD E1         [14]  201 	pop	iy
   00DD C5            [11]  202 	push	bc
   00DE D5            [11]  203 	push	de
   00DF DD 7E FF      [19]  204 	ld	a,-1 (ix)
   00E2 F5            [11]  205 	push	af
   00E3 33            [ 6]  206 	inc	sp
   00E4 21 02 00      [10]  207 	ld	hl,#0x0002
   00E7 E5            [11]  208 	push	hl
   00E8 FD E5         [15]  209 	push	iy
   00EA CDr00r00      [17]  210 	call	_cpct_drawCharM0
   00ED F1            [10]  211 	pop	af
   00EE F1            [10]  212 	pop	af
   00EF 33            [ 6]  213 	inc	sp
   00F0 D1            [10]  214 	pop	de
   00F1 21 E8 03      [10]  215 	ld	hl,#0x03E8
   00F4 E5            [11]  216 	push	hl
   00F5 D5            [11]  217 	push	de
   00F6 CDr00r00      [17]  218 	call	__divuint
   00F9 F1            [10]  219 	pop	af
   00FA F1            [10]  220 	pop	af
   00FB 11 0A 00      [10]  221 	ld	de,#0x000A
   00FE D5            [11]  222 	push	de
   00FF E5            [11]  223 	push	hl
   0100 CDr00r00      [17]  224 	call	__moduint
   0103 F1            [10]  225 	pop	af
   0104 F1            [10]  226 	pop	af
   0105 C1            [10]  227 	pop	bc
   0106 7D            [ 4]  228 	ld	a,l
   0107 C6 30         [ 7]  229 	add	a, #0x30
   0109 67            [ 4]  230 	ld	h,a
   010A 79            [ 4]  231 	ld	a,c
   010B C6 04         [ 7]  232 	add	a, #0x04
   010D 5F            [ 4]  233 	ld	e,a
   010E 78            [ 4]  234 	ld	a,b
   010F CE 00         [ 7]  235 	adc	a, #0x00
   0111 57            [ 4]  236 	ld	d,a
   0112 C5            [11]  237 	push	bc
   0113 E5            [11]  238 	push	hl
   0114 33            [ 6]  239 	inc	sp
   0115 21 02 00      [10]  240 	ld	hl,#0x0002
   0118 E5            [11]  241 	push	hl
   0119 D5            [11]  242 	push	de
   011A CDr00r00      [17]  243 	call	_cpct_drawCharM0
   011D F1            [10]  244 	pop	af
   011E 33            [ 6]  245 	inc	sp
   011F 21 64 00      [10]  246 	ld	hl,#0x0064
   0122 E3            [19]  247 	ex	(sp),hl
   0123 DD 6E 04      [19]  248 	ld	l,4 (ix)
   0126 DD 66 05      [19]  249 	ld	h,5 (ix)
   0129 E5            [11]  250 	push	hl
   012A CDr00r00      [17]  251 	call	__divuint
   012D F1            [10]  252 	pop	af
   012E F1            [10]  253 	pop	af
   012F 11 0A 00      [10]  254 	ld	de,#0x000A
   0132 D5            [11]  255 	push	de
   0133 E5            [11]  256 	push	hl
   0134 CDr00r00      [17]  257 	call	__moduint
   0137 F1            [10]  258 	pop	af
   0138 F1            [10]  259 	pop	af
   0139 C1            [10]  260 	pop	bc
   013A 7D            [ 4]  261 	ld	a,l
   013B C6 30         [ 7]  262 	add	a, #0x30
   013D 67            [ 4]  263 	ld	h,a
   013E 79            [ 4]  264 	ld	a,c
   013F C6 08         [ 7]  265 	add	a, #0x08
   0141 5F            [ 4]  266 	ld	e,a
   0142 78            [ 4]  267 	ld	a,b
   0143 CE 00         [ 7]  268 	adc	a, #0x00
   0145 57            [ 4]  269 	ld	d,a
   0146 C5            [11]  270 	push	bc
   0147 E5            [11]  271 	push	hl
   0148 33            [ 6]  272 	inc	sp
   0149 21 02 00      [10]  273 	ld	hl,#0x0002
   014C E5            [11]  274 	push	hl
   014D D5            [11]  275 	push	de
   014E CDr00r00      [17]  276 	call	_cpct_drawCharM0
   0151 F1            [10]  277 	pop	af
   0152 33            [ 6]  278 	inc	sp
   0153 21 0A 00      [10]  279 	ld	hl,#0x000A
   0156 E3            [19]  280 	ex	(sp),hl
   0157 DD 6E 04      [19]  281 	ld	l,4 (ix)
   015A DD 66 05      [19]  282 	ld	h,5 (ix)
   015D E5            [11]  283 	push	hl
   015E CDr00r00      [17]  284 	call	__divuint
   0161 F1            [10]  285 	pop	af
   0162 F1            [10]  286 	pop	af
   0163 11 0A 00      [10]  287 	ld	de,#0x000A
   0166 D5            [11]  288 	push	de
   0167 E5            [11]  289 	push	hl
   0168 CDr00r00      [17]  290 	call	__moduint
   016B F1            [10]  291 	pop	af
   016C F1            [10]  292 	pop	af
   016D C1            [10]  293 	pop	bc
   016E 7D            [ 4]  294 	ld	a,l
   016F C6 30         [ 7]  295 	add	a, #0x30
   0171 67            [ 4]  296 	ld	h,a
   0172 79            [ 4]  297 	ld	a,c
   0173 C6 0C         [ 7]  298 	add	a, #0x0C
   0175 5F            [ 4]  299 	ld	e,a
   0176 78            [ 4]  300 	ld	a,b
   0177 CE 00         [ 7]  301 	adc	a, #0x00
   0179 57            [ 4]  302 	ld	d,a
   017A C5            [11]  303 	push	bc
   017B E5            [11]  304 	push	hl
   017C 33            [ 6]  305 	inc	sp
   017D 21 02 00      [10]  306 	ld	hl,#0x0002
   0180 E5            [11]  307 	push	hl
   0181 D5            [11]  308 	push	de
   0182 CDr00r00      [17]  309 	call	_cpct_drawCharM0
   0185 F1            [10]  310 	pop	af
   0186 F1            [10]  311 	pop	af
   0187 33            [ 6]  312 	inc	sp
   0188 C1            [10]  313 	pop	bc
                            314 ;src/score/score.c:38: cpct_drawCharM0(memptr+16, 2, 0, (puntuacion_aux%10) + 48);
   0189 21 10 00      [10]  315 	ld	hl,#0x0010
   018C 09            [11]  316 	add	hl,bc
   018D 4D            [ 4]  317 	ld	c,l
   018E 44            [ 4]  318 	ld	b,h
   018F DD 7E FF      [19]  319 	ld	a,-1 (ix)
   0192 F5            [11]  320 	push	af
   0193 33            [ 6]  321 	inc	sp
   0194 21 02 00      [10]  322 	ld	hl,#0x0002
   0197 E5            [11]  323 	push	hl
   0198 C5            [11]  324 	push	bc
   0199 CDr00r00      [17]  325 	call	_cpct_drawCharM0
   019C F1            [10]  326 	pop	af
   019D F1            [10]  327 	pop	af
   019E 33            [ 6]  328 	inc	sp
   019F 33            [ 6]  329 	inc	sp
   01A0 DD E1         [14]  330 	pop	ix
   01A2 C9            [10]  331 	ret
                            332 ;src/score/score.c:42: void modificarVidas(u8 vidas){
                            333 ;	---------------------------------
                            334 ; Function modificarVidas
                            335 ; ---------------------------------
   01A3                     336 _modificarVidas::
   01A3 DD E5         [15]  337 	push	ix
                            338 ;src/score/score.c:46: for(i=0; i<5; i++){
   01A5 01 00 00      [10]  339 	ld	bc,#0x0000
   01A8                     340 00102$:
                            341 ;src/score/score.c:47: memptr = cpct_getScreenPtr(CPCT_VMEM_START, 60 + i*4, 14); // dibuja 5 corazones
   01A8 79            [ 4]  342 	ld	a,c
   01A9 87            [ 4]  343 	add	a, a
   01AA 87            [ 4]  344 	add	a, a
   01AB C6 3C         [ 7]  345 	add	a, #0x3C
   01AD 57            [ 4]  346 	ld	d,a
   01AE C5            [11]  347 	push	bc
   01AF 3E 0E         [ 7]  348 	ld	a,#0x0E
   01B1 F5            [11]  349 	push	af
   01B2 33            [ 6]  350 	inc	sp
   01B3 D5            [11]  351 	push	de
   01B4 33            [ 6]  352 	inc	sp
   01B5 21 00 C0      [10]  353 	ld	hl,#0xC000
   01B8 E5            [11]  354 	push	hl
   01B9 CDr00r00      [17]  355 	call	_cpct_getScreenPtr
   01BC EB            [ 4]  356 	ex	de,hl
   01BD 21 03 06      [10]  357 	ld	hl,#0x0603
   01C0 E5            [11]  358 	push	hl
   01C1 D5            [11]  359 	push	de
   01C2 21r00r00      [10]  360 	ld	hl,#_g_heart
   01C5 E5            [11]  361 	push	hl
   01C6 CDr00r00      [17]  362 	call	_cpct_drawSprite
   01C9 C1            [10]  363 	pop	bc
                            364 ;src/score/score.c:46: for(i=0; i<5; i++){
   01CA 03            [ 6]  365 	inc	bc
   01CB 79            [ 4]  366 	ld	a,c
   01CC D6 05         [ 7]  367 	sub	a, #0x05
   01CE 78            [ 4]  368 	ld	a,b
   01CF 17            [ 4]  369 	rla
   01D0 3F            [ 4]  370 	ccf
   01D1 1F            [ 4]  371 	rra
   01D2 DE 80         [ 7]  372 	sbc	a, #0x80
   01D4 38 D2         [12]  373 	jr	C,00102$
   01D6 DD E1         [14]  374 	pop	ix
   01D8 C9            [10]  375 	ret
                            376 ;src/score/score.c:52: u16 aumentarPuntuacion(u16 puntuacion){
                            377 ;	---------------------------------
                            378 ; Function aumentarPuntuacion
                            379 ; ---------------------------------
   01D9                     380 _aumentarPuntuacion::
                            381 ;src/score/score.c:53: return puntuacion + 10;
   01D9 FD 21 02 00   [14]  382 	ld	iy,#2
   01DD FD 39         [15]  383 	add	iy,sp
   01DF FD 7E 00      [19]  384 	ld	a,0 (iy)
   01E2 C6 0A         [ 7]  385 	add	a, #0x0A
   01E4 6F            [ 4]  386 	ld	l, a
   01E5 FD 7E 01      [19]  387 	ld	a, 1 (iy)
   01E8 CE 00         [ 7]  388 	adc	a, #0x00
   01EA 67            [ 4]  389 	ld	h, a
   01EB C9            [10]  390 	ret
                            391 ;src/score/score.c:56: u8 quitarVidas(u8 vidas){
                            392 ;	---------------------------------
                            393 ; Function quitarVidas
                            394 ; ---------------------------------
   01EC                     395 _quitarVidas::
                            396 ;src/score/score.c:57: return vidas -1;
   01EC 21 02 00      [10]  397 	ld	hl, #2+0
   01EF 39            [11]  398 	add	hl, sp
   01F0 4E            [ 7]  399 	ld	c, (hl)
   01F1 0D            [ 4]  400 	dec	c
   01F2 69            [ 4]  401 	ld	l,c
   01F3 C9            [10]  402 	ret
                            403 	.area _CODE
                            404 	.area _INITIALIZER
                            405 	.area _CABS (ABS)
