                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.5 #9498 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module score
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _cpct_getScreenPtr
                             12 	.globl _cpct_drawStringM0
                             13 	.globl _cpct_drawSprite
                             14 	.globl _barraPuntuacionInicial
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DATA
                             22 ;--------------------------------------------------------
                             23 ; ram data
                             24 ;--------------------------------------------------------
                             25 	.area _INITIALIZED
                             26 ;--------------------------------------------------------
                             27 ; absolute external ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DABS (ABS)
                             30 ;--------------------------------------------------------
                             31 ; global & static initialisations
                             32 ;--------------------------------------------------------
                             33 	.area _HOME
                             34 	.area _GSINIT
                             35 	.area _GSFINAL
                             36 	.area _GSINIT
                             37 ;--------------------------------------------------------
                             38 ; Home
                             39 ;--------------------------------------------------------
                             40 	.area _HOME
                             41 	.area _HOME
                             42 ;--------------------------------------------------------
                             43 ; code
                             44 ;--------------------------------------------------------
                             45 	.area _CODE
                             46 ;src/score/score.c:5: void barraPuntuacionInicial(){
                             47 ;	---------------------------------
                             48 ; Function barraPuntuacionInicial
                             49 ; ---------------------------------
   0000                      50 _barraPuntuacionInicial::
                             51 ;src/score/score.c:9: memptr = cpct_getScreenPtr(CPCT_VMEM_START, 0, 2); //
   0000 21 00 02      [10]   52 	ld	hl,#0x0200
   0003 E5            [11]   53 	push	hl
   0004 26 C0         [ 7]   54 	ld	h, #0xC0
   0006 E5            [11]   55 	push	hl
   0007 CDr00r00      [17]   56 	call	_cpct_getScreenPtr
   000A 4D            [ 4]   57 	ld	c,l
   000B 44            [ 4]   58 	ld	b,h
                             59 ;src/score/score.c:10: cpct_drawStringM0("SCORE", memptr, 1, 0);
   000C 21 01 00      [10]   60 	ld	hl,#0x0001
   000F E5            [11]   61 	push	hl
   0010 C5            [11]   62 	push	bc
   0011 21r8Ar00      [10]   63 	ld	hl,#___str_0
   0014 E5            [11]   64 	push	hl
   0015 CDr00r00      [17]   65 	call	_cpct_drawStringM0
   0018 21 06 00      [10]   66 	ld	hl,#6
   001B 39            [11]   67 	add	hl,sp
   001C F9            [ 6]   68 	ld	sp,hl
                             69 ;src/score/score.c:11: memptr = cpct_getScreenPtr(CPCT_VMEM_START, 0, 14); // puntuaci√≥n inicial
   001D 21 00 0E      [10]   70 	ld	hl,#0x0E00
   0020 E5            [11]   71 	push	hl
   0021 26 C0         [ 7]   72 	ld	h, #0xC0
   0023 E5            [11]   73 	push	hl
   0024 CDr00r00      [17]   74 	call	_cpct_getScreenPtr
   0027 4D            [ 4]   75 	ld	c,l
   0028 44            [ 4]   76 	ld	b,h
                             77 ;src/score/score.c:12: cpct_drawStringM0("00000", memptr, 15, 0);
   0029 21 0F 00      [10]   78 	ld	hl,#0x000F
   002C E5            [11]   79 	push	hl
   002D C5            [11]   80 	push	bc
   002E 21r90r00      [10]   81 	ld	hl,#___str_1
   0031 E5            [11]   82 	push	hl
   0032 CDr00r00      [17]   83 	call	_cpct_drawStringM0
   0035 21 06 00      [10]   84 	ld	hl,#6
   0038 39            [11]   85 	add	hl,sp
   0039 F9            [ 6]   86 	ld	sp,hl
                             87 ;src/score/score.c:14: memptr = cpct_getScreenPtr(CPCT_VMEM_START, 60, 2); //
   003A 21 3C 02      [10]   88 	ld	hl,#0x023C
   003D E5            [11]   89 	push	hl
   003E 21 00 C0      [10]   90 	ld	hl,#0xC000
   0041 E5            [11]   91 	push	hl
   0042 CDr00r00      [17]   92 	call	_cpct_getScreenPtr
   0045 4D            [ 4]   93 	ld	c,l
   0046 44            [ 4]   94 	ld	b,h
                             95 ;src/score/score.c:15: cpct_drawStringM0("LIVES", memptr, 1, 0);
   0047 21 01 00      [10]   96 	ld	hl,#0x0001
   004A E5            [11]   97 	push	hl
   004B C5            [11]   98 	push	bc
   004C 21r96r00      [10]   99 	ld	hl,#___str_2
   004F E5            [11]  100 	push	hl
   0050 CDr00r00      [17]  101 	call	_cpct_drawStringM0
   0053 21 06 00      [10]  102 	ld	hl,#6
   0056 39            [11]  103 	add	hl,sp
   0057 F9            [ 6]  104 	ld	sp,hl
                            105 ;src/score/score.c:17: for(i=0; i<5; i++){
   0058 01 00 00      [10]  106 	ld	bc,#0x0000
   005B                     107 00102$:
                            108 ;src/score/score.c:18: memptr = cpct_getScreenPtr(CPCT_VMEM_START, 60 + i*4, 14); // dibuja 5 corazones
   005B 79            [ 4]  109 	ld	a,c
   005C 87            [ 4]  110 	add	a, a
   005D 87            [ 4]  111 	add	a, a
   005E C6 3C         [ 7]  112 	add	a, #0x3C
   0060 57            [ 4]  113 	ld	d,a
   0061 C5            [11]  114 	push	bc
   0062 3E 0E         [ 7]  115 	ld	a,#0x0E
   0064 F5            [11]  116 	push	af
   0065 33            [ 6]  117 	inc	sp
   0066 D5            [11]  118 	push	de
   0067 33            [ 6]  119 	inc	sp
   0068 21 00 C0      [10]  120 	ld	hl,#0xC000
   006B E5            [11]  121 	push	hl
   006C CDr00r00      [17]  122 	call	_cpct_getScreenPtr
   006F EB            [ 4]  123 	ex	de,hl
   0070 21 03 06      [10]  124 	ld	hl,#0x0603
   0073 E5            [11]  125 	push	hl
   0074 D5            [11]  126 	push	de
   0075 21r00r00      [10]  127 	ld	hl,#_g_heart
   0078 E5            [11]  128 	push	hl
   0079 CDr00r00      [17]  129 	call	_cpct_drawSprite
   007C C1            [10]  130 	pop	bc
                            131 ;src/score/score.c:17: for(i=0; i<5; i++){
   007D 03            [ 6]  132 	inc	bc
   007E 79            [ 4]  133 	ld	a,c
   007F D6 05         [ 7]  134 	sub	a, #0x05
   0081 78            [ 4]  135 	ld	a,b
   0082 17            [ 4]  136 	rla
   0083 3F            [ 4]  137 	ccf
   0084 1F            [ 4]  138 	rra
   0085 DE 80         [ 7]  139 	sbc	a, #0x80
   0087 38 D2         [12]  140 	jr	C,00102$
   0089 C9            [10]  141 	ret
   008A                     142 ___str_0:
   008A 53 43 4F 52 45      143 	.ascii "SCORE"
   008F 00                  144 	.db 0x00
   0090                     145 ___str_1:
   0090 30 30 30 30 30      146 	.ascii "00000"
   0095 00                  147 	.db 0x00
   0096                     148 ___str_2:
   0096 4C 49 56 45 53      149 	.ascii "LIVES"
   009B 00                  150 	.db 0x00
                            151 	.area _CODE
                            152 	.area _INITIALIZER
                            153 	.area _CABS (ABS)
